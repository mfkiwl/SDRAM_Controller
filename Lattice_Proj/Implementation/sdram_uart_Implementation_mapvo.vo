
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o sdram_uart_Implementation_mapvo.vo -w -neg -gui -msgset C:/lscc/sd_ram_uart/promote.xml sdram_uart_Implementation_map.ncd 
// Netlist created on Sun May 26 19:32:17 2019
// Netlist written on Sun May 26 19:32:21 2019
// Design is for device LCMXO2-7000HC
// Design is for package TQFP144
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module sdram_uart_top ( clk, nreset, uart_rx, uart_tx, DB, ADR, BA, DQM, nCAS, 
                        CKE, nRAS, nWE, nCS, SD_CLK, LED );
  input  clk, nreset, uart_rx;
  output uart_tx;
  output [12:0] ADR;
  output [1:0] BA;
  output [1:0] DQM;
  output nCAS, CKE, nRAS, nWE, nCS, SD_CLK;
  output [3:0] LED;
  inout  [15:0] DB;
  wire   \all_modules1/sdram_controller1/repeatTimer/count_4 , 
         \all_modules1/sdram_controller1/repeat_tim_period_13 , 
         \all_modules1/sdram_controller1/repeatTimer/count_3 , 
         \all_modules1/uart_to_sdram1/n116 , 
         \all_modules1/uart_to_sdram1/n117 , \all_modules1/rx_stb1 , SD_CLK_c, 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 , 
         \all_modules1/sdram_controller1/repeatTimer/n4212 , 
         \all_modules1/sdram_controller1/repeatTimer/count_12 , 
         \all_modules1/sdram_controller1/repeatTimer/count_11 , 
         \all_modules1/rx_dat1_7 , \all_modules1/rx_dat1_6 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 , 
         \all_modules1/sdram_controller1/repeatTimer/n4215 , 
         \all_modules1/rx_sd_data_6 , \all_modules1/rx_sd_data_7 , 
         \all_modules1/sdram_controller1/repeatTimer/n4216 , 
         \all_modules1/sdram_controller1/repeatTimer/count_6 , 
         \all_modules1/sdram_controller1/repeatTimer/count_5 , 
         \all_modules1/sdram_controller1/repeatTimer/n14 , 
         \all_modules1/sdram_controller1/repeatTimer/n15 , 
         \all_modules1/sdram_controller1/count_2_derived_14_enable_14 , 
         \all_modules1/sdram_controller1/repeat_tim_reset , 
         \all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 , 
         \all_modules1/sdram_controller1/repeatTimer/n4243 , 
         \all_modules1/sdram_controller1/repeatTimer/n4244 , 
         \all_modules1/sdram_controller1/repeatTimer/n16 , 
         \all_modules1/sdram_controller1/repeatTimer/n17 , 
         \all_modules1/sdram_controller1/repeatTimer/n4242 , 
         \all_modules1/sdram_controller1/repeatTimer/count_2 , 
         \all_modules1/sdram_controller1/repeatTimer/count_1 , 
         \all_modules1/sdram_controller1/repeatTimer/n18 , 
         \all_modules1/sdram_controller1/repeatTimer/n19 , 
         \all_modules1/sdram_controller1/repeatTimer/n4241 , 
         \all_modules1/sdram_controller1/repeatTimer/count_0 , 
         \all_modules1/sdram_controller1/repeatTimer/n20 , 
         \all_modules1/sdram_controller1/repeatTimer/count_10 , 
         \all_modules1/sdram_controller1/repeatTimer/count_9 , \uart1/DAT_3 , 
         \uart1/DAT_2 , \uart1/FSM_7__N_59 , 
         \all_modules1/sdram_controller1/repeatTimer/n4214 , rx_dat_2, 
         rx_dat_3, \all_modules1/uart_to_sdram1/n113 , 
         \all_modules1/sdram_controller1/repeatTimer/n4213 , 
         \all_modules1/sdram_controller1/repeatTimer/count_8 , 
         \all_modules1/sdram_controller1/repeatTimer/count_7 , \uart1/DAT_1 , 
         \uart1/DAT_0 , rx_dat_0, rx_dat_1, 
         \all_modules1/sdram_controller1/repeatTimer/count_13 , 
         \all_modules1/rx_dat1_1 , \all_modules1/rx_dat1_0 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 , 
         \all_modules1/rx_sd_data_8 , 
         \all_modules1/sdram_controller1/repeat_tim_flag , 
         \all_modules1/rx_sd_data_9 , 
         \all_modules1/sdram_controller1/repeatTimer/n7 , 
         \all_modules1/sdram_controller1/repeatTimer/n4247 , 
         \all_modules1/sdram_controller1/repeatTimer/n8 , 
         \all_modules1/sdram_controller1/repeatTimer/n9 , 
         \all_modules1/sdram_controller1/repeatTimer/n4246 , 
         \all_modules1/sdram_controller1/repeatTimer/n10 , 
         \all_modules1/sdram_controller1/repeatTimer/n11 , 
         \all_modules1/sdram_controller1/repeatTimer/n4245 , 
         \all_modules1/sdram_controller1/repeatTimer/n12 , 
         \all_modules1/sdram_controller1/repeatTimer/n13 , 
         \all_modules1/sdram_controller1/refreshTimer/count_8 , 
         \all_modules1/sdram_controller1/refreshTimer/count_7 , 
         \all_modules1/sdram_controller1/refreshTimer/n22 , 
         \all_modules1/sdram_controller1/refreshTimer/n23 , 
         SD_CLK_c_enable_117, refresh_tim_reset, 
         \all_modules1/sdram_controller1/refreshTimer/n4232 , 
         \all_modules1/sdram_controller1/refreshTimer/n4233 , 
         \all_modules1/sdram_controller1/refreshTimer/count_6 , 
         \all_modules1/sdram_controller1/refreshTimer/count_5 , 
         \all_modules1/sdram_controller1/refreshTimer/n24 , 
         \all_modules1/sdram_controller1/refreshTimer/n25 , 
         \all_modules1/sdram_controller1/refreshTimer/n4231 , 
         \all_modules1/sdram_controller1/refreshTimer/count_4 , 
         \all_modules1/sdram_controller1/refreshTimer/count_3 , 
         \all_modules1/sdram_controller1/refreshTimer/n26 , 
         \all_modules1/sdram_controller1/refreshTimer/n27 , 
         \all_modules1/sdram_controller1/refreshTimer/n4230 , 
         \all_modules1/sdram_controller1/refreshTimer/count_23 , 
         \all_modules1/sdram_controller1/refreshTimer/n7 , 
         \all_modules1/sdram_controller1/refreshTimer/n4240 , 
         \all_modules1/sdram_controller1/refreshTimer/count_22 , 
         \all_modules1/sdram_controller1/refreshTimer/count_21 , 
         \all_modules1/sdram_controller1/refreshTimer/n8 , 
         \all_modules1/sdram_controller1/refreshTimer/n9 , 
         \all_modules1/sdram_controller1/refreshTimer/n4239 , 
         \all_modules1/sdram_controller1/refreshTimer/count_20 , 
         \all_modules1/sdram_controller1/refreshTimer/count_19 , 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_887 , 
         \all_modules1/sdram_controller1/refreshTimer/n11 , 
         \all_modules1/sdram_controller1/refreshTimer/n4238 , 
         \all_modules1/sdram_controller1/refreshTimer/count_18 , 
         \all_modules1/sdram_controller1/refreshTimer/count_17 , 
         \all_modules1/sdram_controller1/refreshTimer/n12 , 
         \all_modules1/sdram_controller1/refreshTimer/n13 , 
         \all_modules1/sdram_controller1/refreshTimer/n4237 , 
         \all_modules1/sdram_controller1/refreshTimer/count_2 , 
         \all_modules1/sdram_controller1/refreshTimer/count_1 , 
         \all_modules1/sdram_controller1/refreshTimer/n28 , 
         \all_modules1/sdram_controller1/refreshTimer/n29 , 
         \all_modules1/sdram_controller1/refreshTimer/n4229 , 
         \all_modules1/sdram_controller1/refreshTimer/count_0 , 
         \all_modules1/sdram_controller1/refreshTimer/n30 , 
         \all_modules1/sdram_controller1/refreshTimer/count_16 , 
         \all_modules1/sdram_controller1/refreshTimer/count_15 , 
         \all_modules1/sdram_controller1/refreshTimer/n14 , 
         \all_modules1/sdram_controller1/refreshTimer/n15 , 
         \all_modules1/sdram_controller1/refreshTimer/n4236 , 
         \all_modules1/sdram_controller1/refreshTimer/count_14 , 
         \all_modules1/sdram_controller1/refreshTimer/count_13 , 
         \all_modules1/sdram_controller1/refreshTimer/n16 , 
         \all_modules1/sdram_controller1/refreshTimer/n17 , 
         \all_modules1/sdram_controller1/refreshTimer/n4235 , 
         \all_modules1/sdram_controller1/refreshTimer/count_12 , 
         \all_modules1/sdram_controller1/refreshTimer/count_11 , 
         \all_modules1/sdram_controller1/refreshTimer/n18 , 
         \all_modules1/sdram_controller1/refreshTimer/n19 , 
         \all_modules1/sdram_controller1/refreshTimer/n4234 , 
         \all_modules1/sdram_controller1/refreshTimer/count_10 , 
         \all_modules1/sdram_controller1/refreshTimer/count_9 , 
         \all_modules1/sdram_controller1/refreshTimer/n20 , 
         \all_modules1/sdram_controller1/refreshTimer/n21 , 
         \all_modules1/sdram_controller1/initTimer/count_15 , 
         \all_modules1/SD_CLK_c_enable_202 , \all_modules1/n1673 , 
         \all_modules1/sdram_controller1/initTimer/n4255 , 
         \all_modules1/sdram_controller1/initTimer/n70 , SD_DATA_TEMP_8, 
         SD_DATA_TEMP_9, \all_modules1/sdram_controller1/initTimer/count_14 , 
         \all_modules1/sdram_controller1/initTimer/count_13 , 
         \all_modules1/sdram_controller1/initTimer/n71 , 
         \all_modules1/sdram_controller1/initTimer/n72 , 
         \all_modules1/sdram_controller1/SD_CLK_c_enable_68 , 
         \all_modules1/sdram_controller1/initTimer/n4254 , 
         \all_modules1/sdram_controller1/initTimer/count_12 , 
         \all_modules1/sdram_controller1/initTimer/count_11 , 
         \all_modules1/sdram_controller1/initTimer/n73 , 
         \all_modules1/sdram_controller1/initTimer/n74 , 
         \all_modules1/sdram_controller1/initTimer/n4253 , 
         \all_modules1/sdram_controller1/initTimer/count_10 , 
         \all_modules1/sdram_controller1/initTimer/count_9 , 
         \all_modules1/sdram_controller1/initTimer/n75 , 
         \all_modules1/sdram_controller1/initTimer/n76 , 
         \all_modules1/sdram_controller1/initTimer/n4252 , 
         \all_modules1/sdram_controller1/initTimer/count_8 , 
         \all_modules1/sdram_controller1/initTimer/count_7 , 
         \all_modules1/sdram_controller1/initTimer/n77 , 
         \all_modules1/sdram_controller1/initTimer/n78 , 
         \all_modules1/sdram_controller1/initTimer/n4251 , 
         \all_modules1/sdram_controller1/initTimer/count_6 , 
         \all_modules1/sdram_controller1/initTimer/count_5 , 
         \all_modules1/sdram_controller1/initTimer/n79 , 
         \all_modules1/sdram_controller1/initTimer/n80 , 
         \all_modules1/sdram_controller1/initTimer/n4250 , 
         \all_modules1/sdram_controller1/initTimer/count_4 , 
         \all_modules1/sdram_controller1/initTimer/count_3 , 
         \all_modules1/sdram_controller1/initTimer/n81 , 
         \all_modules1/sdram_controller1/initTimer/n82 , 
         \all_modules1/sdram_controller1/initTimer/n4249 , 
         \all_modules1/sdram_controller1/initTimer/count_2 , 
         \all_modules1/sdram_controller1/initTimer/count_1 , 
         \all_modules1/sdram_controller1/initTimer/n83 , 
         \all_modules1/sdram_controller1/initTimer/n84 , 
         \all_modules1/sdram_controller1/initTimer/n4248 , 
         \all_modules1/sdram_controller1/initTimer/count_0 , 
         \all_modules1/sdram_controller1/initTimer/n85 , \uart1/PS_10 , 
         \uart1/PS_9 , \all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 , 
         \uart1/n4227 , \uart1/n54 , \all_modules1/rx_sd_adr_14 , \uart1/n53 , 
         \all_modules1/rx_sd_adr_15 , \uart1/PS_8 , \uart1/PS_7 , \uart1/n55 , 
         \uart1/n2106 , \uart1/n4226 , \uart1/n56 , \uart1/PS_6 , \uart1/PS_5 , 
         \uart1/n58 , \uart1/n4225 , \uart1/n57 , \uart1/PS_4 , \uart1/PS_3 , 
         \uart1/n59 , \uart1/n60 , \uart1/n4224 , \uart1/PS_2 , \uart1/PS_1 , 
         \uart1/n61 , \uart1/n4223 , \uart1/n62 , \uart1/PS_0 , \uart1/n63 , 
         \uart_tx1/PS_8 , \uart_tx1/PS_7 , \uart_tx1/PS_10_N_755_8 , 
         \uart_tx1/PS_10_N_755_7 , \uart_tx1/PS_10__N_767 , \uart_tx1/n4220 , 
         \uart_tx1/n4221 , \uart_tx1/PS_6 , \uart_tx1/PS_5 , 
         \uart_tx1/PS_10_N_755_6 , \uart_tx1/PS_10_N_755_5 , \uart_tx1/n4219 , 
         \uart_tx1/PS_4 , \uart_tx1/PS_3 , \uart_tx1/PS_10_N_755_4 , 
         \uart_tx1/PS_10_N_755_3 , \uart_tx1/n4218 , \uart_tx1/PS_2 , 
         \uart_tx1/PS_1 , \uart_tx1/PS_10_N_755_2 , \uart_tx1/PS_10_N_755_1 , 
         \uart_tx1/n4217 , \uart_tx1/PS_0 , \uart_tx1/PS_10_N_755_0 , 
         \uart_tx1/PS_10 , \uart_tx1/PS_9 , \uart_tx1/PS_10_N_755_10 , 
         \uart_tx1/PS_10_N_755_9 , \all_modules1/tx_dat1_3 , 
         \all_modules1/tx_dat1_2 , \all_modules1/tx_dat1_1 , 
         \all_modules1/tx_dat1_0 , \all_modules1/fifo2/i_addr_3 , 
         \all_modules1/fifo2/i_addr_2 , \all_modules1/fifo2/i_addr_1 , 
         \all_modules1/i_addr_0 , \all_modules1/fifo2/m_RAM1/WAD0_INT , 
         \all_modules1/fifo2/m_RAM1/WAD1_INT , 
         \all_modules1/fifo2/m_RAM1/WAD2_INT , 
         \all_modules1/fifo2/m_RAM1/WAD3_INT , 
         \all_modules1/fifo2/m_RAM1/WD0_INT , 
         \all_modules1/fifo2/m_RAM1/WD1_INT , 
         \all_modules1/fifo2/m_RAM1/WD2_INT , 
         \all_modules1/fifo2/m_RAM1/WD3_INT , \all_modules1/fifo2/o_addr_3 , 
         \all_modules1/fifo2/o_addr_2 , \all_modules1/fifo2/o_addr_1 , 
         \all_modules1/fifo2/o_addr_0 , \all_modules1/fifo2/o_data_7_N_190_1 , 
         \all_modules1/fifo2/o_data_7_N_190_0 , 
         \all_modules1/SD_CLK_c_enable_130 , 
         \all_modules1/fifo2/SD_CLK_c_enable_127 , tx_dat_0, tx_dat_1, 
         \all_modules1/fifo2/o_data_7_N_190_3 , 
         \all_modules1/fifo2/o_data_7_N_190_2 , tx_dat_2, tx_dat_3, 
         \all_modules1/tx_dat1_7 , \all_modules1/tx_dat1_6 , 
         \all_modules1/tx_dat1_5 , \all_modules1/tx_dat1_4 , 
         \all_modules1/fifo2/m_RAM0/WAD0_INT , 
         \all_modules1/fifo2/m_RAM0/WAD1_INT , 
         \all_modules1/fifo2/m_RAM0/WAD2_INT , 
         \all_modules1/fifo2/m_RAM0/WAD3_INT , 
         \all_modules1/fifo2/m_RAM0/WD0_INT , 
         \all_modules1/fifo2/m_RAM0/WD1_INT , 
         \all_modules1/fifo2/m_RAM0/WD2_INT , 
         \all_modules1/fifo2/m_RAM0/WD3_INT , 
         \all_modules1/fifo2/o_data_7_N_190_5 , 
         \all_modules1/fifo2/o_data_7_N_190_4 , tx_dat_4, tx_dat_5, 
         \all_modules1/fifo2/o_data_7_N_190_7 , 
         \all_modules1/fifo2/o_data_7_N_190_6 , tx_dat_6, tx_dat_7, 
         \all_modules1/fifo1/i_addr_3 , \all_modules1/fifo1/i_addr_2 , 
         \all_modules1/fifo1/i_addr_1 , i_addr_0, 
         \all_modules1/fifo1/m_RAM1/WAD0_INT , 
         \all_modules1/fifo1/m_RAM1/WAD1_INT , 
         \all_modules1/fifo1/m_RAM1/WAD2_INT , 
         \all_modules1/fifo1/m_RAM1/WAD3_INT , 
         \all_modules1/fifo1/m_RAM1/WD0_INT , 
         \all_modules1/fifo1/m_RAM1/WD1_INT , 
         \all_modules1/fifo1/m_RAM1/WD2_INT , 
         \all_modules1/fifo1/m_RAM1/WD3_INT , \all_modules1/fifo1/o_addr_3 , 
         \all_modules1/fifo1/o_addr_2 , \all_modules1/fifo1/o_addr_1 , 
         \all_modules1/fifo1/o_addr_0 , \all_modules1/fifo1/o_data_7_N_190_1 , 
         \all_modules1/fifo1/o_data_7_N_190_0 , rx_ack, 
         \all_modules1/fifo1/SD_CLK_c_enable_186 , 
         \all_modules1/fifo1/o_data_7_N_190_3 , 
         \all_modules1/fifo1/o_data_7_N_190_2 , \all_modules1/rx_dat1_2 , 
         \all_modules1/rx_dat1_3 , rx_dat_7, rx_dat_6, rx_dat_5, rx_dat_4, 
         \all_modules1/fifo1/m_RAM0/WAD0_INT , 
         \all_modules1/fifo1/m_RAM0/WAD1_INT , 
         \all_modules1/fifo1/m_RAM0/WAD2_INT , 
         \all_modules1/fifo1/m_RAM0/WAD3_INT , 
         \all_modules1/fifo1/m_RAM0/WD0_INT , 
         \all_modules1/fifo1/m_RAM0/WD1_INT , 
         \all_modules1/fifo1/m_RAM0/WD2_INT , 
         \all_modules1/fifo1/m_RAM0/WD3_INT , 
         \all_modules1/fifo1/o_data_7_N_190_5 , 
         \all_modules1/fifo1/o_data_7_N_190_4 , \all_modules1/rx_dat1_4 , 
         \all_modules1/rx_dat1_5 , \all_modules1/fifo1/o_data_7_N_190_7 , 
         \all_modules1/fifo1/o_data_7_N_190_6 , 
         \all_modules1/sdram_to_uart1/state_1 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_1 , 
         \all_modules1/sdram_to_uart1/n4551 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_9 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_0 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_8 , \all_modules1/tx_stb1 , 
         LED_c_0, LED_c_1, \all_modules1/sdram_to_uart1/n10_adj_896 , 
         \all_modules1/sdram_to_uart1/rd_wt_operation_1 , 
         \all_modules1/sdram_to_uart1/state_0 , 
         \all_modules1/sdram_to_uart1/n8_adj_895 , LED_c_2, LED_c_3, 
         \all_modules1/fifo1/i_addr_1_2 , \all_modules1/fifo1/i_addr_1_1 , 
         \all_modules1/fifo1/i_addr_1_3 , n4318, \all_modules1/fifo1/n2 , 
         \all_modules1/fifo1/n6_adj_884 , \all_modules1/fifo1/empty_N_203 , 
         \all_modules1/fifo1/n4849 , \all_modules1/fifo1/n36 , 
         \all_modules1/fifo1/n23 , \all_modules1/fifo1/n24 , 
         \all_modules1/fifo1/n22 , \all_modules1/fifo2/i_addr_1_2 , 
         \all_modules1/fifo2/i_addr_1_1 , \all_modules1/fifo2/i_addr_1_3 , 
         \all_modules1/fifo2/n4319 , \all_modules1/fifo2/n2 , 
         \all_modules1/fifo2/n6 , tx_ack, \all_modules1/fifo2/empty_N_203 , 
         tx_stb, \all_modules1/fifo2/n36 , \all_modules1/fifo2/n23 , 
         \all_modules1/fifo2/n24 , \all_modules1/fifo2/n22 , 
         \all_modules1/fifo2/n6_adj_885 , \all_modules1/full_N_199 , nreset_c, 
         \all_modules1/n8 , \all_modules1/uart_to_sdram1/n2579 , 
         \all_modules1/uart_to_sdram1/next_state_2__N_275 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 , 
         \all_modules1/rd_wt_operation_1 , \all_modules1/uart_to_sdram1/n4616 , 
         \all_modules1/uart_to_sdram1/i_ack_N_284 , 
         \all_modules1/uart_to_sdram1/rd_wt_operation_0 , 
         \all_modules1/uart_to_sdram1/o_stb_wt_N_291 , \all_modules1/n3493 , 
         \all_modules1/fifo1/n6 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_635 , 
         \all_modules1/sdram_controller1/arbBank/n5013 , arb_delay_2_N_350_1, 
         \all_modules1/sdram_controller1/arb_delay_2 , 
         \all_modules1/sdram_controller1/arbBank/n4353 , 
         \all_modules1/sdram_controller1/arb_delay_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_1 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_23 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_22 , 
         \all_modules1/sdram_controller1/arbBank/n4866 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_631 , 
         \uart1/RXDa , \uart1/RXDb , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_622 , 
         \all_modules1/sdram_controller1/arbBank/n5016 , 
         \all_modules1/sdram_controller1/arbBank/n4350 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_625 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_628 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_1 , 
         \all_modules1/sdram_controller1/arbBank/n4863 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_618 , 
         \uart1/RXDc , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_609 , 
         \all_modules1/sdram_controller1/arbBank/n5019 , 
         \all_modules1/sdram_controller1/arbBank/n4352 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_612 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_615 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_1 , 
         \all_modules1/sdram_controller1/arbBank/n4865 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_605 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_1 , 
         \all_modules1/sdram_controller1/arbBank/n4858 , 
         \all_modules1/sdram_controller1/arbBank/n5012 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_602 , uart_rx_c, 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_599 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_591 , 
         \all_modules1/sdram_controller1/rd_busy_flag , 
         \all_modules1/sdram_controller1/wt_busy_flag , 
         \all_modules1/sdram_controller1/next_state_3__N_455 , n370, DQM_c, 
         count_0, \all_modules1/sdram_controller1/count_1 , 
         \all_modules1/sdram_controller1/delayTimer/n9 , SD_CLK_c_enable_120, 
         \all_modules1/sdram_controller1/delay_tim_reset , 
         \all_modules1/sdram_controller1/delayTimer/count_3 , 
         \all_modules1/sdram_controller1/delayTimer/count_2 , 
         \all_modules1/sdram_controller1/delayTimer/n7 , 
         \all_modules1/sdram_controller1/delayTimer/n8 , \n5023\000/BUF1 , 
         \all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_51 , 
         \all_modules1/sdram_controller1/n374 , 
         \all_modules1/sdram_controller1/n4837 , 
         \all_modules1/sdram_controller1/init_done_N_443 , 
         \all_modules1/sdram_controller1/n8 , 
         \all_modules1/sdram_controller1/n368 , 
         \all_modules1/sdram_controller1/n367 , 
         \all_modules1/sdram_controller1/n4407 , 
         \all_modules1/sdram_controller1/n2191 , 
         \all_modules1/sdram_controller1/n372 , \all_modules1/n4842 , 
         refresh_tim_flag, \all_modules1/sdram_controller1/n2187 , 
         \all_modules1/sdram_controller1/n4542 , 
         \all_modules1/sdram_controller1/n371 , 
         \all_modules1/sdram_controller1/n2185 , 
         \all_modules1/sdram_controller1/delay_tim_period_3 , 
         \all_modules1/n4862 , \all_modules1/o_stb_rd_N_289 , 
         \all_modules1/n4861 , \all_modules1/n3503 , 
         \all_modules1/sdram_controller1/n4556 , n5023, \all_modules1/n4850 , 
         rd_i_ack_N_462, \all_modules1/n53 , \all_modules1/n4839 , 
         \all_modules1/n4872 , \all_modules1/sdram_to_uart1/next_state_0 , 
         \all_modules1/sdram_to_uart1/n2422 , 
         \all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 , 
         \all_modules1/uart_to_sdram1/next_state_2__N_273 , 
         \all_modules1/uart_to_sdram1/n4 , \all_modules1/uart_to_sdram1/n4291 , 
         \all_modules1/uart_to_sdram1/n4559 , 
         \all_modules1/uart_to_sdram1/n2157 , 
         \all_modules1/uart_to_sdram1/n4411 , 
         \all_modules1/uart_to_sdram1/n2170 , 
         \all_modules1/uart_to_sdram1/n2123 , 
         \all_modules1/uart_to_sdram1/rd_wt_operation_1_N_271_0 , n376, n19, 
         n11, \all_modules1/sdram_controller1/n4625 , n4642, n2541, 
         \all_modules1/sdram_controller1/n377 , n12, 
         \all_modules1/sdram_controller1/n2180 , 
         \all_modules1/sdram_controller1/n2189 , 
         \all_modules1/sdram_controller1/n324 , 
         \all_modules1/sdram_controller1/n63 , 
         \all_modules1/sdram_controller1/n4546 , 
         \all_modules1/sdram_controller1/n396 , \uart_tx1/FSM_7__N_768 , 
         \uart_tx1/DAT_7__N_878 , \all_modules1/fifo2/SD_CLK_c_enable_17 , 
         \uart1/n4590 , \uart1/FSM_7__N_52 , \uart1/n4582 , 
         \uart1/FSM_7__N_51 , \uart1/n2645 , \uart1/n2651 , 
         \uart1/SD_CLK_c_enable_153 , \uart1/n4567 , \uart1/FSM_7__N_54 , 
         \uart1/n4591 , \uart1/FSM_7__N_53 , \uart1/n2636 , \uart1/n2639 , 
         \uart1/n4585 , \uart1/FSM_7__N_56 , \uart1/DAT_5 , \uart1/n4566 , 
         \uart1/FSM_7__N_55 , \uart1/DAT_4 , \uart1/n2648 , \uart1/n2654 , 
         \uart1/n4576 , \uart1/FSM_7__N_58 , \uart1/DAT_7 , \uart1/n4577 , 
         \uart1/FSM_7__N_57 , \uart1/DAT_6 , \uart1/n2633 , \uart1/n2642 , 
         \uart1/SMPL , \uart1/FSM_7__N_50 , \uart1/FSM_7__N_49 , 
         \uart1/FSM_7__N_60 , \uart1/n2145 , \uart1/n2153 , \uart1/n2855 , 
         \uart1/PS_10_N_37_6 , \uart1/PS_10_N_37_1 , \uart1/PS_10__N_48 , 
         \uart1/PS_10_N_37_9 , \uart1/PS_10_N_37_7 , \uart1/PS_10_N_37_10 , 
         \uart1/n16 , \uart1/n20 , \uart1/rx_stb , \uart1/n4841 , 
         \uart1/STBo_N_161 , \uart_tx1/FSM_7__N_780 , \uart_tx1/SMPL , 
         \uart_tx1/n2213 , \uart_tx1/FSM_7__N_769 , \uart_tx1/FSM_7__N_770 , 
         \uart_tx1/n2218 , \uart_tx1/n4302 , \uart_tx1/FSM_7__N_771 , VCC_net, 
         GND_net, \uart_tx1/FSM_7__N_772 , \uart_tx1/FSM_7__N_779 , 
         \uart_tx1/FSM_7__N_778 , \uart_tx1/DAT_6 , \uart_tx1/DAT_7 , 
         \uart1/n4868 , \uart1/n4852 , \uart_tx1/FSM_7__N_773 , \uart_tx1/n20 , 
         \uart_tx1/FSM_7__N_774 , \uart_tx1/FSM_7__N_775 , 
         \uart_tx1/FSM_7__N_776 , \uart_tx1/FSM_7__N_777 , 
         \all_modules1/sdram_controller1/refreshTimer/n11_adj_891 , 
         \uart_tx1/n16 , \uart_tx1/n20_adj_883 , \uart_tx1/n4774 , 
         \uart_tx1/n4775 , uart_tx_c, n2246, 
         \all_modules1/sdram_controller1/n4875 , n4876, 
         \all_modules1/sdram_controller1/arbBank/n4962 , 
         \all_modules1/sdram_controller1/arbBank/n4965 , \uart_tx1/DAT_0 , 
         \uart_tx1/n1539 , \uart_tx1/DAT_3 , \uart_tx1/n4772 , 
         \uart_tx1/n4632 , \all_modules1/sdram_controller1/SD_ADR_TEMP_9 , 
         \all_modules1/sdram_controller1/n19 , 
         \all_modules1/sdram_controller1/n1131 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_0 , DB_out_3, DB_out_2, 
         \all_modules1/sdram_controller1/SD_CLK_c_enable_94 , 
         \all_modules1/tx_sd_data_2 , ADR_c_0, \all_modules1/tx_sd_data_3 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_13 , 
         \all_modules1/sdram_controller1/n13 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_4 , 
         \all_modules1/rx_sd_adr_17 , \all_modules1/rx_sd_adr_16 , 
         \all_modules1/sdram_controller1/n1671 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_16 , ADR_c_4, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_17 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_10 , 
         \all_modules1/sdram_controller1/n16 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_1 , DB_out_7, DB_out_6, 
         \all_modules1/tx_sd_data_6 , ADR_c_1, \all_modules1/tx_sd_data_7 , 
         \all_modules1/sdram_controller1/n18 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_7 , DB_out_9, DB_out_8, 
         \all_modules1/tx_sd_data_8 , ADR_c_7, \all_modules1/tx_sd_data_9 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_19 , 
         \all_modules1/sdram_controller1/n4844 , \all_modules1/rx_sd_data_11 , 
         \all_modules1/rx_sd_data_10 , SD_DATA_TEMP_10, ADR_c_10, 
         SD_DATA_TEMP_11, \all_modules1/sdram_controller1/SD_ADR_TEMP_11 , 
         \all_modules1/sdram_controller1/n2379 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_2 , 
         \all_modules1/rx_sd_adr_1 , \all_modules1/rx_sd_adr_0 , ADR_c_2, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_3 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_12 , 
         \all_modules1/sdram_controller1/n20 , \all_modules1/rx_sd_adr_5 , 
         \all_modules1/rx_sd_adr_4 , ADR_c_3, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_5 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_15 , 
         \all_modules1/sdram_controller1/n17 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_6 , 
         \all_modules1/rx_sd_adr_11 , \all_modules1/rx_sd_adr_10 , ADR_c_6, 
         \all_modules1/sdram_controller1/n2391 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_8 , 
         \all_modules1/rx_sd_adr_13 , \all_modules1/rx_sd_adr_12 , ADR_c_8, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_14 , 
         \all_modules1/sdram_controller1/n2385 , \all_modules1/rx_sd_adr_7 , 
         \all_modules1/rx_sd_adr_6 , ADR_c_5, \uart_tx1/DAT_4 , 
         \uart_tx1/DAT_5 , \uart_tx1/n17 , \all_modules1/rx_sd_adr_2 , 
         \all_modules1/rx_sd_adr_3 , \all_modules1/sdram_controller1/n4836 , 
         \all_modules1/rd_wt_operation_1_N_720_1 , 
         \all_modules1/tx_sd_data_11 , \all_modules1/tx_sd_data_10 , 
         \all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_10 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_11 , 
         \all_modules1/tx_sd_data_13 , \all_modules1/tx_sd_data_12 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_12 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_13 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_4 , 
         \all_modules1/sdram_to_uart1/n6 , \all_modules1/wt_o_stb1 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_5 , 
         \all_modules1/sdram_to_uart1/n6_adj_894 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_6 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_14 , 
         \all_modules1/sdram_to_uart1/n10 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_7 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_15 , 
         \all_modules1/sdram_controller1/n6 , 
         \all_modules1/sdram_controller1/n4874 , \all_modules1/rx_sd_data_5 , 
         \all_modules1/rx_sd_data_4 , nRAS_c, SD_DATA_TEMP_4, SD_DATA_TEMP_5, 
         \all_modules1/sdram_controller1/n4857 , 
         \all_modules1/sdram_controller1/n4856 , \all_modules1/rx_sd_adr_20 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_20 , DB_out_15, DB_out_14, 
         \all_modules1/tx_sd_data_14 , n4890, \all_modules1/tx_sd_data_15 , 
         \all_modules1/sdram_controller1/n9 , DB_out_5, DB_out_4, 
         \all_modules1/tx_sd_data_4 , \all_modules1/tx_sd_data_5 , 
         \all_modules1/rx_sd_adr_19 , \all_modules1/rx_sd_adr_18 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_18 , 
         \all_modules1/sdram_controller1/delay_tim_flag_N_474 , 
         \all_modules1/sdram_controller1/n9_adj_893 , 
         \all_modules1/rx_sd_data_3 , \all_modules1/rx_sd_data_2 , 
         SD_DATA_TEMP_2, SD_DATA_TEMP_3, \all_modules1/sdram_controller1/n4 , 
         SD_DATA_TEMP_6, SD_DATA_TEMP_7, 
         \all_modules1/sdram_controller1/refreshTimer/n10 , 
         \all_modules1/sdram_controller1/refreshTimer/n12_adj_892 , 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_890 , 
         \all_modules1/sdram_controller1/refreshTimer/n14_adj_889 , 
         \all_modules1/sdram_controller1/refreshTimer/n9_adj_888 , 
         \all_modules1/sdram_controller1/refreshTimer/n5 , 
         \all_modules1/sdram_controller1/initTimer/n24 , 
         \all_modules1/sdram_controller1/initTimer/n30 , 
         \all_modules1/rx_sd_data_0 , \all_modules1/rx_sd_data_1 , 
         \all_modules1/sdram_controller1/initTimer/n12 , 
         \all_modules1/sdram_controller1/initTimer/n10 , 
         \all_modules1/sdram_controller1/initTimer/n6 , 
         \all_modules1/rx_sd_data_12 , \all_modules1/rx_sd_data_13 , 
         \all_modules1/fifo2/n4854 , n4605, \all_modules1/fifo1/n4316 , 
         \all_modules1/fifo1/n4855 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 , 
         \all_modules1/rx_sd_adr_22 , \all_modules1/rx_sd_adr_23 , \uart1/n18 , 
         \uart1/n4853 , \uart1/n4867 , \uart1/n4869 , \uart_tx1/n18 , BA_c_1, 
         BA_c_0, \all_modules1/rx_sd_adr_21 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_2 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_3 , 
         \all_modules1/tx_sd_data_1 , \all_modules1/tx_sd_data_0 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_21 , ADR_c_12, 
         SD_DATA_TEMP_0, ADR_c_9, SD_DATA_TEMP_1, nWE_c, SD_P_DATA_15__N_308, 
         SD_DATA_TEMP_12, SD_DATA_TEMP_13, DB_out_13, DB_out_12, DB_out_1, 
         DB_out_0, DB_out_11, DB_out_10, \all_modules1/rx_sd_adr_9 , 
         \all_modules1/rx_sd_adr_8 , ADR_c_11, \all_modules1/rx_sd_data_15 , 
         \all_modules1/rx_sd_data_14 , nCAS_c, SD_DATA_TEMP_14, 
         SD_DATA_TEMP_15, \uart_tx1/DAT_1 , \uart_tx1/DAT_2 , clk_c;

  all_modules1_SLICE_0 \all_modules1/SLICE_0 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .B0(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .M1(\all_modules1/uart_to_sdram1/n116 ), 
    .M0(\all_modules1/uart_to_sdram1/n117 ), .CE(\all_modules1/rx_stb1 ), 
    .CLK(SD_CLK_c), .Q0(\all_modules1/uart_to_sdram1/n116 ), 
    .Q1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4212 ));
  all_modules1_SLICE_1 \all_modules1/SLICE_1 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4215 ), 
    .Q0(\all_modules1/rx_sd_data_6 ), .Q1(\all_modules1/rx_sd_data_7 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4216 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_2 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_2 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4243 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4244 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_3 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_3 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4242 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4243 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_4 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_4 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4241 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4242 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_5 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_5 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4241 ));
  SLICE_6 SLICE_6( .A1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .M1(\uart1/DAT_3 ), .M0(\uart1/DAT_2 ), .CE(\uart1/FSM_7__N_59 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/sdram_controller1/repeatTimer/n4214 ), 
    .Q0(rx_dat_2), .Q1(rx_dat_3), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4215 ));
  all_modules1_SLICE_7 \all_modules1/SLICE_7 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .M0(\all_modules1/uart_to_sdram1/n113 ), .CE(\all_modules1/rx_stb1 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/sdram_controller1/repeatTimer/n4212 ), 
    .Q0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4213 ));
  SLICE_8 SLICE_8( .A1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .M1(\uart1/DAT_1 ), .M0(\uart1/DAT_0 ), .CE(\uart1/FSM_7__N_59 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/sdram_controller1/repeatTimer/n4213 ), 
    .Q0(rx_dat_0), .Q1(rx_dat_1), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4214 ));
  all_modules1_SLICE_9 \all_modules1/SLICE_9 ( 
    .B0(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_13 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4216 ), 
    .Q0(\all_modules1/rx_sd_data_8 ), 
    .F1(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .Q1(\all_modules1/rx_sd_data_9 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_10 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_10 ( 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_13 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4247 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_13 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_11 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_11 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4246 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4247 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_12 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_12 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4245 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4246 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_13 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_13 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4244 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4245 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_14 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_14 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4232 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4233 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_15 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_15 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4231 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4232 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_16 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_16 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4230 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4231 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_17 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_17 ( 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4240 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_23 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_18 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_18 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4239 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4240 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_19 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_19 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n10_adj_887 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4238 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n10_adj_887 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4239 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_20 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_20 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4237 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4238 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_21 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_21 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4229 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4230 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_22 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_22 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4229 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_23 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_23 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4236 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4237 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_24 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_24 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4235 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4236 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_25 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_25 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4234 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4235 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_26 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_26 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .CE(SD_CLK_c_enable_117), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4233 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4234 ));
  all_modules1_sdram_controller1_SLICE_27 
    \all_modules1/sdram_controller1/SLICE_27 ( 
    .A0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .M1(\all_modules1/rx_sd_data_9 ), .M0(\all_modules1/rx_sd_data_8 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/sdram_controller1/initTimer/n4255 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n70 ), .Q0(SD_DATA_TEMP_8), 
    .Q1(SD_DATA_TEMP_9));
  all_modules1_sdram_controller1_initTimer_SLICE_28 
    \all_modules1/sdram_controller1/initTimer/SLICE_28 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n71 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n72 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4254 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n72 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n71 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4255 ));
  all_modules1_sdram_controller1_initTimer_SLICE_29 
    \all_modules1/sdram_controller1/initTimer/SLICE_29 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n73 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n74 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4253 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n74 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n73 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4254 ));
  all_modules1_sdram_controller1_initTimer_SLICE_30 
    \all_modules1/sdram_controller1/initTimer/SLICE_30 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n75 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n76 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4252 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n76 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n75 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4253 ));
  all_modules1_sdram_controller1_initTimer_SLICE_31 
    \all_modules1/sdram_controller1/initTimer/SLICE_31 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n77 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n78 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4251 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n78 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n77 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4252 ));
  all_modules1_sdram_controller1_initTimer_SLICE_32 
    \all_modules1/sdram_controller1/initTimer/SLICE_32 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n79 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n80 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4250 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n80 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n79 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4251 ));
  all_modules1_sdram_controller1_initTimer_SLICE_33 
    \all_modules1/sdram_controller1/initTimer/SLICE_33 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n81 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n82 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4249 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n82 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n81 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4250 ));
  all_modules1_sdram_controller1_initTimer_SLICE_34 
    \all_modules1/sdram_controller1/initTimer/SLICE_34 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n83 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n84 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4248 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n84 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n83 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4249 ));
  all_modules1_sdram_controller1_initTimer_SLICE_35 
    \all_modules1/sdram_controller1/initTimer/SLICE_35 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n85 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/sdram_controller1/initTimer/n85 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4248 ));
  SLICE_36 SLICE_36( .A1(\uart1/PS_10 ), .A0(\uart1/PS_9 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4227 ), .F0(\uart1/n54 ), .Q0(\all_modules1/rx_sd_adr_14 ), 
    .F1(\uart1/n53 ), .Q1(\all_modules1/rx_sd_adr_15 ));
  uart1_SLICE_37 \uart1/SLICE_37 ( .A1(\uart1/PS_8 ), .A0(\uart1/PS_7 ), 
    .DI1(\uart1/n55 ), .LSR(\uart1/n2106 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4226 ), .F0(\uart1/n56 ), .F1(\uart1/n55 ), .Q1(\uart1/PS_8 ), 
    .FCO(\uart1/n4227 ));
  uart1_SLICE_38 \uart1/SLICE_38 ( .A1(\uart1/PS_6 ), .A0(\uart1/PS_5 ), 
    .DI0(\uart1/n58 ), .LSR(\uart1/n2106 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4225 ), .F0(\uart1/n58 ), .Q0(\uart1/PS_5 ), .F1(\uart1/n57 ), 
    .FCO(\uart1/n4226 ));
  uart1_SLICE_39 \uart1/SLICE_39 ( .A1(\uart1/PS_4 ), .A0(\uart1/PS_3 ), 
    .DI1(\uart1/n59 ), .DI0(\uart1/n60 ), .LSR(\uart1/n2106 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4224 ), .F0(\uart1/n60 ), .Q0(\uart1/PS_3 ), .F1(\uart1/n59 ), 
    .Q1(\uart1/PS_4 ), .FCO(\uart1/n4225 ));
  uart1_SLICE_40 \uart1/SLICE_40 ( .A1(\uart1/PS_2 ), .A0(\uart1/PS_1 ), 
    .DI1(\uart1/n61 ), .LSR(\uart1/n2106 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4223 ), .F0(\uart1/n62 ), .F1(\uart1/n61 ), .Q1(\uart1/PS_2 ), 
    .FCO(\uart1/n4224 ));
  uart1_SLICE_41 \uart1/SLICE_41 ( .A1(\uart1/PS_0 ), .DI1(\uart1/n63 ), 
    .LSR(\uart1/n2106 ), .CLK(SD_CLK_c), .F1(\uart1/n63 ), .Q1(\uart1/PS_0 ), 
    .FCO(\uart1/n4223 ));
  uart_tx1_SLICE_42 \uart_tx1/SLICE_42 ( .A1(\uart_tx1/PS_8 ), 
    .A0(\uart_tx1/PS_7 ), .DI1(\uart_tx1/PS_10_N_755_8 ), 
    .DI0(\uart_tx1/PS_10_N_755_7 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4220 ), .F0(\uart_tx1/PS_10_N_755_7 ), 
    .Q0(\uart_tx1/PS_7 ), .F1(\uart_tx1/PS_10_N_755_8 ), .Q1(\uart_tx1/PS_8 ), 
    .FCO(\uart_tx1/n4221 ));
  uart_tx1_SLICE_43 \uart_tx1/SLICE_43 ( .A1(\uart_tx1/PS_6 ), 
    .A0(\uart_tx1/PS_5 ), .DI1(\uart_tx1/PS_10_N_755_6 ), 
    .DI0(\uart_tx1/PS_10_N_755_5 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4219 ), .F0(\uart_tx1/PS_10_N_755_5 ), 
    .Q0(\uart_tx1/PS_5 ), .F1(\uart_tx1/PS_10_N_755_6 ), .Q1(\uart_tx1/PS_6 ), 
    .FCO(\uart_tx1/n4220 ));
  uart_tx1_SLICE_44 \uart_tx1/SLICE_44 ( .A1(\uart_tx1/PS_4 ), 
    .A0(\uart_tx1/PS_3 ), .DI1(\uart_tx1/PS_10_N_755_4 ), 
    .DI0(\uart_tx1/PS_10_N_755_3 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4218 ), .F0(\uart_tx1/PS_10_N_755_3 ), 
    .Q0(\uart_tx1/PS_3 ), .F1(\uart_tx1/PS_10_N_755_4 ), .Q1(\uart_tx1/PS_4 ), 
    .FCO(\uart_tx1/n4219 ));
  uart_tx1_SLICE_45 \uart_tx1/SLICE_45 ( .A1(\uart_tx1/PS_2 ), 
    .A0(\uart_tx1/PS_1 ), .DI1(\uart_tx1/PS_10_N_755_2 ), 
    .DI0(\uart_tx1/PS_10_N_755_1 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4217 ), .F0(\uart_tx1/PS_10_N_755_1 ), 
    .Q0(\uart_tx1/PS_1 ), .F1(\uart_tx1/PS_10_N_755_2 ), .Q1(\uart_tx1/PS_2 ), 
    .FCO(\uart_tx1/n4218 ));
  uart_tx1_SLICE_46 \uart_tx1/SLICE_46 ( .A1(\uart_tx1/PS_0 ), 
    .DI1(\uart_tx1/PS_10_N_755_0 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .F1(\uart_tx1/PS_10_N_755_0 ), .Q1(\uart_tx1/PS_0 ), 
    .FCO(\uart_tx1/n4217 ));
  uart_tx1_SLICE_47 \uart_tx1/SLICE_47 ( .A1(\uart_tx1/PS_10 ), 
    .A0(\uart_tx1/PS_9 ), .DI1(\uart_tx1/PS_10_N_755_10 ), 
    .DI0(\uart_tx1/PS_10_N_755_9 ), .LSR(\uart_tx1/PS_10__N_767 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4221 ), .F0(\uart_tx1/PS_10_N_755_9 ), 
    .Q0(\uart_tx1/PS_9 ), .F1(\uart_tx1/PS_10_N_755_10 ), 
    .Q1(\uart_tx1/PS_10 ));
  all_modules1_fifo2_m_RAM1_SLICE_48 \all_modules1/fifo2/m_RAM1/SLICE_48 ( 
    .D1(\all_modules1/tx_dat1_3 ), .C1(\all_modules1/tx_dat1_2 ), 
    .B1(\all_modules1/tx_dat1_1 ), .A1(\all_modules1/tx_dat1_0 ), 
    .D0(\all_modules1/fifo2/i_addr_3 ), .C0(\all_modules1/fifo2/i_addr_2 ), 
    .B0(\all_modules1/fifo2/i_addr_1 ), .A0(\all_modules1/i_addr_0 ), 
    .WADO0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WADO1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WADO2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WADO3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WDO0(\all_modules1/fifo2/m_RAM1/WD0_INT ), 
    .WDO1(\all_modules1/fifo2/m_RAM1/WD1_INT ), 
    .WDO2(\all_modules1/fifo2/m_RAM1/WD2_INT ), 
    .WDO3(\all_modules1/fifo2/m_RAM1/WD3_INT ));
  all_modules1_fifo2_SLICE_49 \all_modules1/fifo2/SLICE_49 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_190_1 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_190_0 ), 
    .WRE(\all_modules1/SD_CLK_c_enable_130 ), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/o_data_7_N_190_0 ), .Q0(tx_dat_0), 
    .F1(\all_modules1/fifo2/o_data_7_N_190_1 ), .Q1(tx_dat_1), 
    .WAD0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM1/WD0_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM1/WD1_INT ));
  all_modules1_fifo2_SLICE_50 \all_modules1/fifo2/SLICE_50 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_190_3 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_190_2 ), 
    .WRE(\all_modules1/SD_CLK_c_enable_130 ), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/o_data_7_N_190_2 ), .Q0(tx_dat_2), 
    .F1(\all_modules1/fifo2/o_data_7_N_190_3 ), .Q1(tx_dat_3), 
    .WAD0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM1/WD2_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM1/WD3_INT ));
  all_modules1_fifo2_m_RAM0_SLICE_51 \all_modules1/fifo2/m_RAM0/SLICE_51 ( 
    .D1(\all_modules1/tx_dat1_7 ), .C1(\all_modules1/tx_dat1_6 ), 
    .B1(\all_modules1/tx_dat1_5 ), .A1(\all_modules1/tx_dat1_4 ), 
    .D0(\all_modules1/fifo2/i_addr_3 ), .C0(\all_modules1/fifo2/i_addr_2 ), 
    .B0(\all_modules1/fifo2/i_addr_1 ), .A0(\all_modules1/i_addr_0 ), 
    .WADO0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WADO1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WADO2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WADO3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WDO0(\all_modules1/fifo2/m_RAM0/WD0_INT ), 
    .WDO1(\all_modules1/fifo2/m_RAM0/WD1_INT ), 
    .WDO2(\all_modules1/fifo2/m_RAM0/WD2_INT ), 
    .WDO3(\all_modules1/fifo2/m_RAM0/WD3_INT ));
  all_modules1_fifo2_SLICE_52 \all_modules1/fifo2/SLICE_52 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_190_5 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_190_4 ), 
    .WRE(\all_modules1/SD_CLK_c_enable_130 ), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/o_data_7_N_190_4 ), .Q0(tx_dat_4), 
    .F1(\all_modules1/fifo2/o_data_7_N_190_5 ), .Q1(tx_dat_5), 
    .WAD0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM0/WD0_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM0/WD1_INT ));
  all_modules1_fifo2_SLICE_53 \all_modules1/fifo2/SLICE_53 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_190_7 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_190_6 ), 
    .WRE(\all_modules1/SD_CLK_c_enable_130 ), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/o_data_7_N_190_6 ), .Q0(tx_dat_6), 
    .F1(\all_modules1/fifo2/o_data_7_N_190_7 ), .Q1(tx_dat_7), 
    .WAD0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM0/WD2_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM0/WD3_INT ));
  all_modules1_fifo1_m_RAM1_SLICE_54 \all_modules1/fifo1/m_RAM1/SLICE_54 ( 
    .D1(rx_dat_3), .C1(rx_dat_2), .B1(rx_dat_1), .A1(rx_dat_0), 
    .D0(\all_modules1/fifo1/i_addr_3 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(\all_modules1/fifo1/i_addr_1 ), .A0(i_addr_0), 
    .WADO0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WADO1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WADO2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WADO3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WDO0(\all_modules1/fifo1/m_RAM1/WD0_INT ), 
    .WDO1(\all_modules1/fifo1/m_RAM1/WD1_INT ), 
    .WDO2(\all_modules1/fifo1/m_RAM1/WD2_INT ), 
    .WDO3(\all_modules1/fifo1/m_RAM1/WD3_INT ));
  all_modules1_fifo1_SLICE_55 \all_modules1/fifo1/SLICE_55 ( 
    .D1(\all_modules1/fifo1/o_addr_3 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(\all_modules1/fifo1/o_addr_1 ), .A1(\all_modules1/fifo1/o_addr_0 ), 
    .D0(\all_modules1/fifo1/o_addr_3 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(\all_modules1/fifo1/o_addr_0 ), 
    .DI1(\all_modules1/fifo1/o_data_7_N_190_1 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_190_0 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_190_0 ), .Q0(\all_modules1/rx_dat1_0 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_190_1 ), .Q1(\all_modules1/rx_dat1_1 ), 
    .WAD0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM1/WD0_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM1/WD1_INT ));
  all_modules1_fifo1_SLICE_56 \all_modules1/fifo1/SLICE_56 ( 
    .D1(\all_modules1/fifo1/o_addr_3 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(\all_modules1/fifo1/o_addr_1 ), .A1(\all_modules1/fifo1/o_addr_0 ), 
    .D0(\all_modules1/fifo1/o_addr_3 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(\all_modules1/fifo1/o_addr_0 ), 
    .DI1(\all_modules1/fifo1/o_data_7_N_190_3 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_190_2 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_190_2 ), .Q0(\all_modules1/rx_dat1_2 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_190_3 ), .Q1(\all_modules1/rx_dat1_3 ), 
    .WAD0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM1/WD2_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM1/WD3_INT ));
  all_modules1_fifo1_m_RAM0_SLICE_57 \all_modules1/fifo1/m_RAM0/SLICE_57 ( 
    .D1(rx_dat_7), .C1(rx_dat_6), .B1(rx_dat_5), .A1(rx_dat_4), 
    .D0(\all_modules1/fifo1/i_addr_3 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(\all_modules1/fifo1/i_addr_1 ), .A0(i_addr_0), 
    .WADO0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WADO1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WADO2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WADO3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WDO0(\all_modules1/fifo1/m_RAM0/WD0_INT ), 
    .WDO1(\all_modules1/fifo1/m_RAM0/WD1_INT ), 
    .WDO2(\all_modules1/fifo1/m_RAM0/WD2_INT ), 
    .WDO3(\all_modules1/fifo1/m_RAM0/WD3_INT ));
  all_modules1_fifo1_SLICE_58 \all_modules1/fifo1/SLICE_58 ( 
    .D1(\all_modules1/fifo1/o_addr_3 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(\all_modules1/fifo1/o_addr_1 ), .A1(\all_modules1/fifo1/o_addr_0 ), 
    .D0(\all_modules1/fifo1/o_addr_3 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(\all_modules1/fifo1/o_addr_0 ), 
    .DI1(\all_modules1/fifo1/o_data_7_N_190_5 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_190_4 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_190_4 ), .Q0(\all_modules1/rx_dat1_4 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_190_5 ), .Q1(\all_modules1/rx_dat1_5 ), 
    .WAD0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM0/WD0_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM0/WD1_INT ));
  all_modules1_fifo1_SLICE_59 \all_modules1/fifo1/SLICE_59 ( 
    .D1(\all_modules1/fifo1/o_addr_3 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(\all_modules1/fifo1/o_addr_1 ), .A1(\all_modules1/fifo1/o_addr_0 ), 
    .D0(\all_modules1/fifo1/o_addr_3 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(\all_modules1/fifo1/o_addr_0 ), 
    .DI1(\all_modules1/fifo1/o_data_7_N_190_7 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_190_6 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_190_6 ), .Q0(\all_modules1/rx_dat1_6 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_190_7 ), .Q1(\all_modules1/rx_dat1_7 ), 
    .WAD0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM0/WD2_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM0/WD3_INT ));
  all_modules1_SLICE_60 \all_modules1/SLICE_60 ( 
    .D1(\all_modules1/sdram_to_uart1/state_1 ), 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ), 
    .B1(\all_modules1/sdram_to_uart1/n4551 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ), 
    .D0(\all_modules1/sdram_to_uart1/state_1 ), 
    .C0(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .B0(\all_modules1/sdram_to_uart1/n4551 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), 
    .DI1(\all_modules1/tx_dat1_1 ), .DI0(\all_modules1/tx_dat1_0 ), 
    .CE(\all_modules1/tx_stb1 ), .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_0 ), 
    .Q0(LED_c_0), .F1(\all_modules1/tx_dat1_1 ), .Q1(LED_c_1));
  all_modules1_SLICE_61 \all_modules1/SLICE_61 ( 
    .C1(\all_modules1/sdram_to_uart1/n10_adj_896 ), 
    .B1(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A1(\all_modules1/sdram_to_uart1/state_0 ), 
    .B0(\all_modules1/sdram_to_uart1/n8_adj_895 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .DI1(\all_modules1/tx_dat1_3 ), 
    .DI0(\all_modules1/tx_dat1_2 ), .CE(\all_modules1/tx_stb1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_2 ), .Q0(LED_c_2), 
    .F1(\all_modules1/tx_dat1_3 ), .Q1(LED_c_3));
  all_modules1_fifo1_SLICE_70 \all_modules1/fifo1/SLICE_70 ( 
    .C1(\all_modules1/fifo1/i_addr_2 ), .B1(i_addr_0), 
    .A1(\all_modules1/fifo1/i_addr_1 ), .B0(i_addr_0), 
    .A0(\all_modules1/fifo1/i_addr_1 ), .DI1(\all_modules1/fifo1/i_addr_1_2 ), 
    .DI0(\all_modules1/fifo1/i_addr_1_1 ), .CE(rx_ack), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/i_addr_1_1 ), .Q0(\all_modules1/fifo1/i_addr_1 ), 
    .F1(\all_modules1/fifo1/i_addr_1_2 ), .Q1(\all_modules1/fifo1/i_addr_2 ));
  all_modules1_fifo1_SLICE_71 \all_modules1/fifo1/SLICE_71 ( 
    .D1(\all_modules1/fifo1/i_addr_2 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(i_addr_0), .A1(\all_modules1/fifo1/i_addr_1 ), 
    .D0(\all_modules1/fifo1/i_addr_3 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(i_addr_0), .A0(\all_modules1/fifo1/i_addr_1 ), 
    .DI0(\all_modules1/fifo1/i_addr_1_3 ), .CE(rx_ack), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/i_addr_1_3 ), .Q0(\all_modules1/fifo1/i_addr_3 ), 
    .F1(n4318));
  all_modules1_fifo1_SLICE_72 \all_modules1/fifo1/SLICE_72 ( 
    .D1(\all_modules1/fifo1/o_addr_0 ), .C1(\all_modules1/fifo1/n2 ), 
    .B1(\all_modules1/fifo1/n6_adj_884 ), .A1(i_addr_0), 
    .C0(\all_modules1/fifo1/o_addr_0 ), .B0(\all_modules1/fifo1/empty_N_203 ), 
    .A0(\all_modules1/fifo1/n4849 ), .DI0(\all_modules1/fifo1/n36 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo1/n36 ), 
    .Q0(\all_modules1/fifo1/o_addr_0 ), .F1(\all_modules1/fifo1/empty_N_203 ));
  all_modules1_fifo1_SLICE_73 \all_modules1/fifo1/SLICE_73 ( 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/o_addr_0 ), 
    .A1(\all_modules1/fifo1/o_addr_1 ), .B0(\all_modules1/fifo1/o_addr_0 ), 
    .A0(\all_modules1/fifo1/o_addr_1 ), .DI1(\all_modules1/fifo1/n23 ), 
    .DI0(\all_modules1/fifo1/n24 ), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n24 ), .Q0(\all_modules1/fifo1/o_addr_1 ), 
    .F1(\all_modules1/fifo1/n23 ), .Q1(\all_modules1/fifo1/o_addr_2 ));
  all_modules1_fifo1_SLICE_74 \all_modules1/fifo1/SLICE_74 ( 
    .D1(\all_modules1/fifo1/o_addr_3 ), .C1(\all_modules1/fifo1/o_addr_2 ), 
    .B1(\all_modules1/fifo1/i_addr_3 ), .A1(\all_modules1/fifo1/i_addr_2 ), 
    .D0(\all_modules1/fifo1/o_addr_3 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_0 ), .A0(\all_modules1/fifo1/o_addr_1 ), 
    .DI0(\all_modules1/fifo1/n22 ), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_186 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n22 ), .Q0(\all_modules1/fifo1/o_addr_3 ), 
    .F1(\all_modules1/fifo1/n6_adj_884 ));
  all_modules1_fifo2_SLICE_75 \all_modules1/fifo2/SLICE_75 ( 
    .C1(\all_modules1/fifo2/i_addr_2 ), .B1(\all_modules1/i_addr_0 ), 
    .A1(\all_modules1/fifo2/i_addr_1 ), .B0(\all_modules1/i_addr_0 ), 
    .A0(\all_modules1/fifo2/i_addr_1 ), .DI1(\all_modules1/fifo2/i_addr_1_2 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_1 ), 
    .CE(\all_modules1/SD_CLK_c_enable_130 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/i_addr_1_1 ), .Q0(\all_modules1/fifo2/i_addr_1 ), 
    .F1(\all_modules1/fifo2/i_addr_1_2 ), .Q1(\all_modules1/fifo2/i_addr_2 ));
  all_modules1_fifo2_SLICE_76 \all_modules1/fifo2/SLICE_76 ( 
    .D1(\all_modules1/fifo2/o_addr_2 ), .C1(\all_modules1/i_addr_0 ), 
    .B1(\all_modules1/fifo2/i_addr_2 ), .A1(\all_modules1/fifo2/i_addr_1 ), 
    .D0(\all_modules1/fifo2/i_addr_2 ), .C0(\all_modules1/fifo2/i_addr_3 ), 
    .B0(\all_modules1/i_addr_0 ), .A0(\all_modules1/fifo2/i_addr_1 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_3 ), 
    .CE(\all_modules1/SD_CLK_c_enable_130 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/i_addr_1_3 ), .Q0(\all_modules1/fifo2/i_addr_3 ), 
    .F1(\all_modules1/fifo2/n4319 ));
  all_modules1_fifo2_SLICE_77 \all_modules1/fifo2/SLICE_77 ( 
    .D1(\all_modules1/fifo2/o_addr_0 ), .C1(\all_modules1/fifo2/n2 ), 
    .B1(\all_modules1/fifo2/n6 ), .A1(\all_modules1/i_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_0 ), .C0(tx_ack), 
    .B0(\all_modules1/fifo2/empty_N_203 ), .A0(tx_stb), 
    .DI0(\all_modules1/fifo2/n36 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n36 ), .Q0(\all_modules1/fifo2/o_addr_0 ), 
    .F1(\all_modules1/fifo2/empty_N_203 ));
  all_modules1_fifo2_SLICE_78 \all_modules1/fifo2/SLICE_78 ( 
    .C1(\all_modules1/fifo2/o_addr_2 ), .B1(\all_modules1/fifo2/o_addr_0 ), 
    .A1(\all_modules1/fifo2/o_addr_1 ), .B0(\all_modules1/fifo2/o_addr_0 ), 
    .A0(\all_modules1/fifo2/o_addr_1 ), .DI1(\all_modules1/fifo2/n23 ), 
    .DI0(\all_modules1/fifo2/n24 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n24 ), .Q0(\all_modules1/fifo2/o_addr_1 ), 
    .F1(\all_modules1/fifo2/n23 ), .Q1(\all_modules1/fifo2/o_addr_2 ));
  all_modules1_fifo2_SLICE_79 \all_modules1/fifo2/SLICE_79 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/i_addr_3 ), .A1(\all_modules1/fifo2/i_addr_2 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_0 ), .A0(\all_modules1/fifo2/o_addr_1 ), 
    .DI0(\all_modules1/fifo2/n22 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n22 ), .Q0(\all_modules1/fifo2/o_addr_3 ), 
    .F1(\all_modules1/fifo2/n6 ));
  all_modules1_SLICE_80 \all_modules1/SLICE_80 ( 
    .D1(\all_modules1/fifo2/o_addr_0 ), .C1(\all_modules1/fifo2/n2 ), 
    .B1(\all_modules1/fifo2/n6_adj_885 ), .A1(\all_modules1/i_addr_0 ), 
    .D0(\all_modules1/i_addr_0 ), .C0(\all_modules1/sdram_to_uart1/state_0 ), 
    .B0(\all_modules1/full_N_199 ), .A0(nreset_c), .DI0(\all_modules1/n8 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/n8 ), .Q0(\all_modules1/i_addr_0 ), 
    .F1(\all_modules1/full_N_199 ));
  all_modules1_uart_to_sdram1_SLICE_81 \all_modules1/uart_to_sdram1/SLICE_81 
    ( .C1(\all_modules1/rx_dat1_4 ), .B1(\all_modules1/rx_dat1_6 ), 
    .A1(\all_modules1/rx_dat1_1 ), .C0(\all_modules1/rx_dat1_2 ), 
    .B0(\all_modules1/rx_dat1_0 ), .A0(\all_modules1/uart_to_sdram1/n2579 ), 
    .DI0(\all_modules1/uart_to_sdram1/next_state_2__N_275 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/next_state_2__N_275 ), 
    .Q0(\all_modules1/rd_wt_operation_1 ), 
    .F1(\all_modules1/uart_to_sdram1/n4616 ));
  all_modules1_SLICE_103 \all_modules1/SLICE_103 ( 
    .C1(\all_modules1/uart_to_sdram1/i_ack_N_284 ), 
    .B1(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A1(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .D0(\all_modules1/fifo1/empty_N_203 ), .C0(\all_modules1/n3493 ), 
    .B0(nreset_c), .A0(\all_modules1/rx_stb1 ), .DI0(\all_modules1/fifo1/n6 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo1/n6 ), .Q0(\all_modules1/rx_stb1 ), 
    .F1(\all_modules1/n3493 ));
  all_modules1_sdram_controller1_arbBank_SLICE_116 
    \all_modules1/sdram_controller1/arbBank/SLICE_116 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_635 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5013 ), 
    .B1(arb_delay_2_N_350_1), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4353 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_635 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ));
  SLICE_117 SLICE_117( .D1(arb_delay_2_N_350_1), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4866 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_635 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_631 ), 
    .M1(\uart1/RXDa ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_631 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_635 ), 
    .Q1(\uart1/RXDb ));
  all_modules1_sdram_controller1_arbBank_SLICE_118 
    \all_modules1/sdram_controller1/arbBank/SLICE_118 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_622 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5016 ), 
    .B1(arb_delay_2_N_350_1), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4350 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_622 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_625 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_628 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_628 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_625 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ));
  SLICE_119 SLICE_119( .D1(arb_delay_2_N_350_1), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4863 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_622 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_618 ), 
    .M1(\uart1/RXDb ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_618 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_622 ), 
    .Q1(\uart1/RXDc ));
  all_modules1_sdram_controller1_arbBank_SLICE_120 
    \all_modules1/sdram_controller1/arbBank/SLICE_120 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_609 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5019 ), 
    .B1(arb_delay_2_N_350_1), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4352 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_609 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_612 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_615 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_615 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_612 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_121 
    \all_modules1/sdram_controller1/arbBank/SLICE_121 ( 
    .D1(arb_delay_2_N_350_1), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4865 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_609 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_605 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_605 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_609 ));
  SLICE_122 SLICE_122( .B1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4858 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/n5012 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_602 ), 
    .M1(uart_rx_c), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_602 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4858 ), .Q1(\uart1/RXDa ));
  all_modules1_sdram_controller1_arbBank_SLICE_123 
    \all_modules1/sdram_controller1/arbBank/SLICE_123 ( 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(arb_delay_2_N_350_1), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_599 ), 
    .M0(\all_modules1/sdram_controller1/arbBank/n5012 ), .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_599 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_124 
    \all_modules1/sdram_controller1/arbBank/SLICE_124 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/n5012 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .C0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_591 ), 
    .M0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_591 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ));
  all_modules1_sdram_controller1_SLICE_125 
    \all_modules1/sdram_controller1/SLICE_125 ( 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .C0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .DI0(\all_modules1/sdram_controller1/next_state_3__N_455 ), .LSR(n370), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/next_state_3__N_455 ), 
    .Q0(\all_modules1/sdram_controller1/arb_delay_2 ), .F1(DQM_c));
  all_modules1_sdram_controller1_delayTimer_SLICE_126 
    \all_modules1/sdram_controller1/delayTimer/SLICE_126 ( .B0(count_0), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n9 ), 
    .CE(SD_CLK_c_enable_120), 
    .LSR(\all_modules1/sdram_controller1/delay_tim_reset ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/count_1 ));
  all_modules1_sdram_controller1_delayTimer_SLICE_127 
    \all_modules1/sdram_controller1/delayTimer/SLICE_127 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .C1(\all_modules1/sdram_controller1/delayTimer/count_2 ), .B1(count_0), 
    .A1(\all_modules1/sdram_controller1/count_1 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count_2 ), .B0(count_0), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .CE(SD_CLK_c_enable_120), 
    .LSR(\all_modules1/sdram_controller1/delay_tim_reset ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .Q0(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .Q1(\all_modules1/sdram_controller1/delayTimer/count_3 ));
  all_modules1_sdram_controller1_initTimer_SLICE_128 
    \all_modules1/sdram_controller1/initTimer/SLICE_128 ( 
    .DI0(\n5023\000/BUF1 ), 
    .CE(\all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_51 ), 
    .CLK(SD_CLK_c), .F0(\n5023\000/BUF1 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_15 ));
  all_modules1_sdram_controller1_SLICE_129 
    \all_modules1/sdram_controller1/SLICE_129 ( .B1(n370), 
    .A1(\all_modules1/sdram_controller1/n374 ), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .B0(\all_modules1/sdram_controller1/n374 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(\all_modules1/sdram_controller1/n4837 ), 
    .LSR(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n4837 ), 
    .Q0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .F1(\all_modules1/sdram_controller1/n8 ));
  all_modules1_sdram_controller1_SLICE_130 
    \all_modules1/sdram_controller1/SLICE_130 ( 
    .D1(\all_modules1/sdram_controller1/wt_busy_flag ), .C1(n370), 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n368 ), 
    .A0(\all_modules1/sdram_controller1/n367 ), 
    .DI1(\all_modules1/sdram_controller1/n4407 ), 
    .DI0(\all_modules1/sdram_controller1/n2191 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2191 ), 
    .Q0(\all_modules1/sdram_controller1/n367 ), 
    .F1(\all_modules1/sdram_controller1/n4407 ), 
    .Q1(\all_modules1/sdram_controller1/n368 ));
  all_modules1_sdram_controller1_SLICE_131 
    \all_modules1/sdram_controller1/SLICE_131 ( 
    .C1(\all_modules1/sdram_controller1/n372 ), 
    .B1(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/n4842 ), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .B0(refresh_tim_flag), 
    .A0(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), 
    .DI1(\all_modules1/sdram_controller1/n2187 ), 
    .DI0(\all_modules1/sdram_controller1/n4542 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4542 ), 
    .Q0(\all_modules1/sdram_controller1/n371 ), 
    .F1(\all_modules1/sdram_controller1/n2187 ), 
    .Q1(\all_modules1/sdram_controller1/n372 ));
  all_modules1_sdram_controller1_SLICE_132 
    \all_modules1/sdram_controller1/SLICE_132 ( .D1(refresh_tim_reset), 
    .C1(\all_modules1/sdram_controller1/n374 ), 
    .B1(\all_modules1/sdram_controller1/n367 ), 
    .A1(\all_modules1/sdram_controller1/n368 ), 
    .C0(\all_modules1/sdram_controller1/n374 ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(refresh_tim_reset), .DI0(\all_modules1/sdram_controller1/n2185 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2185 ), 
    .Q0(\all_modules1/sdram_controller1/n374 ), 
    .F1(\all_modules1/sdram_controller1/delay_tim_period_3 ));
  all_modules1_SLICE_134 \all_modules1/SLICE_134 ( 
    .B1(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A1(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .D0(\all_modules1/n4862 ), .C0(\all_modules1/o_stb_rd_N_289 ), 
    .B0(\all_modules1/n4861 ), .A0(\all_modules1/n3503 ), 
    .DI0(\all_modules1/sdram_controller1/n4556 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4556 ), 
    .Q0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .F1(\all_modules1/n4861 ));
  SLICE_135 SLICE_135( .DI0(n5023), 
    .CE(\all_modules1/sdram_controller1/init_done_N_443 ), .CLK(SD_CLK_c), 
    .F0(n5023), .Q0(\all_modules1/sdram_controller1/repeat_tim_period_13 ));
  all_modules1_SLICE_136 \all_modules1/SLICE_136 ( 
    .D1(\all_modules1/rd_wt_operation_1 ), .C1(\all_modules1/n4850 ), 
    .B1(rd_i_ack_N_462), .A1(\all_modules1/n3503 ), .D0(\all_modules1/n4862 ), 
    .C0(\all_modules1/n3503 ), 
    .B0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .DI0(\all_modules1/n53 ), .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/n53 ), 
    .Q0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .F1(\all_modules1/n4839 ));
  all_modules1_sdram_to_uart1_SLICE_146 
    \all_modules1/sdram_to_uart1/SLICE_146 ( 
    .C1(\all_modules1/sdram_to_uart1/state_0 ), .B1(\all_modules1/full_N_199 ), 
    .A1(nreset_c), .D0(\all_modules1/n4872 ), 
    .C0(\all_modules1/sdram_to_uart1/state_0 ), 
    .B0(\all_modules1/SD_CLK_c_enable_130 ), 
    .A0(\all_modules1/sdram_to_uart1/state_1 ), 
    .DI0(\all_modules1/sdram_to_uart1/next_state_0 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/next_state_0 ), 
    .Q0(\all_modules1/sdram_to_uart1/state_0 ), 
    .F1(\all_modules1/SD_CLK_c_enable_130 ));
  all_modules1_sdram_to_uart1_SLICE_147 
    \all_modules1/sdram_to_uart1/SLICE_147 ( 
    .B1(\all_modules1/sdram_to_uart1/state_1 ), 
    .A1(\all_modules1/sdram_to_uart1/state_0 ), 
    .D0(\all_modules1/sdram_to_uart1/state_1 ), 
    .C0(\all_modules1/sdram_to_uart1/state_0 ), .B0(\all_modules1/full_N_199 ), 
    .A0(nreset_c), .DI0(\all_modules1/sdram_to_uart1/n2422 ), 
    .LSR(\all_modules1/sdram_to_uart1/state_0 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/n2422 ), 
    .Q0(\all_modules1/sdram_to_uart1/state_1 ), 
    .F1(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ));
  all_modules1_uart_to_sdram1_SLICE_157 
    \all_modules1/uart_to_sdram1/SLICE_157 ( 
    .D1(\all_modules1/uart_to_sdram1/next_state_2__N_273 ), 
    .C1(\all_modules1/uart_to_sdram1/i_ack_N_284 ), 
    .B1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 ), 
    .A1(\all_modules1/n4839 ), 
    .C0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .B0(\all_modules1/uart_to_sdram1/n4 ), .A0(\all_modules1/n4842 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4291 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4291 ), 
    .Q0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 ), 
    .F1(\all_modules1/uart_to_sdram1/n4 ));
  all_modules1_uart_to_sdram1_SLICE_158 
    \all_modules1/uart_to_sdram1/SLICE_158 ( 
    .D0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .C0(\all_modules1/uart_to_sdram1/n4559 ), 
    .B0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), 
    .A0(\all_modules1/rx_stb1 ), .DI0(\all_modules1/uart_to_sdram1/n2157 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/uart_to_sdram1/n2157 ), 
    .Q0(\all_modules1/uart_to_sdram1/i_ack_N_284 ));
  all_modules1_uart_to_sdram1_SLICE_159 
    \all_modules1/uart_to_sdram1/SLICE_159 ( 
    .C1(\all_modules1/uart_to_sdram1/i_ack_N_284 ), 
    .B1(\all_modules1/rd_wt_operation_1 ), .A1(\all_modules1/n4842 ), 
    .D0(\all_modules1/uart_to_sdram1/n4559 ), .C0(\all_modules1/rx_stb1 ), 
    .B0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A0(\all_modules1/uart_to_sdram1/n113 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4411 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4411 ), 
    .Q0(\all_modules1/uart_to_sdram1/n113 ), 
    .F1(\all_modules1/uart_to_sdram1/n4559 ));
  all_modules1_uart_to_sdram1_SLICE_161 
    \all_modules1/uart_to_sdram1/SLICE_161 ( 
    .D1(\all_modules1/uart_to_sdram1/n2579 ), .C1(\all_modules1/rx_dat1_0 ), 
    .B1(\all_modules1/rx_stb1 ), .A1(\all_modules1/rx_dat1_2 ), 
    .D0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 ), 
    .C0(\all_modules1/rx_stb1 ), 
    .B0(\all_modules1/uart_to_sdram1/next_state_2__N_273 ), 
    .A0(\all_modules1/uart_to_sdram1/n117 ), 
    .DI0(\all_modules1/uart_to_sdram1/n2170 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n2170 ), 
    .Q0(\all_modules1/uart_to_sdram1/n117 ), 
    .F1(\all_modules1/uart_to_sdram1/next_state_2__N_273 ));
  all_modules1_SLICE_162 \all_modules1/SLICE_162 ( .C1(\all_modules1/n4850 ), 
    .B1(rd_i_ack_N_462), .A1(\all_modules1/n3503 ), 
    .D0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), 
    .C0(\all_modules1/n4842 ), .B0(\all_modules1/rx_stb1 ), 
    .A0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .DI0(\all_modules1/uart_to_sdram1/n2123 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n2123 ), 
    .Q0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .F1(\all_modules1/n4842 ));
  all_modules1_uart_to_sdram1_SLICE_163 
    \all_modules1/uart_to_sdram1/SLICE_163 ( 
    .D1(\all_modules1/uart_to_sdram1/n4616 ), .C1(\all_modules1/rx_dat1_7 ), 
    .B1(\all_modules1/rx_dat1_5 ), .A1(\all_modules1/rx_dat1_3 ), 
    .C0(\all_modules1/rx_dat1_0 ), .B0(\all_modules1/uart_to_sdram1/n2579 ), 
    .A0(\all_modules1/rx_dat1_2 ), 
    .DI0(\all_modules1/uart_to_sdram1/rd_wt_operation_1_N_271_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_44 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/rd_wt_operation_1_N_271_0 ), 
    .Q0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .F1(\all_modules1/uart_to_sdram1/n2579 ));
  SLICE_166 SLICE_166( .B1(n370), .A1(n376), .D0(count_0), .C0(n19), .B0(n376), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(n11), .LSR(\all_modules1/sdram_controller1/delay_tim_reset ), 
    .CLK(SD_CLK_c), .F0(n11), .Q0(count_0), 
    .F1(\all_modules1/sdram_controller1/n4625 ));
  SLICE_167 SLICE_167( .B1(\all_modules1/fifo1/o_addr_0 ), .A1(i_addr_0), 
    .B0(i_addr_0), .A0(rx_ack), .DI0(n4642), .CLK(SD_CLK_c), .F0(n4642), 
    .Q0(i_addr_0), .F1(n2541));
  all_modules1_sdram_controller1_SLICE_168 
    \all_modules1/sdram_controller1/SLICE_168 ( .C1(n376), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(n12), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n371 ), .A0(n370), 
    .DI1(\all_modules1/sdram_controller1/n2180 ), 
    .DI0(\all_modules1/sdram_controller1/n2189 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2189 ), .Q0(n370), 
    .F1(\all_modules1/sdram_controller1/n2180 ), .Q1(n376));
  all_modules1_sdram_controller1_SLICE_169 
    \all_modules1/sdram_controller1/SLICE_169 ( 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(arb_delay_2_N_350_1), .D0(\all_modules1/sdram_controller1/n324 ), 
    .C0(rd_i_ack_N_462), .B0(\all_modules1/sdram_controller1/n63 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .DI0(\all_modules1/sdram_controller1/n4546 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4546 ), .Q0(rd_i_ack_N_462), 
    .F1(\all_modules1/sdram_controller1/arb_delay_0 ));
  all_modules1_sdram_controller1_SLICE_170 
    \all_modules1/sdram_controller1/SLICE_170 ( 
    .D1(\all_modules1/sdram_controller1/n374 ), .C1(n376), 
    .B1(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/sdram_controller1/n374 ), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_flag ), .B0(n376), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(\all_modules1/sdram_controller1/n396 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n396 ), .Q0(refresh_tim_reset), 
    .F1(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ));
  uart_tx1_SLICE_175 \uart_tx1/SLICE_175 ( .B0(tx_stb), 
    .A0(\uart_tx1/FSM_7__N_768 ), .DI0(\uart_tx1/DAT_7__N_878 ), 
    .CLK(SD_CLK_c), .F0(\uart_tx1/DAT_7__N_878 ), .Q0(tx_ack));
  all_modules1_fifo2_SLICE_176 \all_modules1/fifo2/SLICE_176 ( 
    .C1(\all_modules1/fifo2/empty_N_203 ), .B1(tx_stb), .A1(tx_ack), 
    .C0(tx_ack), .B0(\all_modules1/fifo2/empty_N_203 ), .A0(tx_stb), 
    .DI0(\all_modules1/fifo2/SD_CLK_c_enable_127 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_17 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/SD_CLK_c_enable_127 ), .Q0(tx_stb), 
    .F1(\all_modules1/fifo2/SD_CLK_c_enable_17 ));
  uart1_SLICE_177 \uart1/SLICE_177 ( .D1(\uart1/n4590 ), 
    .C1(\uart1/FSM_7__N_52 ), .B1(\uart1/DAT_1 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n4582 ), .C0(\uart1/FSM_7__N_51 ), .B0(\uart1/DAT_0 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2645 ), .DI0(\uart1/n2651 ), 
    .CE(\uart1/SD_CLK_c_enable_153 ), .CLK(SD_CLK_c), .F0(\uart1/n2651 ), 
    .Q0(\uart1/DAT_0 ), .F1(\uart1/n2645 ), .Q1(\uart1/DAT_1 ));
  uart1_SLICE_178 \uart1/SLICE_178 ( .D1(\uart1/n4567 ), 
    .C1(\uart1/FSM_7__N_54 ), .B1(\uart1/DAT_3 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n4591 ), .C0(\uart1/FSM_7__N_53 ), .B0(\uart1/DAT_2 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2636 ), .DI0(\uart1/n2639 ), 
    .CE(\uart1/SD_CLK_c_enable_153 ), .CLK(SD_CLK_c), .F0(\uart1/n2639 ), 
    .Q0(\uart1/DAT_2 ), .F1(\uart1/n2636 ), .Q1(\uart1/DAT_3 ));
  uart1_SLICE_179 \uart1/SLICE_179 ( .D1(\uart1/n4585 ), 
    .C1(\uart1/FSM_7__N_56 ), .B1(\uart1/DAT_5 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n4566 ), .C0(\uart1/FSM_7__N_55 ), .B0(\uart1/DAT_4 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2648 ), .DI0(\uart1/n2654 ), 
    .CE(\uart1/SD_CLK_c_enable_153 ), .CLK(SD_CLK_c), .F0(\uart1/n2654 ), 
    .Q0(\uart1/DAT_4 ), .F1(\uart1/n2648 ), .Q1(\uart1/DAT_5 ));
  uart1_SLICE_180 \uart1/SLICE_180 ( .D1(\uart1/n4576 ), 
    .C1(\uart1/FSM_7__N_58 ), .B1(\uart1/DAT_7 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n4577 ), .C0(\uart1/FSM_7__N_57 ), .B0(\uart1/DAT_6 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2633 ), .DI0(\uart1/n2642 ), 
    .CE(\uart1/SD_CLK_c_enable_153 ), .CLK(SD_CLK_c), .F0(\uart1/n2642 ), 
    .Q0(\uart1/DAT_6 ), .F1(\uart1/n2633 ), .Q1(\uart1/DAT_7 ));
  uart1_SLICE_181 \uart1/SLICE_181 ( .D1(\uart1/SMPL ), 
    .C1(\uart1/FSM_7__N_50 ), .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), 
    .D0(rx_ack), .C0(\uart1/FSM_7__N_49 ), .B0(\uart1/FSM_7__N_60 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2145 ), .DI0(\uart1/n2153 ), 
    .CLK(SD_CLK_c), .F0(\uart1/n2153 ), .Q0(\uart1/FSM_7__N_49 ), 
    .F1(\uart1/n2145 ), .Q1(\uart1/FSM_7__N_50 ));
  uart1_SLICE_183 \uart1/SLICE_183 ( .M1(\uart1/FSM_7__N_53 ), 
    .M0(\uart1/FSM_7__N_52 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_53 ), .Q1(\uart1/FSM_7__N_54 ));
  uart1_SLICE_184 \uart1/SLICE_184 ( .M1(\uart1/FSM_7__N_55 ), 
    .M0(\uart1/FSM_7__N_54 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_55 ), .Q1(\uart1/FSM_7__N_56 ));
  uart1_SLICE_187 \uart1/SLICE_187 ( .D1(\uart1/FSM_7__N_49 ), 
    .C1(\uart1/FSM_7__N_50 ), .B1(\uart1/FSM_7__N_60 ), 
    .A1(\uart1/FSM_7__N_59 ), .D0(\uart1/SMPL ), .C0(\uart1/FSM_7__N_59 ), 
    .B0(rx_ack), .A0(\uart1/FSM_7__N_60 ), .DI0(\uart1/n2855 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n2855 ), .Q0(\uart1/FSM_7__N_60 ), 
    .F1(\uart1/SD_CLK_c_enable_153 ));
  uart1_SLICE_188 \uart1/SLICE_188 ( .C1(\uart1/n57 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n62 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI1(\uart1/PS_10_N_37_6 ), 
    .DI0(\uart1/PS_10_N_37_1 ), .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_10_N_37_1 ), .Q0(\uart1/PS_1 ), .F1(\uart1/PS_10_N_37_6 ), 
    .Q1(\uart1/PS_6 ));
  uart1_SLICE_189 \uart1/SLICE_189 ( .C1(\uart1/n54 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n56 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI1(\uart1/PS_10_N_37_9 ), 
    .DI0(\uart1/PS_10_N_37_7 ), .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_10_N_37_7 ), .Q0(\uart1/PS_7 ), .F1(\uart1/PS_10_N_37_9 ), 
    .Q1(\uart1/PS_9 ));
  uart1_SLICE_190 \uart1/SLICE_190 ( .C1(\uart1/PS_10__N_48 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n53 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI0(\uart1/PS_10_N_37_10 ), 
    .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), .F0(\uart1/PS_10_N_37_10 ), 
    .Q0(\uart1/PS_10 ), .F1(\uart1/n2106 ));
  uart1_SLICE_194 \uart1/SLICE_194 ( .B1(\uart1/PS_5 ), .A1(\uart1/PS_1 ), 
    .D0(\uart1/PS_8 ), .C0(\uart1/n16 ), .B0(\uart1/n20 ), .A0(\uart1/PS_4 ), 
    .DI0(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), .F0(\uart1/PS_10__N_48 ), 
    .Q0(\uart1/SMPL ), .F1(\uart1/n16 ));
  uart1_SLICE_195 \uart1/SLICE_195 ( .B1(rx_ack), .A1(\uart1/FSM_7__N_60 ), 
    .D0(\uart1/SMPL ), .C0(\uart1/rx_stb ), .B0(\uart1/FSM_7__N_59 ), 
    .A0(\uart1/n4841 ), .DI0(\uart1/STBo_N_161 ), .CLK(SD_CLK_c), 
    .F0(\uart1/STBo_N_161 ), .Q0(\uart1/rx_stb ), .F1(\uart1/n4841 ));
  uart_tx1_SLICE_200 \uart_tx1/SLICE_200 ( .D0(\uart_tx1/FSM_7__N_780 ), 
    .C0(tx_stb), .B0(\uart_tx1/SMPL ), .A0(\uart_tx1/FSM_7__N_768 ), 
    .DI0(\uart_tx1/n2213 ), .M1(\uart_tx1/DAT_7__N_878 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2213 ), .Q0(\uart_tx1/FSM_7__N_768 ), 
    .Q1(\uart_tx1/FSM_7__N_769 ));
  uart_tx1_SLICE_201 \uart_tx1/SLICE_201 ( .C1(\uart_tx1/FSM_7__N_770 ), 
    .B1(\uart_tx1/FSM_7__N_768 ), .A1(\uart_tx1/FSM_7__N_769 ), 
    .C0(\uart_tx1/SMPL ), .B0(\uart_tx1/FSM_7__N_769 ), 
    .A0(\uart_tx1/FSM_7__N_770 ), .DI0(\uart_tx1/n2218 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2218 ), .Q0(\uart_tx1/FSM_7__N_770 ), .F1(\uart_tx1/n4302 ));
  SLICE_202 SLICE_202( .M1(\uart_tx1/FSM_7__N_771 ), 
    .M0(\uart_tx1/FSM_7__N_770 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(VCC_net), .Q0(\uart_tx1/FSM_7__N_771 ), .F1(GND_net), 
    .Q1(\uart_tx1/FSM_7__N_772 ));
  SLICE_203 SLICE_203( .D1(\uart_tx1/FSM_7__N_779 ), 
    .C1(\uart_tx1/FSM_7__N_778 ), .B1(\uart_tx1/DAT_6 ), .A1(\uart_tx1/DAT_7 ), 
    .D0(\uart1/FSM_7__N_51 ), .C0(\uart1/FSM_7__N_53 ), .B0(\uart1/n4868 ), 
    .A0(\uart1/n4852 ), .M1(\uart_tx1/FSM_7__N_773 ), 
    .M0(\uart_tx1/FSM_7__N_772 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4590 ), .Q0(\uart_tx1/FSM_7__N_773 ), .F1(\uart_tx1/n20 ), 
    .Q1(\uart_tx1/FSM_7__N_774 ));
  SLICE_204 SLICE_204( .B1(\all_modules1/fifo1/o_addr_1 ), 
    .A1(\all_modules1/fifo1/i_addr_1 ), .B0(\all_modules1/fifo2/o_addr_1 ), 
    .A0(\all_modules1/fifo2/i_addr_1 ), .M1(\uart_tx1/FSM_7__N_775 ), 
    .M0(\uart_tx1/FSM_7__N_774 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n2 ), .Q0(\uart_tx1/FSM_7__N_775 ), 
    .F1(\all_modules1/fifo1/n2 ), .Q1(\uart_tx1/FSM_7__N_776 ));
  SLICE_205 SLICE_205( .B1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .M1(\uart_tx1/FSM_7__N_777 ), .M0(\uart_tx1/FSM_7__N_776 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/n4350 ), 
    .Q0(\uart_tx1/FSM_7__N_777 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4353 ), 
    .Q1(\uart_tx1/FSM_7__N_778 ));
  SLICE_206 SLICE_206( .B1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .M1(\uart_tx1/FSM_7__N_779 ), .M0(\uart_tx1/FSM_7__N_778 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n11_adj_891 ), 
    .Q0(\uart_tx1/FSM_7__N_779 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4865 ), 
    .Q1(\uart_tx1/FSM_7__N_780 ));
  uart_tx1_SLICE_207 \uart_tx1/SLICE_207 ( .B1(\uart_tx1/PS_5 ), 
    .A1(\uart_tx1/PS_1 ), .D0(\uart_tx1/PS_8 ), .C0(\uart_tx1/n16 ), 
    .B0(\uart_tx1/n20_adj_883 ), .A0(\uart_tx1/PS_4 ), 
    .DI0(\uart_tx1/PS_10__N_767 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/PS_10__N_767 ), .Q0(\uart_tx1/SMPL ), .F1(\uart_tx1/n16 ));
  SLICE_208 SLICE_208( .B1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), 
    .A1(\all_modules1/uart_to_sdram1/n113 ), .B0(\uart_tx1/FSM_7__N_771 ), 
    .A0(\uart_tx1/n4774 ), .DI0(\uart_tx1/n4775 ), .LSR(\uart_tx1/n4302 ), 
    .CLK(SD_CLK_c), .F0(\uart_tx1/n4775 ), .Q0(uart_tx_c), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 ));
  all_modules1_sdram_controller1_mux_570_i1_SLICE_209 
    \all_modules1/sdram_controller1/mux_570_i1/SLICE_209 ( 
    .D1(\all_modules1/sdram_controller1/wt_busy_flag ), .C1(n376), 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(n2246), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n4875 ), .A0(n4876), 
    .M0(\all_modules1/sdram_controller1/n4625 ), 
    .OFX0(\all_modules1/sdram_controller1/delay_tim_reset ));
  all_modules1_sdram_controller1_arbBank_i3774_SLICE_210 
    \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .M1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .FXB(\all_modules1/sdram_controller1/arbBank/n4962 ), 
    .FXA(\all_modules1/sdram_controller1/arbBank/n4965 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n4962 ), 
    .OFX1(\all_modules1/n3503 ));
  all_modules1_sdram_controller1_arbBank_i3777_SLICE_211 
    \all_modules1/sdram_controller1/arbBank/i3777/SLICE_211 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n4965 ));
  uart_tx1_i3718_SLICE_212 \uart_tx1/i3718/SLICE_212 ( 
    .C1(\uart_tx1/FSM_7__N_772 ), .B1(\uart_tx1/DAT_0 ), .A1(\uart_tx1/n1539 ), 
    .C0(\uart_tx1/FSM_7__N_775 ), .B0(\uart_tx1/DAT_3 ), .A0(\uart_tx1/n4772 ), 
    .M0(\uart_tx1/n4632 ), .OFX0(\uart_tx1/n4774 ));
  all_modules1_sdram_controller1_SLICE_213 
    \all_modules1/sdram_controller1/SLICE_213 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_9 ), 
    .B1(\all_modules1/sdram_controller1/n19 ), 
    .A1(\all_modules1/sdram_controller1/n377 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), .M1(DB_out_3), .M0(DB_out_2), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n19 ), 
    .Q0(\all_modules1/tx_sd_data_2 ), .F1(ADR_c_0), 
    .Q1(\all_modules1/tx_sd_data_3 ));
  all_modules1_sdram_controller1_SLICE_214 
    \all_modules1/sdram_controller1/SLICE_214 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n13 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_adr_17 ), .M0(\all_modules1/rx_sd_adr_16 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n13 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), .F1(ADR_c_4), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ));
  all_modules1_sdram_controller1_SLICE_215 
    \all_modules1/sdram_controller1/SLICE_215 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), 
    .B1(\all_modules1/sdram_controller1/n16 ), 
    .A1(\all_modules1/sdram_controller1/n377 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), .M1(DB_out_7), .M0(DB_out_6), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n16 ), 
    .Q0(\all_modules1/tx_sd_data_6 ), .F1(ADR_c_1), 
    .Q1(\all_modules1/tx_sd_data_7 ));
  all_modules1_sdram_controller1_SLICE_216 
    \all_modules1/sdram_controller1/SLICE_216 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n18 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), .M1(DB_out_9), .M0(DB_out_8), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n18 ), 
    .Q0(\all_modules1/tx_sd_data_8 ), .F1(ADR_c_7), 
    .Q1(\all_modules1/tx_sd_data_9 ));
  all_modules1_sdram_controller1_SLICE_217 
    \all_modules1/sdram_controller1/SLICE_217 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n4844 ), 
    .C0(\all_modules1/sdram_controller1/n1131 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_data_11 ), .M0(\all_modules1/rx_sd_data_10 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n4844 ), 
    .Q0(SD_DATA_TEMP_10), .F1(ADR_c_10), .Q1(SD_DATA_TEMP_11));
  all_modules1_sdram_controller1_SLICE_218 
    \all_modules1/sdram_controller1/SLICE_218 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n2379 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_adr_1 ), .M0(\all_modules1/rx_sd_adr_0 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2379 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), .F1(ADR_c_2), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ));
  all_modules1_sdram_controller1_SLICE_219 
    \all_modules1/sdram_controller1/SLICE_219 ( 
    .D1(\all_modules1/sdram_controller1/n1131 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ), 
    .B1(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A1(\all_modules1/sdram_controller1/n377 ), 
    .D0(\all_modules1/sdram_controller1/n371 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), 
    .B0(\all_modules1/sdram_controller1/n377 ), 
    .A0(\all_modules1/sdram_controller1/n20 ), .M1(\all_modules1/rx_sd_adr_5 ), 
    .M0(\all_modules1/rx_sd_adr_4 ), .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), .F0(ADR_c_3), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .F1(\all_modules1/sdram_controller1/n20 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ));
  all_modules1_sdram_controller1_SLICE_220 
    \all_modules1/sdram_controller1/SLICE_220 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n17 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_adr_11 ), .M0(\all_modules1/rx_sd_adr_10 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n17 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), .F1(ADR_c_6), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ));
  all_modules1_sdram_controller1_SLICE_221 
    \all_modules1/sdram_controller1/SLICE_221 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n2391 ), 
    .D0(\all_modules1/sdram_controller1/n1131 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_adr_13 ), .M0(\all_modules1/rx_sd_adr_12 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2391 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), .F1(ADR_c_8), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ));
  all_modules1_sdram_controller1_SLICE_222 
    \all_modules1/sdram_controller1/SLICE_222 ( 
    .D1(\all_modules1/sdram_controller1/n371 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n2385 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ), 
    .C0(\all_modules1/sdram_controller1/n1131 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A0(\all_modules1/sdram_controller1/n377 ), 
    .M1(\all_modules1/rx_sd_adr_7 ), .M0(\all_modules1/rx_sd_adr_6 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2385 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), .F1(ADR_c_5), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ));
  SLICE_223 SLICE_223( .C1(\uart_tx1/FSM_7__N_776 ), .B1(\uart_tx1/DAT_4 ), 
    .A1(\uart_tx1/DAT_5 ), .D0(\uart_tx1/FSM_7__N_776 ), 
    .C0(\uart_tx1/FSM_7__N_777 ), .B0(\uart_tx1/n17 ), .A0(\uart_tx1/n20 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n4772 ), .Q0(\all_modules1/rx_sd_adr_2 ), 
    .F1(\uart_tx1/n17 ), .Q1(\all_modules1/rx_sd_adr_3 ));
  all_modules1_SLICE_224 \all_modules1/SLICE_224 ( .C1(\all_modules1/n4850 ), 
    .B1(\all_modules1/n3503 ), .A1(\all_modules1/sdram_controller1/n4836 ), 
    .D0(\all_modules1/o_stb_rd_N_289 ), .C0(\all_modules1/n4862 ), 
    .B0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .M0(\all_modules1/rd_wt_operation_1_N_720_1 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/n4850 ), 
    .Q0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .F1(\all_modules1/sdram_controller1/n324 ));
  all_modules1_SLICE_225 \all_modules1/SLICE_225 ( 
    .B1(\all_modules1/sdram_controller1/repeat_tim_period_13 ), .A1(nreset_c), 
    .D0(\all_modules1/n4862 ), .C0(\all_modules1/SD_CLK_c_enable_202 ), 
    .B0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .A0(\all_modules1/uart_to_sdram1/o_stb_wt_N_291 ), 
    .M1(\all_modules1/tx_sd_data_11 ), .M0(\all_modules1/tx_sd_data_10 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/n1673 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .F1(\all_modules1/n4862 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ));
  all_modules1_SLICE_226 \all_modules1/SLICE_226 ( 
    .D1(\all_modules1/SD_CLK_c_enable_202 ), .C1(\all_modules1/n4861 ), 
    .B1(\all_modules1/n4862 ), .A1(\all_modules1/o_stb_rd_N_289 ), 
    .B0(\all_modules1/rd_wt_operation_1 ), 
    .A0(\all_modules1/uart_to_sdram1/i_ack_N_284 ), 
    .M1(\all_modules1/tx_sd_data_13 ), .M0(\all_modules1/tx_sd_data_12 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/o_stb_rd_N_289 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .F1(\all_modules1/sdram_controller1/n1671 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ));
  all_modules1_SLICE_227 \all_modules1/SLICE_227 ( 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .C0(\all_modules1/sdram_to_uart1/n6 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .M0(\all_modules1/sdram_controller1/arb_delay_2 ), .CE(nreset_c), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_4 ), 
    .Q0(\all_modules1/wt_o_stb1 ), .F1(\all_modules1/sdram_to_uart1/n6 ));
  SLICE_228 SLICE_228( .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ), 
    .C0(\all_modules1/sdram_to_uart1/n6_adj_894 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .M1(\uart1/DAT_7 ), 
    .M0(\uart1/DAT_6 ), .CE(\uart1/FSM_7__N_59 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_5 ), .Q0(rx_dat_6), 
    .F1(\all_modules1/sdram_to_uart1/n6_adj_894 ), .Q1(rx_dat_7));
  SLICE_229 SLICE_229( .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), 
    .C0(\all_modules1/sdram_to_uart1/n10 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .M1(\uart1/DAT_5 ), 
    .M0(\uart1/DAT_4 ), .CE(\uart1/FSM_7__N_59 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_6 ), .Q0(rx_dat_4), 
    .F1(\all_modules1/sdram_to_uart1/n10 ), .Q1(rx_dat_5));
  SLICE_230 SLICE_230( .B1(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A1(\all_modules1/sdram_to_uart1/state_0 ), 
    .D0(\all_modules1/sdram_to_uart1/state_1 ), 
    .C0(\all_modules1/sdram_to_uart1/sd_data_temp_7 ), 
    .B0(\all_modules1/sdram_to_uart1/n4551 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_15 ), 
    .M1(\uart1/FSM_7__N_58 ), .M0(\uart1/FSM_7__N_50 ), .CE(\uart1/SMPL ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_7 ), .Q0(\uart1/FSM_7__N_51 ), 
    .F1(\all_modules1/sdram_to_uart1/n4551 ), .Q1(\uart1/FSM_7__N_59 ));
  all_modules1_sdram_controller1_SLICE_231 
    \all_modules1/sdram_controller1/SLICE_231 ( 
    .B1(\all_modules1/sdram_controller1/n367 ), 
    .A1(\all_modules1/sdram_controller1/n368 ), 
    .D0(\all_modules1/sdram_controller1/n6 ), .C0(arb_delay_2_N_350_1), 
    .B0(\all_modules1/sdram_controller1/n4874 ), .A0(n370), 
    .M1(\all_modules1/rx_sd_data_5 ), .M0(\all_modules1/rx_sd_data_4 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(nRAS_c), .Q0(SD_DATA_TEMP_4), 
    .F1(\all_modules1/sdram_controller1/n4874 ), .Q1(SD_DATA_TEMP_5));
  all_modules1_sdram_controller1_SLICE_232 
    \all_modules1/sdram_controller1/SLICE_232 ( 
    .B1(\all_modules1/sdram_controller1/n367 ), .A1(refresh_tim_reset), 
    .D0(\all_modules1/sdram_controller1/n4857 ), 
    .C0(\all_modules1/sdram_controller1/n371 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/n4856 ), 
    .M1(\all_modules1/rx_sd_adr_20 ), .M0(\all_modules1/rx_sd_adr_2 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n6 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), 
    .F1(\all_modules1/sdram_controller1/n4856 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ));
  SLICE_233 SLICE_233( .D1(n4876), .C1(n2246), .B1(rd_i_ack_N_462), 
    .A1(arb_delay_2_N_350_1), .B0(n376), 
    .A0(\all_modules1/sdram_controller1/n374 ), .M1(DB_out_15), .M0(DB_out_14), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), .CLK(SD_CLK_c), 
    .F0(n2246), .Q0(\all_modules1/tx_sd_data_14 ), .F1(n4890), 
    .Q1(\all_modules1/tx_sd_data_15 ));
  all_modules1_sdram_controller1_SLICE_234 
    \all_modules1/sdram_controller1/SLICE_234 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .C1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .A1(\all_modules1/sdram_controller1/n9 ), 
    .D0(\all_modules1/sdram_controller1/n374 ), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_flag ), .B0(n376), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .M1(DB_out_5), .M0(DB_out_4), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/repeat_tim_reset ), 
    .Q0(\all_modules1/tx_sd_data_4 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .Q1(\all_modules1/tx_sd_data_5 ));
  all_modules1_sdram_controller1_SLICE_235 
    \all_modules1/sdram_controller1/SLICE_235 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .C1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .A1(\all_modules1/sdram_controller1/n9 ), 
    .D0(\all_modules1/sdram_controller1/count_1 ), .C0(count_0), 
    .B0(\all_modules1/sdram_controller1/n367 ), 
    .A0(\all_modules1/sdram_controller1/n368 ), 
    .M1(\all_modules1/rx_sd_adr_19 ), .M0(\all_modules1/rx_sd_adr_18 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n9 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), 
    .F1(\all_modules1/sdram_controller1/delay_tim_flag_N_474 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ));
  all_modules1_sdram_controller1_SLICE_236 
    \all_modules1/sdram_controller1/SLICE_236 ( .D1(n376), 
    .C1(\all_modules1/sdram_controller1/n8 ), 
    .B1(\all_modules1/sdram_controller1/n372 ), 
    .A1(\all_modules1/sdram_controller1/n9_adj_893 ), .D0(refresh_tim_reset), 
    .C0(\all_modules1/sdram_controller1/n367 ), .B0(rd_i_ack_N_462), 
    .A0(arb_delay_2_N_350_1), .M1(\all_modules1/rx_sd_data_3 ), 
    .M0(\all_modules1/rx_sd_data_2 ), .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/n1673 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n9_adj_893 ), .Q0(SD_DATA_TEMP_2), 
    .F1(\all_modules1/sdram_controller1/n1131 ), .Q1(SD_DATA_TEMP_3));
  all_modules1_sdram_controller1_SLICE_237 
    \all_modules1/sdram_controller1/SLICE_237 ( 
    .B1(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .A1(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .D0(\all_modules1/sdram_controller1/n4 ), 
    .C0(\all_modules1/sdram_controller1/n374 ), 
    .B0(\all_modules1/sdram_controller1/n372 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .M1(\all_modules1/rx_sd_data_7 ), .M0(\all_modules1/rx_sd_data_6 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n63 ), 
    .Q0(SD_DATA_TEMP_6), .F1(\all_modules1/sdram_controller1/n4 ), 
    .Q1(SD_DATA_TEMP_7));
  all_modules1_SLICE_238 \all_modules1/SLICE_238 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .Q0(\all_modules1/rx_sd_data_2 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n12_adj_892 ), 
    .Q1(\all_modules1/rx_sd_data_3 ));
  SLICE_239 SLICE_239( .B1(refresh_tim_reset), .A1(refresh_tim_flag), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_890 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/n14_adj_889 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_888 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), .CLK(SD_CLK_c), 
    .F0(refresh_tim_flag), .Q0(\all_modules1/rx_sd_data_4 ), 
    .F1(SD_CLK_c_enable_117), .Q1(\all_modules1/rx_sd_data_5 ));
  all_modules1_sdram_controller1_SLICE_240 
    \all_modules1/sdram_controller1/SLICE_240 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/n12_adj_892 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/n11_adj_891 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/n5 ), 
    .M0(arb_delay_2_N_350_1), .CE(nreset_c), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_888 ), 
    .Q0(\all_modules1/rd_wt_operation_1_N_720_1 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n5 ));
  all_modules1_SLICE_241 \all_modules1/SLICE_241 ( 
    .D1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .C1(\all_modules1/sdram_controller1/initTimer/n24 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_43 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/SD_CLK_c_enable_68 ), 
    .Q0(\all_modules1/rx_sd_data_0 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .Q1(\all_modules1/rx_sd_data_1 ));
  all_modules1_SLICE_242 \all_modules1/SLICE_242 ( 
    .D1(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .C1(\all_modules1/sdram_controller1/initTimer/n12 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .D0(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .C0(\all_modules1/sdram_controller1/initTimer/n10 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/initTimer/n24 ), 
    .Q0(\all_modules1/rx_sd_data_10 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n10 ), 
    .Q1(\all_modules1/rx_sd_data_11 ));
  all_modules1_SLICE_243 \all_modules1/SLICE_243 ( 
    .C1(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .D0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .C0(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n6 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/initTimer/n12 ), 
    .Q0(\all_modules1/rx_sd_data_12 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n6 ), 
    .Q1(\all_modules1/rx_sd_data_13 ));
  all_modules1_SLICE_244 \all_modules1/SLICE_244 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/i_addr_3 ), 
    .B1(\all_modules1/fifo2/n4854 ), .A1(\all_modules1/fifo2/n4319 ), 
    .C0(\all_modules1/fifo2/i_addr_2 ), .B0(\all_modules1/i_addr_0 ), 
    .A0(\all_modules1/fifo2/i_addr_1 ), .M1(\all_modules1/rx_dat1_7 ), 
    .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n4854 ), .Q0(\all_modules1/rx_sd_adr_6 ), 
    .F1(\all_modules1/fifo2/n6_adj_885 ), .Q1(\all_modules1/rx_sd_adr_7 ));
  SLICE_245 SLICE_245( .D1(n4318), .C1(n4605), .B1(n2541), .A1(\uart1/rx_stb ), 
    .D0(\all_modules1/fifo1/o_addr_1 ), .C0(\all_modules1/fifo1/i_addr_1 ), 
    .B0(i_addr_0), .A0(\all_modules1/fifo1/n4316 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), .CLK(SD_CLK_c), 
    .F0(n4605), .Q0(\all_modules1/rx_sd_adr_4 ), .F1(rx_ack), 
    .Q1(\all_modules1/rx_sd_adr_5 ));
  all_modules1_SLICE_246 \all_modules1/SLICE_246 ( .B1(i_addr_0), 
    .A1(\all_modules1/fifo1/i_addr_1 ), .D0(\all_modules1/fifo1/o_addr_3 ), 
    .C0(\all_modules1/fifo1/n4855 ), .B0(\all_modules1/fifo1/i_addr_3 ), 
    .A0(\all_modules1/fifo1/i_addr_2 ), .M1(\all_modules1/rx_dat1_7 ), 
    .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n4316 ), .Q0(\all_modules1/rx_sd_adr_22 ), 
    .F1(\all_modules1/fifo1/n4855 ), .Q1(\all_modules1/rx_sd_adr_23 ));
  SLICE_247 SLICE_247( .D1(n370), .C1(n4890), 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/wt_busy_flag ), .C0(n19), .B0(n376), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .M1(\all_modules1/tx_sd_data_15 ), .M0(\all_modules1/tx_sd_data_14 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(SD_CLK_c_enable_120), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), .F1(n19), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_15 ));
  SLICE_248 SLICE_248( .D1(\uart1/PS_10 ), .C1(\uart1/PS_3 ), .B1(\uart1/n18 ), 
    .A1(\uart1/PS_6 ), .D0(\uart1/PS_0 ), .C0(\uart1/PS_9 ), .B0(\uart1/PS_2 ), 
    .A0(\uart1/PS_7 ), .M1(\all_modules1/rx_dat1_5 ), 
    .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n18 ), .Q0(\all_modules1/rx_sd_adr_12 ), .F1(\uart1/n20 ), 
    .Q1(\all_modules1/rx_sd_adr_13 ));
  SLICE_249 SLICE_249( .D1(\uart1/n4853 ), .C1(\uart1/FSM_7__N_54 ), 
    .B1(\uart1/n4867 ), .A1(\uart1/FSM_7__N_56 ), .B0(\uart1/FSM_7__N_58 ), 
    .A0(\uart1/FSM_7__N_57 ), .M1(\all_modules1/tx_sd_data_9 ), 
    .M0(\all_modules1/tx_sd_data_8 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4867 ), .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), 
    .F1(\uart1/n4566 ), .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ));
  SLICE_250 SLICE_250( .D1(\uart1/FSM_7__N_51 ), .C1(\uart1/FSM_7__N_52 ), 
    .B1(\uart1/n4868 ), .A1(\uart1/n4852 ), .C0(\uart1/FSM_7__N_56 ), 
    .B0(\uart1/FSM_7__N_58 ), .A0(\uart1/FSM_7__N_57 ), 
    .M1(\all_modules1/tx_sd_data_5 ), .M0(\all_modules1/tx_sd_data_4 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4852 ), .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), 
    .F1(\uart1/n4591 ), .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ));
  SLICE_251 SLICE_251( .D1(\uart1/n4868 ), .C1(\uart1/n4869 ), 
    .B1(\uart1/n4867 ), .A1(\uart1/FSM_7__N_56 ), .B0(\uart1/FSM_7__N_54 ), 
    .A0(\uart1/FSM_7__N_55 ), .M1(\all_modules1/rx_dat1_1 ), 
    .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4868 ), .Q0(\all_modules1/rx_sd_adr_0 ), .F1(\uart1/n4582 ), 
    .Q1(\all_modules1/rx_sd_adr_1 ));
  SLICE_252 SLICE_252( .D1(\uart1/n4868 ), .C1(\uart1/n4867 ), 
    .B1(\uart1/n4869 ), .A1(\uart1/FSM_7__N_51 ), .B0(\uart1/FSM_7__N_53 ), 
    .A0(\uart1/FSM_7__N_52 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4869 ), .Q0(\all_modules1/rx_sd_adr_10 ), .F1(\uart1/n4585 ), 
    .Q1(\all_modules1/rx_sd_adr_11 ));
  SLICE_253 SLICE_253( .D1(\uart1/n4853 ), .C1(\uart1/FSM_7__N_55 ), 
    .B1(\uart1/n4867 ), .A1(\uart1/FSM_7__N_56 ), .C0(\uart1/FSM_7__N_51 ), 
    .B0(\uart1/FSM_7__N_53 ), .A0(\uart1/FSM_7__N_52 ), 
    .M1(\all_modules1/tx_sd_data_7 ), .M0(\all_modules1/tx_sd_data_6 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4853 ), .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), 
    .F1(\uart1/n4567 ), .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_7 ));
  SLICE_254 SLICE_254( .D1(\uart_tx1/PS_10 ), .C1(\uart_tx1/PS_3 ), 
    .B1(\uart_tx1/n18 ), .A1(\uart_tx1/PS_6 ), .D0(\uart_tx1/PS_0 ), 
    .C0(\uart_tx1/PS_9 ), .B0(\uart_tx1/PS_2 ), .A0(\uart_tx1/PS_7 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n18 ), .Q0(\all_modules1/rx_sd_adr_18 ), 
    .F1(\uart_tx1/n20_adj_883 ), .Q1(\all_modules1/rx_sd_adr_19 ));
  all_modules1_sdram_controller1_SLICE_255 
    \all_modules1/sdram_controller1/SLICE_255 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .C1(\all_modules1/sdram_controller1/n368 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/n371 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .C0(\all_modules1/sdram_controller1/n368 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/n371 ), 
    .M1(\all_modules1/rx_sd_adr_3 ), .M0(\all_modules1/rx_sd_adr_23 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), .F0(BA_c_1), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), .F1(BA_c_0), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ));
  all_modules1_SLICE_256 \all_modules1/SLICE_256 ( 
    .D1(\all_modules1/fifo1/empty_N_203 ), .C1(\all_modules1/n3493 ), 
    .B1(nreset_c), .A1(\all_modules1/rx_stb1 ), .C0(\all_modules1/n3493 ), 
    .B0(nreset_c), .A0(\all_modules1/rx_stb1 ), .M1(\all_modules1/rx_dat1_5 ), 
    .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n4849 ), .Q0(\all_modules1/rx_sd_adr_20 ), 
    .F1(\all_modules1/fifo1/SD_CLK_c_enable_186 ), 
    .Q1(\all_modules1/rx_sd_adr_21 ));
  SLICE_257 SLICE_257( .D1(\uart1/FSM_7__N_56 ), .C1(\uart1/FSM_7__N_58 ), 
    .B1(\uart1/n4868 ), .A1(\uart1/n4853 ), .D0(\uart1/FSM_7__N_56 ), 
    .C0(\uart1/FSM_7__N_57 ), .B0(\uart1/n4868 ), .A0(\uart1/n4853 ), 
    .M1(\all_modules1/tx_sd_data_3 ), .M0(\all_modules1/tx_sd_data_2 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4576 ), .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), 
    .F1(\uart1/n4577 ), .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ));
  all_modules1_SLICE_258 \all_modules1/SLICE_258 ( 
    .B1(\all_modules1/uart_to_sdram1/n116 ), 
    .A1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), 
    .C0(\all_modules1/uart_to_sdram1/n116 ), 
    .B0(\all_modules1/uart_to_sdram1/n117 ), 
    .A0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_28 ), 
    .M1(\all_modules1/tx_sd_data_1 ), .M0(\all_modules1/tx_sd_data_0 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ));
  all_modules1_SLICE_259 \all_modules1/SLICE_259 ( 
    .B1(\all_modules1/wt_o_stb1 ), 
    .A1(\all_modules1/rd_wt_operation_1_N_720_1 ), 
    .D0(\all_modules1/rd_wt_operation_1_N_720_1 ), 
    .C0(\all_modules1/wt_o_stb1 ), .B0(\all_modules1/sdram_to_uart1/state_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .M0(\all_modules1/sdram_controller1/n367 ), 
    .LSR(\all_modules1/sdram_controller1/delay_tim_flag_N_474 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_145 ), 
    .Q0(arb_delay_2_N_350_1), .F1(\all_modules1/n4872 ));
  all_modules1_sdram_controller1_SLICE_260 
    \all_modules1/sdram_controller1/SLICE_260 ( 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), 
    .B1(\all_modules1/sdram_controller1/n377 ), 
    .A1(\all_modules1/sdram_controller1/n371 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .B0(\all_modules1/sdram_controller1/n377 ), 
    .A0(\all_modules1/sdram_controller1/n371 ), 
    .M1(\all_modules1/rx_sd_data_1 ), .M0(\all_modules1/rx_sd_data_0 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(ADR_c_12), .Q0(SD_DATA_TEMP_0), .F1(ADR_c_9), 
    .Q1(SD_DATA_TEMP_1));
  all_modules1_sdram_controller1_SLICE_261 
    \all_modules1/sdram_controller1/SLICE_261 ( 
    .C1(\all_modules1/sdram_controller1/n377 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .M1(\all_modules1/rx_sd_adr_15 ), .M0(\all_modules1/rx_sd_adr_14 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), .F0(n4876), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), .F1(nWE_c), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ));
  all_modules1_sdram_controller1_SLICE_262 
    \all_modules1/sdram_controller1/SLICE_262 ( 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .B0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .M1(\all_modules1/rx_sd_data_13 ), .M0(\all_modules1/rx_sd_data_12 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(SD_P_DATA_15__N_308), .Q0(SD_DATA_TEMP_12), .F1(n12), 
    .Q1(SD_DATA_TEMP_13));
  all_modules1_sdram_controller1_SLICE_263 
    \all_modules1/sdram_controller1/SLICE_263 ( 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), .M1(DB_out_13), 
    .M0(DB_out_12), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n5019 ), 
    .Q0(\all_modules1/tx_sd_data_12 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4352 ), 
    .Q1(\all_modules1/tx_sd_data_13 ));
  all_modules1_sdram_controller1_SLICE_264 
    \all_modules1/sdram_controller1/SLICE_264 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), .M1(DB_out_1), 
    .M0(DB_out_0), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4863 ), 
    .Q0(\all_modules1/tx_sd_data_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5016 ), 
    .Q1(\all_modules1/tx_sd_data_1 ));
  all_modules1_sdram_controller1_SLICE_265 
    \all_modules1/sdram_controller1/SLICE_265 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), .M1(DB_out_11), 
    .M0(DB_out_10), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4866 ), 
    .Q0(\all_modules1/tx_sd_data_10 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5013 ), 
    .Q1(\all_modules1/tx_sd_data_11 ));
  SLICE_266 SLICE_266( .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ), 
    .D0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .C0(\all_modules1/sdram_to_uart1/state_1 ), 
    .B0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .M1(\uart1/FSM_7__N_56 ), .M0(\uart1/FSM_7__N_57 ), .CE(\uart1/SMPL ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_to_uart1/n8_adj_895 ), 
    .Q0(\uart1/FSM_7__N_58 ), .F1(\all_modules1/sdram_to_uart1/n10_adj_896 ), 
    .Q1(\uart1/FSM_7__N_57 ));
  all_modules1_SLICE_267 \all_modules1/SLICE_267 ( .B1(nreset_c), 
    .A1(arb_delay_2_N_350_1), .B0(nreset_c), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .M0(rd_i_ack_N_462), 
    .LSR(\all_modules1/sdram_controller1/n4836 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_stb1 ), .Q0(\all_modules1/sdram_controller1/n377 ), 
    .F1(\all_modules1/sdram_controller1/SD_CLK_c_enable_94 ));
  all_modules1_sdram_controller1_SLICE_268 
    \all_modules1/sdram_controller1/SLICE_268 ( .B1(rd_i_ack_N_462), 
    .A1(arb_delay_2_N_350_1), .B0(nreset_c), .A0(rd_i_ack_N_462), 
    .M1(\all_modules1/rx_sd_adr_22 ), .M0(\all_modules1/rx_sd_adr_21 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/SD_CLK_c_enable_202 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .F1(\all_modules1/sdram_controller1/n4875 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ));
  all_modules1_sdram_controller1_SLICE_269 
    \all_modules1/sdram_controller1/SLICE_269 ( 
    .B1(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .A1(\all_modules1/sdram_controller1/n377 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ), 
    .B0(\all_modules1/sdram_controller1/n377 ), 
    .A0(\all_modules1/sdram_controller1/n371 ), 
    .M1(\all_modules1/rx_sd_adr_9 ), .M0(\all_modules1/rx_sd_adr_8 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), 
    .LSR(\all_modules1/sdram_controller1/n1671 ), .CLK(SD_CLK_c), 
    .F0(ADR_c_11), .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), 
    .F1(\all_modules1/sdram_controller1/n4857 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_9 ));
  all_modules1_sdram_controller1_SLICE_270 
    \all_modules1/sdram_controller1/SLICE_270 ( .D1(arb_delay_2_N_350_1), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/n368 ), .C0(refresh_tim_reset), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_443 ), 
    .M1(\all_modules1/rx_sd_data_15 ), .M0(\all_modules1/rx_sd_data_14 ), 
    .CE(\all_modules1/SD_CLK_c_enable_202 ), .LSR(\all_modules1/n1673 ), 
    .CLK(SD_CLK_c), .F0(nCAS_c), .Q0(SD_DATA_TEMP_14), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5012 ), .Q1(SD_DATA_TEMP_15));
  all_modules1_SLICE_271 \all_modules1/SLICE_271 ( 
    .B1(\all_modules1/sdram_controller1/initTimer/n70 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/n30 ), .D0(refresh_tim_flag), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_period_13 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_71 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4836 ), 
    .Q0(\all_modules1/rx_sd_adr_8 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_51 ), 
    .Q1(\all_modules1/rx_sd_adr_9 ));
  SLICE_272 SLICE_272( .C1(\uart_tx1/FSM_7__N_774 ), 
    .B1(\uart_tx1/FSM_7__N_773 ), .A1(\uart_tx1/FSM_7__N_772 ), 
    .C0(\uart_tx1/FSM_7__N_773 ), .B0(\uart_tx1/DAT_1 ), .A0(\uart_tx1/DAT_2 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n1539 ), .Q0(\all_modules1/rx_sd_adr_16 ), 
    .F1(\uart_tx1/n4632 ), .Q1(\all_modules1/rx_sd_adr_17 ));
  all_modules1_SLICE_273 \all_modules1/SLICE_273 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_35 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_890 ), 
    .Q0(\all_modules1/rx_sd_data_14 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n14_adj_889 ), 
    .Q1(\all_modules1/rx_sd_data_15 ));
  uart1_SLICE_335 \uart1/SLICE_335 ( .M0(\uart1/FSM_7__N_51 ), 
    .CE(\uart1/SMPL ), .CLK(SD_CLK_c), .Q0(\uart1/FSM_7__N_52 ));
  uart_tx1_SLICE_340 \uart_tx1/SLICE_340 ( .M1(tx_dat_0), .M0(tx_dat_1), 
    .CE(\uart_tx1/DAT_7__N_878 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_1 ), 
    .Q1(\uart_tx1/DAT_0 ));
  uart_tx1_SLICE_341 \uart_tx1/SLICE_341 ( .M1(tx_dat_2), .M0(tx_dat_3), 
    .CE(\uart_tx1/DAT_7__N_878 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_3 ), 
    .Q1(\uart_tx1/DAT_2 ));
  uart_tx1_SLICE_342 \uart_tx1/SLICE_342 ( .M1(tx_dat_4), .M0(tx_dat_5), 
    .CE(\uart_tx1/DAT_7__N_878 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_5 ), 
    .Q1(\uart_tx1/DAT_4 ));
  uart_tx1_SLICE_343 \uart_tx1/SLICE_343 ( .M1(tx_dat_6), .M0(tx_dat_7), 
    .CE(\uart_tx1/DAT_7__N_878 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_7 ), 
    .Q1(\uart_tx1/DAT_6 ));
  DB_15_ \DB[15]_I ( .PADDI(DB_out_15), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_15), .DB15(DB[15]));
  DB_14_ \DB[14]_I ( .PADDI(DB_out_14), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_14), .DB14(DB[14]));
  DB_13_ \DB[13]_I ( .PADDI(DB_out_13), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_13), .DB13(DB[13]));
  DB_12_ \DB[12]_I ( .PADDI(DB_out_12), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_12), .DB12(DB[12]));
  DB_11_ \DB[11]_I ( .PADDI(DB_out_11), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_11), .DB11(DB[11]));
  DB_10_ \DB[10]_I ( .PADDI(DB_out_10), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_10), .DB10(DB[10]));
  DB_9_ \DB[9]_I ( .PADDI(DB_out_9), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_9), .DB9(DB[9]));
  DB_8_ \DB[8]_I ( .PADDI(DB_out_8), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_8), .DB8(DB[8]));
  DB_7_ \DB[7]_I ( .PADDI(DB_out_7), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_7), .DB7(DB[7]));
  DB_6_ \DB[6]_I ( .PADDI(DB_out_6), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_6), .DB6(DB[6]));
  DB_5_ \DB[5]_I ( .PADDI(DB_out_5), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_5), .DB5(DB[5]));
  DB_4_ \DB[4]_I ( .PADDI(DB_out_4), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_4), .DB4(DB[4]));
  DB_3_ \DB[3]_I ( .PADDI(DB_out_3), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_3), .DB3(DB[3]));
  DB_2_ \DB[2]_I ( .PADDI(DB_out_2), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_2), .DB2(DB[2]));
  DB_1_ \DB[1]_I ( .PADDI(DB_out_1), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_1), .DB1(DB[1]));
  DB_0_ \DB[0]_I ( .PADDI(DB_out_0), .PADDT(SD_P_DATA_15__N_308), 
    .PADDO(SD_DATA_TEMP_0), .DB0(DB[0]));
  uart_tx uart_tx_I( .PADDO(uart_tx_c), .uart_tx(uart_tx));
  ADR_12_ \ADR[12]_I ( .PADDO(ADR_c_12), .ADR12(ADR[12]));
  ADR_11_ \ADR[11]_I ( .PADDO(ADR_c_11), .ADR11(ADR[11]));
  ADR_10_ \ADR[10]_I ( .PADDO(ADR_c_10), .ADR10(ADR[10]));
  ADR_9_ \ADR[9]_I ( .PADDO(ADR_c_9), .ADR9(ADR[9]));
  ADR_8_ \ADR[8]_I ( .PADDO(ADR_c_8), .ADR8(ADR[8]));
  ADR_7_ \ADR[7]_I ( .PADDO(ADR_c_7), .ADR7(ADR[7]));
  ADR_6_ \ADR[6]_I ( .PADDO(ADR_c_6), .ADR6(ADR[6]));
  ADR_5_ \ADR[5]_I ( .PADDO(ADR_c_5), .ADR5(ADR[5]));
  ADR_4_ \ADR[4]_I ( .PADDO(ADR_c_4), .ADR4(ADR[4]));
  ADR_3_ \ADR[3]_I ( .PADDO(ADR_c_3), .ADR3(ADR[3]));
  ADR_2_ \ADR[2]_I ( .PADDO(ADR_c_2), .ADR2(ADR[2]));
  ADR_1_ \ADR[1]_I ( .PADDO(ADR_c_1), .ADR1(ADR[1]));
  ADR_0_ \ADR[0]_I ( .PADDO(ADR_c_0), .ADR0(ADR[0]));
  BA_1_ \BA[1]_I ( .PADDO(BA_c_1), .BA1(BA[1]));
  BA_0_ \BA[0]_I ( .PADDO(BA_c_0), .BA0(BA[0]));
  DQM_1_ \DQM[1]_I ( .PADDO(DQM_c), .DQM1(DQM[1]));
  DQM_0_ \DQM[0]_I ( .PADDO(DQM_c), .DQM0(DQM[0]));
  nCAS nCAS_I( .PADDO(nCAS_c), .nCAS(nCAS));
  CKE CKE_I( .PADDO(VCC_net), .CKE(CKE));
  nRAS nRAS_I( .PADDO(nRAS_c), .nRAS(nRAS));
  nWE nWE_I( .PADDO(nWE_c), .nWE(nWE));
  nCS nCS_I( .PADDO(GND_net), .nCS(nCS));
  SD_CLK SD_CLK_I( .PADDO(SD_CLK_c), .SD_CLK(SD_CLK));
  LED_3_ \LED[3]_I ( .PADDO(LED_c_3), .LED3(LED[3]));
  LED_2_ \LED[2]_I ( .PADDO(LED_c_2), .LED2(LED[2]));
  LED_1_ \LED[1]_I ( .PADDO(LED_c_1), .LED1(LED[1]));
  LED_0_ \LED[0]_I ( .PADDO(LED_c_0), .LED0(LED[0]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  nreset nreset_I( .PADDI(nreset_c), .nreset(nreset));
  uart_rx uart_rx_I( .PADDI(uart_rx_c), .uart_rx(uart_rx));
  clk_multiply_PLLInst_0 \clk_multiply/PLLInst_0 ( .CLKI(clk_c), 
    .CLKFB(SD_CLK_c), .CLKOP(SD_CLK_c));
  GSR_INST GSR_INST( .GSRNET(nreset_c));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module all_modules1_SLICE_0 ( input A1, B0, A0, M1, M0, CE, CLK, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_2 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_SLICE_1 ( input A1, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_10 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0001 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_2 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_3 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_4 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_5 ( input A1, DI1, CE, 
    LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \all_modules1/sdram_controller1/repeatTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_6 ( input A1, A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart1/DATo_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart1/DATo_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_8 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module all_modules1_SLICE_7 ( input A1, A0, M0, CE, CLK, FCI, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_4 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_8 ( input A1, A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart1/DATo_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart1/DATo_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_6 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_9 ( input B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20006 \all_modules1/sdram_controller1/repeatTimer/sub_604_add_2_12 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_10 ( input A0, DI0, CE, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20007 \all_modules1/sdram_controller1/repeatTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_11 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_12 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_13 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/repeatTimer/count__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/repeatTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_14 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_15 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_16 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_17 ( input A0, DI0, 
    CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i23 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20007 \all_modules1/sdram_controller1/refreshTimer/add_6_25 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_18 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i22 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i21 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_23 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_19 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i20 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i19 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_21 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_20 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i18 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i17 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_19 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_21 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_22 ( input A1, DI1, 
    CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \all_modules1/sdram_controller1/refreshTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_23 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i16 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_17 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_24 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_25 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_26 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/refreshTimer/count__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/refreshTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_27 ( input A0, M1, M0, CE, LSR, 
    CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i9 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i8 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20009 \all_modules1/sdram_controller1/initTimer/count_769_add_4_17 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0008 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_28 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_15 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_29 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_13 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_30 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_11 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_31 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_9 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_32 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_7 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_33 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_5 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_34 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20010 \all_modules1/sdram_controller1/initTimer/count_769_add_4_3 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_35 ( input A1, DI1, CE, 
    CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20011 \all_modules1/sdram_controller1/initTimer/count_769_add_4_1 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_36 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \uart1/sub_7_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_37 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \uart1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart1/sub_7_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_38 ( input A1, A0, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \uart1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart1/sub_7_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_39 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \uart1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart1/sub_7_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_40 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \uart1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \uart1/sub_7_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_41 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \uart1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \uart1/sub_7_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \uart_tx1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0012 \uart_tx1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart_tx1/add_568_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0012 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module uart_tx1_SLICE_43 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \uart_tx1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart_tx1/add_568_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_44 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \uart_tx1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart_tx1/add_568_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_45 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \uart_tx1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0012 \uart_tx1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart_tx1/add_568_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_46 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \uart_tx1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \uart_tx1/add_568_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_47 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0012 \uart_tx1/PS_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/PS_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 \uart_tx1/add_568_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_m_RAM1_SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo2/m_RAM1/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo2/m_RAM1/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo2/m_RAM1/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo2/m_RAM1/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo2/m_RAM1/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo2/m_RAM1/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo2/m_RAM1/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo2/m_RAM1/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module buffer ( input I, output Z );

  BUFBA INST1( .A(I), .Z(Z));
endmodule

module all_modules1_fifo2_SLICE_49 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo2/m_RAM1/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, WRE, 
    WCK, output DO0, DO1 );
  wire   TIELO;

  VLO GND1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(DI0), .DI1(DI1), .DI2(TIELO), 
    .DI3(TIELO), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(DO0), 
    .DO1(DO1), .DO2(), .DO3());
endmodule

module all_modules1_fifo2_SLICE_50 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0013 \all_modules1/fifo2/m_RAM1/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram0013 ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, 
    WRE, WCK, output DO0, DO1 );
  wire   TIELO;

  VLO GND1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(TIELO), .DI1(TIELO), .DI2(DI0), 
    .DI3(DI1), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(), .DO1(), 
    .DO2(DO0), .DO3(DO1));
endmodule

module all_modules1_fifo2_m_RAM0_SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo2/m_RAM0/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo2/m_RAM0/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo2/m_RAM0/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo2/m_RAM0/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo2/m_RAM0/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo2/m_RAM0/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo2/m_RAM0/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo2/m_RAM0/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo2/m_RAM0/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_53 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0013 \all_modules1/fifo2/m_RAM0/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo2/s_RAM_i0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_m_RAM1_SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo1/m_RAM1/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo1/m_RAM1/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo1/m_RAM1/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo1/m_RAM1/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo1/m_RAM1/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo1/m_RAM1/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo1/m_RAM1/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo1/m_RAM1/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo1/m_RAM1/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0013 \all_modules1/fifo1/m_RAM1/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_m_RAM0_SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo1/m_RAM0/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo1/m_RAM0/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo1/m_RAM0/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo1/m_RAM0/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo1/m_RAM0/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo1/m_RAM0/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo1/m_RAM0/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo1/m_RAM0/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_58 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo1/m_RAM0/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_59 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0013 \all_modules1/fifo1/m_RAM0/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/fifo1/s_RAM_i0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \all_modules1/sdram_to_uart1/i3657_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4 \all_modules1/sdram_to_uart1/i3679_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/status_temp_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/status_temp_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3BB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_61 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \all_modules1/sdram_to_uart1/i1_3_lut_adj_104 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \all_modules1/sdram_to_uart1/i1_2_lut_adj_102 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/status_temp_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/status_temp_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_70 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \all_modules1/fifo1/i921_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo1/i914_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre \all_modules1/fifo1/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/fifo1/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40018 \all_modules1/fifo1/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40019 \all_modules1/fifo1/i928_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo1/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8778) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_72 ( input D1, C1, B1, A1, C0, B0, A0, DI0, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40020 \all_modules1/fifo1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40016 \all_modules1/fifo1/i1201_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/fifo1/o_addr_767__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_73 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \all_modules1/fifo1/i892_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo1/i885_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre \all_modules1/fifo1/o_addr_767__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/fifo1/o_addr_767__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40021 \all_modules1/fifo1/i2_4_lut_adj_77 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40019 \all_modules1/fifo1/i899_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo1/o_addr_767__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_75 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \all_modules1/fifo2/i998_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo2/i991_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre \all_modules1/fifo2/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/fifo2/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40022 \all_modules1/fifo2/i2_4_lut_adj_79 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40023 \all_modules1/fifo2/i1005_2_lut_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo2/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h936C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40020 \all_modules1/fifo2/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \all_modules1/fifo2/i1197_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo2/o_addr_768__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3BC4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_78 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \all_modules1/fifo2/i1079_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo2/i1072_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/fifo2/o_addr_768__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/fifo2/o_addr_768__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40021 \all_modules1/fifo2/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40019 \all_modules1/fifo2/i1086_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo2/o_addr_768__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40025 \all_modules1/fifo2/i3_4_lut_adj_78 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40019 \all_modules1/sdram_to_uart1/i1202_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo2/i_addr_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_81 ( input C1, B1, A1, C0, B0, A0, 
    DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40026 \all_modules1/uart_to_sdram1/i3623_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 \all_modules1/uart_to_sdram1/i3660_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/rd_wt_operation_i0_i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_103 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40028 \all_modules1/uart_to_sdram1/i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \all_modules1/fifo1/i3706_2_lut_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/fifo1/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_116 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40030 \all_modules1/sdram_controller1/arbBank/i3798/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40031 \all_modules1/sdram_controller1/arbBank/mux_872_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40032 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_adj_83 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_872_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \uart1/RXDb_68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_118 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40030 \all_modules1/sdram_controller1/arbBank/i3800/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40031 \all_modules1/sdram_controller1/arbBank/mux_873_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i5 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i4 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40034 \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_873_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \uart1/RXDc_69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i6 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_120 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40030 \all_modules1/sdram_controller1/arbBank/i3802/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40031 \all_modules1/sdram_controller1/arbBank/mux_875_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_121 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40035 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_adj_81 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_875_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_122 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_71 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \all_modules1/sdram_controller1/arbBank/mux_874_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \uart1/RXDa_67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i10 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_123 ( input B1, A1, C0, B0, 
    A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/SLICE_123_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/i3720/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40037 \all_modules1/sdram_controller1/arbBank/SLICE_123_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/SLICE_123_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40038 \all_modules1/sdram_controller1/arbBank/i3720/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/i3720/GATE_H0 )
    );
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/sdram_controller1/arbBank/SLICE_123_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/i3720/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/SLICE_123/all_modules1/sdram_controller1/arbBank/SLICE_123_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9898) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_124 ( input D1, C1, B1, A1, 
    C0, B0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   
         \all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/SLICE_124_K1_H1 
         , GNDI, 
         \all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/i3743/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40039 \all_modules1/sdram_controller1/arbBank/SLICE_124_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/SLICE_124_K1_H1 )
    );
  lut40040 \all_modules1/sdram_controller1/arbBank/i3743/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/i3743/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/arbBank/delay_0__i12 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/sdram_controller1/arbBank/SLICE_124_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/i3743/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/SLICE_124/all_modules1/sdram_controller1/arbBank/SLICE_124_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_125 ( input B1, A1, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40041 \all_modules1/sdram_controller1/i3686_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \all_modules1/sdram_controller1/i2_3_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i10 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_delayTimer_SLICE_126 ( input B0, A0, DI0, 
    CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40017 \all_modules1/sdram_controller1/delayTimer/i1044_2_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/sdram_controller1/delayTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_delayTimer_SLICE_127 ( input D1, C1, B1, 
    A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 \all_modules1/sdram_controller1/delayTimer/i1058_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \all_modules1/sdram_controller1/delayTimer/i1051_2_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/sdram_controller1/delayTimer/count__i3 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/delayTimer/count__i2 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_128 ( input DI0, CE, CLK, 
    output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40043 \all_modules1/sdram_controller1/initTimer/n5023\000/BUF1/BUF1 ( 
    .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/initTimer/count_769__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_129 ( input B1, A1, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \all_modules1/sdram_controller1/i1_2_lut_rep_50_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i6 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_130 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40044 \all_modules1/sdram_controller1/i3_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40045 \all_modules1/sdram_controller1/i1287_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i11 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i12 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_131 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \all_modules1/sdram_controller1/i1_3_lut_adj_96 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \all_modules1/sdram_controller1/i1_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i7 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i8 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_132 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40032 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_93 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \all_modules1/sdram_controller1/i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_134 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40015 \all_modules1/uart_to_sdram1/o_stb_wt_I_7_2_lut_rep_74 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \all_modules1/sdram_controller1/i3_4_lut_adj_98 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/rd_wt_operation_i0_i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_135 ( input DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40043 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/init_done_146 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40050 \all_modules1/sdram_controller1/o_ack_I_0_2_lut_rep_52_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \all_modules1/uart_to_sdram1/i2439_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/rd_wt_operation_i0_i0 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_to_uart1_SLICE_146 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40026 \all_modules1/sdram_to_uart1/i1_4_lut_rep_53 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \all_modules1/sdram_to_uart1/i2124_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_to_uart1/state_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7570) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_to_uart1_SLICE_147 ( input B1, A1, D0, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40041 \all_modules1/sdram_to_uart1/i3655_2_lut_rep_86 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \all_modules1/sdram_to_uart1/i1516_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_to_uart1/state_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_157 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \all_modules1/uart_to_sdram1/i1_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40054 \all_modules1/uart_to_sdram1/i2_3_lut_adj_106 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0055 \all_modules1/uart_to_sdram1/state_FSM_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0055 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module all_modules1_uart_to_sdram1_SLICE_158 ( input D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40056 \all_modules1/uart_to_sdram1/i1255_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_159 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40057 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \all_modules1/uart_to_sdram1/i12_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_161 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40059 \all_modules1/uart_to_sdram1/i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40060 \all_modules1/uart_to_sdram1/i1266_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0084) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_162 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40042 \all_modules1/sdram_controller1/i2_3_lut_rep_55 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 \all_modules1/uart_to_sdram1/i1223_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/state_FSM_i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_163 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40061 \all_modules1/uart_to_sdram1/i3_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40062 \all_modules1/uart_to_sdram1/i2_3_lut_adj_107 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/rd_wt_operation_i0_i0 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_166 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i3707_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i1200_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/delayTimer/count__i0 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h20DF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_167 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40017 \all_modules1/fifo1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \uart1/i3649_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/fifo1/i_addr_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_168 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \all_modules1/sdram_controller1/i1276_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \all_modules1/sdram_controller1/i1285_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_169 ( input B1, A1, D0, C0, B0, A0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40036 \all_modules1/sdram_controller1/i2444_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \all_modules1/sdram_controller1/i1_4_lut_adj_97 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0055 \all_modules1/sdram_controller1/state_FSM_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_170 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40066 \all_modules1/sdram_controller1/delay_tim_flag_bdd_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \all_modules1/sdram_controller1/i1_3_lut_4_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/state_FSM_i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_175 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40015 \uart_tx1/DAT_7__I_56_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/ACKi_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_176 ( input C1, B1, A1, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40048 \all_modules1/fifo2/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \all_modules1/fifo2/i1253_3_lut_rep_59 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/fifo2/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40069 \uart1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \uart1/i1_4_lut_adj_63 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/DAT_i0_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/DAT_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40069 \uart1/i1_4_lut_adj_59 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \uart1/i1_4_lut_adj_58 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/DAT_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/DAT_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40069 \uart1/i1_4_lut_adj_61 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \uart1/i1_4_lut_adj_60 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/DAT_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/DAT_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40069 \uart1/i1_4_lut_adj_64 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \uart1/i1_4_lut_adj_62 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/DAT_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/DAT_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40070 \uart1/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40069 \uart1/i58_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0055 \uart1/FSM_FSM_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_183 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart1/FSM_FSM_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/FSM_FSM_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_184 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart1/FSM_FSM_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart1/FSM_FSM_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40071 \uart1/i3704_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \uart1/i1_3_lut_4_lut_adj_57 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart1/FSM_FSM_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_188 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 \uart1/i1_2_lut_3_lut_adj_69 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \uart1/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \uart1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0012 \uart1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_189 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40073 \uart1/i1_2_lut_3_lut_adj_67 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \uart1/i1_2_lut_3_lut_adj_68 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \uart1/PS_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0012 \uart1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_190 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40073 \uart1/i1_2_lut_3_lut_adj_65 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \uart1/i1_2_lut_3_lut_adj_66 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0012 \uart1/PS_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_194 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40036 \uart1/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \uart1/i3682_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/SMPL_72 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_195 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40075 \uart1/i1_2_lut_rep_54 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \uart1/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart1/STBo_76 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_200 ( input D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40060 \uart_tx1/i1309_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0055 \uart_tx1/FSM_FSM_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_201 ( input C1, B1, A1, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40077 \uart_tx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 \uart_tx1/i1314_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_202 ( input M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40078 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 i6( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/FSM_FSM_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40079 \uart_tx1/i35_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_70 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/FSM_FSM_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3530) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_204 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40017 \all_modules1/fifo1/i_addr_3__I_0_i2_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo2/i_addr_3__I_0_i2_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/FSM_FSM_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_205 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_adj_84 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/FSM_FSM_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_206 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_78 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \all_modules1/sdram_controller1/refreshTimer/i4_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart_tx1/FSM_FSM_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart_tx1/FSM_FSM_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_207 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40036 \uart_tx1/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \uart_tx1/i3667_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \uart_tx1/SMPL_61 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_208 ( input B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40075 \all_modules1/uart_to_sdram1/i1302_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \uart_tx1/n4774_bdd_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0012 \uart_tx1/TXD_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_mux_570_i1_SLICE_209 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/SLICE_209_K1_H1 
         , 
         \all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/GATE_H0 
         ;

  lut40081 \all_modules1/sdram_controller1/mux_570_i1/SLICE_209_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/SLICE_209_K1_H1 )
    );
  lut40082 \all_modules1/sdram_controller1/mux_570_i1/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/mux_570_i1/SLICE_209_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/mux_570_i1/SLICE_209/all_modules1/sdram_controller1/mux_570_i1/SLICE_209_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0EE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i3774_SLICE_210 ( input C1, B1, 
    A1, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/GATE_H0 
         ;

  lut40083 \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \all_modules1/sdram_controller1/arbBank/i3774/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i3774/SLICE_210/all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \all_modules1/sdram_controller1/arbBank/i3774/SLICE_210_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i3777_SLICE_211 ( input C1, B1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/SLICE_211_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/GATE_H0 
         ;

  lut40083 \all_modules1/sdram_controller1/arbBank/i3777/SLICE_211_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/SLICE_211_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \all_modules1/sdram_controller1/arbBank/i3777/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i3777/SLICE_211_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i3777/SLICE_211/all_modules1/sdram_controller1/arbBank/i3777/SLICE_211_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_tx1_i3718_SLICE_212 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \uart_tx1/i3718/SLICE_212/uart_tx1/i3718/SLICE_212_K1_H1 , 
         \uart_tx1/i3718/SLICE_212/uart_tx1/i3718/GATE_H0 ;

  lut40084 \uart_tx1/i3718/SLICE_212_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i3718/SLICE_212/uart_tx1/i3718/SLICE_212_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \uart_tx1/i3718/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\uart_tx1/i3718/SLICE_212/uart_tx1/i3718/GATE_H0 ));
  selmux2 \uart_tx1/i3718/SLICE_212_K0K1MUX ( 
    .D0(\uart_tx1/i3718/SLICE_212/uart_tx1/i3718/GATE_H0 ), 
    .D1(\uart_tx1/i3718/SLICE_212/uart_tx1/i3718/SLICE_212_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_213 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40085 \all_modules1/sdram_controller1/i1_4_lut_adj_95 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_214 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40087 \all_modules1/sdram_controller1/i2524_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i17 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i16 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_215 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40085 \all_modules1/sdram_controller1/i1_4_lut_adj_94 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_86 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_216 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 \all_modules1/sdram_controller1/i2527_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_87 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_217 ( input D1, C1, B1, A1, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40089 \all_modules1/sdram_controller1/i2529_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40077 \all_modules1/sdram_controller1/i2554_2_lut_rep_57_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i11 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i10 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_218 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40087 \all_modules1/sdram_controller1/i2522_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_88 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_219 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_91 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 \all_modules1/sdram_controller1/i2523_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_220 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40087 \all_modules1/sdram_controller1/i2526_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_89 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i11 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i10 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_221 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40087 \all_modules1/sdram_controller1/i2528_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40086 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_90 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i13 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i12 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_222 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40087 \all_modules1/sdram_controller1/i2525_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40090 \all_modules1/sdram_controller1/i2533_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_223 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40091 \uart_tx1/i36_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \uart_tx1/n20_bdd_4_lut_3723 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3335) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_224 ( input C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40093 \all_modules1/sdram_controller1/i114_4_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \all_modules1/uart_to_sdram1/i1_3_lut_rep_63_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/rd_wt_operation_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A8A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_225 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40015 \all_modules1/sdram_controller1/i1_2_lut_rep_75 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \all_modules1/uart_to_sdram1/i3673_2_lut_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h70F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_226 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40096 \all_modules1/sdram_controller1/i3677_2_lut_2_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \all_modules1/uart_to_sdram1/i_ack_N_284_I_0_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_227 ( input C1, B1, A1, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40097 \all_modules1/sdram_to_uart1/i19_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \all_modules1/sdram_to_uart1/i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/wt_o_stb_147 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD5D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_228 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40097 \all_modules1/sdram_to_uart1/i19_3_lut_adj_100 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \all_modules1/sdram_to_uart1/i1_3_lut_adj_99 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart1/DATo_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart1/DATo_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_229 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40097 \all_modules1/sdram_to_uart1/i17_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \all_modules1/sdram_to_uart1/i1_3_lut_adj_101 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \uart1/DATo_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \uart1/DATo_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_230 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40015 \all_modules1/sdram_to_uart1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \all_modules1/sdram_to_uart1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \uart1/FSM_FSM_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart1/FSM_FSM_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_231 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_87 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \all_modules1/sdram_controller1/i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i5 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i4 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_232 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_69 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \all_modules1/sdram_controller1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i20 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_233 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40071 i30_4_lut_else_2_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \all_modules1/sdram_controller1/i1342_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_234 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40101 
    \all_modules1/sdram_controller1/delayTimer/period_3__I_0_i8_4_lut_rep_60 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40102 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA077) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_235 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40103 
    \all_modules1/sdram_controller1/delayTimer/delay_tim_flag_I_0_1_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_92 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i19 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i18 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3031) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_236 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40080 \all_modules1/sdram_controller1/i5_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40080 \all_modules1/sdram_controller1/i3_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i3 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i2 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_237 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40015 \all_modules1/sdram_controller1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40105 \all_modules1/sdram_controller1/i80_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i7 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i6 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_238 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40106 \all_modules1/sdram_controller1/refreshTimer/i5_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \all_modules1/sdram_controller1/refreshTimer/i3_2_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_239 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40107 i790_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 \all_modules1/sdram_controller1/refreshTimer/i846_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_240 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40109 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut_adj_85 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/rd_o_stb_148 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_241 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40111 \all_modules1/sdram_controller1/initTimer/i2_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40041 \all_modules1/sdram_controller1/initTimer/i3671_2_lut_rep_51 ( 
    .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_242 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \all_modules1/sdram_controller1/initTimer/i4_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40108 \all_modules1/sdram_controller1/initTimer/i861_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_243 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40054 \all_modules1/sdram_controller1/initTimer/i826_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \all_modules1/sdram_controller1/initTimer/i862_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_244 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40112 \all_modules1/fifo2/i2_4_lut_adj_80 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40026 \all_modules1/fifo2/i1000_2_lut_rep_67_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBBE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40113 \uart1/i3701_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 \all_modules1/fifo1/i3613_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_246 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40015 \all_modules1/fifo1/i916_2_lut_rep_68 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \all_modules1/fifo1/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i23 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i22 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_247 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40114 \i3751/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40115 i3698_3_lut_rep_56( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h99F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \uart1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_249 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_76 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40036 \uart1/i1_2_lut_rep_80 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_250 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_71 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40077 \uart1/i1_2_lut_rep_65_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_251 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_74 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40036 \uart1/i1_2_lut_rep_81 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_252 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40036 \uart1/i1_2_lut_rep_82 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_253 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_75 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40077 \uart1/i1_2_lut_rep_66_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart_tx1/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \uart_tx1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i19 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i18 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_255 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40116 \all_modules1/sdram_controller1/i2466_2_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40116 \all_modules1/sdram_controller1/i2520_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i23 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_256 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40117 \all_modules1/fifo1/i1218_2_lut_rep_58_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40098 \all_modules1/fifo1/i1217_3_lut_rep_62 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i21 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i20 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_73 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40080 \uart1/i1_2_lut_3_lut_4_lut_adj_72 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_258 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40118 \all_modules1/uart_to_sdram1/i3709_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \all_modules1/uart_to_sdram1/i2_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_to_uart1/sd_data_temp_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_259 ( input B1, A1, D0, C0, B0, A0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_85 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \all_modules1/sdram_to_uart1/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i13 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_260 ( input C1, B1, A1, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40062 \all_modules1/sdram_controller1/i2544_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \all_modules1/sdram_controller1/i2546_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i1 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i0 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_261 ( input C1, B1, A1, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40027 \all_modules1/sdram_controller1/i3695_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_89 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i15 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i14 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_262 ( input B1, A1, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40120 \all_modules1/sdram_controller1/i23_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \all_modules1/sdram_controller1/i3689_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i13 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i12 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_263 ( input B1, A1, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_adj_82 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \all_modules1/sdram_controller1/arbBank/i3745_else_2_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9898) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_264 ( input C1, B1, A1, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40122 \all_modules1/sdram_controller1/arbBank/i3747_else_2_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_76 ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA4A4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_265 ( input C1, B1, A1, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40121 \all_modules1/sdram_controller1/arbBank/i3749_else_2_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_79 ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/sdram_controller1/RD_DATA_i0_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_266 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40097 \all_modules1/sdram_to_uart1/i17_3_lut_adj_105 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \all_modules1/sdram_to_uart1/i21_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \uart1/FSM_FSM_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart1/FSM_FSM_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_267 ( input B1, A1, B0, A0, M0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40015 \all_modules1/sdram_controller1/i2460_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \all_modules1/sdram_to_uart1/i1_2_lut_adj_103 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_268 ( input B1, A1, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_88 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \all_modules1/sdram_controller1/i2467_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i22 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i21 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_269 ( input B1, A1, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40036 \all_modules1/sdram_controller1/i1_2_lut_rep_70 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \all_modules1/sdram_controller1/i2545_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_ADR_TEMP__i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_270 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40111 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_rep_91 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \all_modules1/sdram_controller1/i3692_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i15 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \all_modules1/sdram_controller1/SD_DATA_TEMP__i14 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_271 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40118 \all_modules1/sdram_controller1/initTimer/i1450_2_lut ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \all_modules1/sdram_controller1/initTimer/i3664_3_lut_rep_49_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_272 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \uart_tx1/i3675_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \uart_tx1/i1524_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i17 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_adr_i16 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_273 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \all_modules1/sdram_controller1/refreshTimer/i6_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \all_modules1/sdram_controller1/refreshTimer/i2_2_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \all_modules1/uart_to_sdram1/sd_data_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_335 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre \uart1/FSM_FSM_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_340 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/DAT_i0_i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/DAT_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_341 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/DAT_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/DAT_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_342 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/DAT_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/DAT_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_343 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \uart_tx1/DAT_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \uart_tx1/DAT_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DB_15_ ( output PADDI, input PADDT, PADDO, inout DB15 );

  xo2iobuf DB_pad_15( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB15), .PADI(DB15));

  specify
    (PADDT => DB15) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB15) = (0:0:0,0:0:0);
    (DB15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB15, 0:0:0);
    $width (negedge DB15, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module DB_14_ ( output PADDI, input PADDT, PADDO, inout DB14 );

  xo2iobuf DB_pad_14( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB14), .PADI(DB14));

  specify
    (PADDT => DB14) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB14) = (0:0:0,0:0:0);
    (DB14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB14, 0:0:0);
    $width (negedge DB14, 0:0:0);
  endspecify

endmodule

module DB_13_ ( output PADDI, input PADDT, PADDO, inout DB13 );

  xo2iobuf DB_pad_13( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB13), .PADI(DB13));

  specify
    (PADDT => DB13) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB13) = (0:0:0,0:0:0);
    (DB13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB13, 0:0:0);
    $width (negedge DB13, 0:0:0);
  endspecify

endmodule

module DB_12_ ( output PADDI, input PADDT, PADDO, inout DB12 );

  xo2iobuf DB_pad_12( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB12), .PADI(DB12));

  specify
    (PADDT => DB12) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB12) = (0:0:0,0:0:0);
    (DB12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB12, 0:0:0);
    $width (negedge DB12, 0:0:0);
  endspecify

endmodule

module DB_11_ ( output PADDI, input PADDT, PADDO, inout DB11 );

  xo2iobuf DB_pad_11( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB11), .PADI(DB11));

  specify
    (PADDT => DB11) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB11) = (0:0:0,0:0:0);
    (DB11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB11, 0:0:0);
    $width (negedge DB11, 0:0:0);
  endspecify

endmodule

module DB_10_ ( output PADDI, input PADDT, PADDO, inout DB10 );

  xo2iobuf DB_pad_10( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB10), .PADI(DB10));

  specify
    (PADDT => DB10) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB10) = (0:0:0,0:0:0);
    (DB10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB10, 0:0:0);
    $width (negedge DB10, 0:0:0);
  endspecify

endmodule

module DB_9_ ( output PADDI, input PADDT, PADDO, inout DB9 );

  xo2iobuf DB_pad_9( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB9), .PADI(DB9));

  specify
    (PADDT => DB9) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB9) = (0:0:0,0:0:0);
    (DB9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB9, 0:0:0);
    $width (negedge DB9, 0:0:0);
  endspecify

endmodule

module DB_8_ ( output PADDI, input PADDT, PADDO, inout DB8 );

  xo2iobuf DB_pad_8( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB8), .PADI(DB8));

  specify
    (PADDT => DB8) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB8) = (0:0:0,0:0:0);
    (DB8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB8, 0:0:0);
    $width (negedge DB8, 0:0:0);
  endspecify

endmodule

module DB_7_ ( output PADDI, input PADDT, PADDO, inout DB7 );

  xo2iobuf DB_pad_7( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB7), .PADI(DB7));

  specify
    (PADDT => DB7) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB7) = (0:0:0,0:0:0);
    (DB7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB7, 0:0:0);
    $width (negedge DB7, 0:0:0);
  endspecify

endmodule

module DB_6_ ( output PADDI, input PADDT, PADDO, inout DB6 );

  xo2iobuf DB_pad_6( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB6), .PADI(DB6));

  specify
    (PADDT => DB6) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB6) = (0:0:0,0:0:0);
    (DB6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB6, 0:0:0);
    $width (negedge DB6, 0:0:0);
  endspecify

endmodule

module DB_5_ ( output PADDI, input PADDT, PADDO, inout DB5 );

  xo2iobuf DB_pad_5( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB5), .PADI(DB5));

  specify
    (PADDT => DB5) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB5) = (0:0:0,0:0:0);
    (DB5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB5, 0:0:0);
    $width (negedge DB5, 0:0:0);
  endspecify

endmodule

module DB_4_ ( output PADDI, input PADDT, PADDO, inout DB4 );

  xo2iobuf DB_pad_4( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB4), .PADI(DB4));

  specify
    (PADDT => DB4) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB4) = (0:0:0,0:0:0);
    (DB4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB4, 0:0:0);
    $width (negedge DB4, 0:0:0);
  endspecify

endmodule

module DB_3_ ( output PADDI, input PADDT, PADDO, inout DB3 );

  xo2iobuf DB_pad_3( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB3), .PADI(DB3));

  specify
    (PADDT => DB3) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB3) = (0:0:0,0:0:0);
    (DB3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB3, 0:0:0);
    $width (negedge DB3, 0:0:0);
  endspecify

endmodule

module DB_2_ ( output PADDI, input PADDT, PADDO, inout DB2 );

  xo2iobuf DB_pad_2( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB2), .PADI(DB2));

  specify
    (PADDT => DB2) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB2) = (0:0:0,0:0:0);
    (DB2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB2, 0:0:0);
    $width (negedge DB2, 0:0:0);
  endspecify

endmodule

module DB_1_ ( output PADDI, input PADDT, PADDO, inout DB1 );

  xo2iobuf DB_pad_1( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB1), .PADI(DB1));

  specify
    (PADDT => DB1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB1) = (0:0:0,0:0:0);
    (DB1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB1, 0:0:0);
    $width (negedge DB1, 0:0:0);
  endspecify

endmodule

module DB_0_ ( output PADDI, input PADDT, PADDO, inout DB0 );

  xo2iobuf DB_pad_0( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB0), .PADI(DB0));

  specify
    (PADDT => DB0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB0) = (0:0:0,0:0:0);
    (DB0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB0, 0:0:0);
    $width (negedge DB0, 0:0:0);
  endspecify

endmodule

module uart_tx ( input PADDO, output uart_tx );
  wire   GNDI;

  xo2iobuf0125 uart_tx_pad( .I(PADDO), .T(GNDI), .PAD(uart_tx));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => uart_tx) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0125 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module ADR_12_ ( input PADDO, output ADR12 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_12( .I(PADDO), .T(GNDI), .PAD(ADR12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR12) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_11_ ( input PADDO, output ADR11 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_11( .I(PADDO), .T(GNDI), .PAD(ADR11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR11) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_10_ ( input PADDO, output ADR10 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_10( .I(PADDO), .T(GNDI), .PAD(ADR10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR10) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_9_ ( input PADDO, output ADR9 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_9( .I(PADDO), .T(GNDI), .PAD(ADR9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR9) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_8_ ( input PADDO, output ADR8 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_8( .I(PADDO), .T(GNDI), .PAD(ADR8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_7_ ( input PADDO, output ADR7 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_7( .I(PADDO), .T(GNDI), .PAD(ADR7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR7) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_6_ ( input PADDO, output ADR6 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_6( .I(PADDO), .T(GNDI), .PAD(ADR6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR6) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_5_ ( input PADDO, output ADR5 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_5( .I(PADDO), .T(GNDI), .PAD(ADR5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_4_ ( input PADDO, output ADR4 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_4( .I(PADDO), .T(GNDI), .PAD(ADR4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_3_ ( input PADDO, output ADR3 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_3( .I(PADDO), .T(GNDI), .PAD(ADR3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_2_ ( input PADDO, output ADR2 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_2( .I(PADDO), .T(GNDI), .PAD(ADR2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_1_ ( input PADDO, output ADR1 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_1( .I(PADDO), .T(GNDI), .PAD(ADR1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_0_ ( input PADDO, output ADR0 );
  wire   GNDI;

  xo2iobuf0125 ADR_pad_0( .I(PADDO), .T(GNDI), .PAD(ADR0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_1_ ( input PADDO, output BA1 );
  wire   GNDI;

  xo2iobuf0125 BA_pad_1( .I(PADDO), .T(GNDI), .PAD(BA1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA1) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_0_ ( input PADDO, output BA0 );
  wire   GNDI;

  xo2iobuf0125 BA_pad_0( .I(PADDO), .T(GNDI), .PAD(BA0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_1_ ( input PADDO, output DQM1 );
  wire   GNDI;

  xo2iobuf0125 DQM_pad_1( .I(PADDO), .T(GNDI), .PAD(DQM1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_0_ ( input PADDO, output DQM0 );
  wire   GNDI;

  xo2iobuf0125 DQM_pad_0( .I(PADDO), .T(GNDI), .PAD(DQM0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM0) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCAS ( input PADDO, output nCAS );
  wire   GNDI;

  xo2iobuf0125 nCAS_pad( .I(PADDO), .T(GNDI), .PAD(nCAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module CKE ( input PADDO, output CKE );
  wire   GNDI;

  xo2iobuf0125 CKE_pad( .I(PADDO), .T(GNDI), .PAD(CKE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CKE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nRAS ( input PADDO, output nRAS );
  wire   GNDI;

  xo2iobuf0125 nRAS_pad( .I(PADDO), .T(GNDI), .PAD(nRAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nRAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module nWE ( input PADDO, output nWE );
  wire   GNDI;

  xo2iobuf0125 nWE_pad( .I(PADDO), .T(GNDI), .PAD(nWE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nWE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCS ( input PADDO, output nCS );
  wire   GNDI;

  xo2iobuf0125 nCS_pad( .I(PADDO), .T(GNDI), .PAD(nCS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCS) = (0:0:0,0:0:0);
  endspecify

endmodule

module SD_CLK ( input PADDO, output SD_CLK );
  wire   GNDI;

  xo2iobuf0125 SD_CLK_pad( .I(PADDO), .T(GNDI), .PAD(SD_CLK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => SD_CLK) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_3_ ( input PADDO, output LED3 );
  wire   GNDI;

  xo2iobuf0125 LED_pad_3( .I(PADDO), .T(GNDI), .PAD(LED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_2_ ( input PADDO, output LED2 );
  wire   GNDI;

  xo2iobuf0125 LED_pad_2( .I(PADDO), .T(GNDI), .PAD(LED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_1_ ( input PADDO, output LED1 );
  wire   GNDI;

  xo2iobuf0125 LED_pad_1( .I(PADDO), .T(GNDI), .PAD(LED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_0_ ( input PADDO, output LED0 );
  wire   GNDI;

  xo2iobuf0125 LED_pad_0( .I(PADDO), .T(GNDI), .PAD(LED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0126 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module xo2iobuf0126 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module nreset ( output PADDI, input nreset );

  xo2iobuf0126 nreset_pad( .Z(PADDI), .PAD(nreset));

  specify
    (nreset => PADDI) = (0:0:0,0:0:0);
    $width (posedge nreset, 0:0:0);
    $width (negedge nreset, 0:0:0);
  endspecify

endmodule

module uart_rx ( output PADDI, input uart_rx );

  xo2iobuf0126 uart_rx_pad( .Z(PADDI), .PAD(uart_rx));

  specify
    (uart_rx => PADDI) = (0:0:0,0:0:0);
    $width (posedge uart_rx, 0:0:0);
    $width (negedge uart_rx, 0:0:0);
  endspecify

endmodule

module clk_multiply_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \clk_multiply/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 8;
  defparam INST10.CLKI_DIV = 3;
  defparam INST10.CLKOP_CPHASE = 3;
  defparam INST10.CLKOP_DIV = 4;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
