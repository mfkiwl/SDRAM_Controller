
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o sdram_uart_Implementation_mapvo.vo -w -neg -gui -msgset C:/lscc/sd_ram_uart/promote.xml sdram_uart_Implementation_map.ncd 
// Netlist created on Thu May 30 23:01:58 2019
// Netlist written on Thu May 30 23:02:02 2019
// Design is for device LCMXO2-7000HC
// Design is for package TQFP144
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module sdram_uart_top ( clk, nreset, uart_rx, uart_tx, DB, ADR, BA, DQM, nCAS, 
                        CKE, nRAS, nWE, nCS, SD_CLK, LED );
  input  clk, nreset, uart_rx;
  output uart_tx;
  output [12:0] ADR;
  output [1:0] BA;
  output [1:0] DQM;
  output nCAS, CKE, nRAS, nWE, nCS, SD_CLK;
  output [3:0] LED;
  inout  [15:0] DB;
  wire   \all_modules1/rx_sd_adr_13 , \all_modules1/rx_dat1_5 , 
         \all_modules1/o_stb_rd_N_367 , \all_modules1/rx_sd_adr_12 , 
         \all_modules1/rx_dat1_4 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_13 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_12 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 , SD_CLK_c, 
         \all_modules1/uart_to_sdram1/n4680 , 
         \all_modules1/uart_to_sdram1/n4681 , \all_modules1/rx_sd_adr_11 , 
         \all_modules1/rx_dat1_3 , \all_modules1/rx_sd_adr_10 , 
         \all_modules1/rx_dat1_2 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_11 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_10 , 
         \all_modules1/uart_to_sdram1/n4679 , 
         \all_modules1/uart_to_sdram1/rx_sd_adr_9 , \all_modules1/rx_dat1_1 , 
         \all_modules1/rx_sd_adr_8 , \all_modules1/rx_dat1_0 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_9 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_8 , 
         \all_modules1/uart_to_sdram1/n4678 , \all_modules1/rx_sd_adr_7 , 
         \all_modules1/rx_dat1_7 , \all_modules1/rx_sd_adr_6 , 
         \all_modules1/rx_dat1_6 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_7 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_6 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 , 
         \all_modules1/uart_to_sdram1/n4677 , \all_modules1/rx_sd_adr_23 , 
         \all_modules1/rx_sd_adr_22 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_23 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_22 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 , 
         \all_modules1/uart_to_sdram1/n4685 , \all_modules1/rx_sd_adr_21 , 
         \all_modules1/rx_sd_adr_20 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_21 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_20 , 
         \all_modules1/uart_to_sdram1/n4684 , \all_modules1/rx_sd_adr_19 , 
         \all_modules1/rx_sd_adr_18 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_19 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_18 , 
         \all_modules1/uart_to_sdram1/n4683 , \all_modules1/rx_sd_adr_17 , 
         \all_modules1/rx_sd_adr_16 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_17 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_16 , 
         \all_modules1/uart_to_sdram1/n4682 , \all_modules1/rx_sd_adr_15 , 
         \all_modules1/rx_sd_adr_14 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_15 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_14 , 
         \all_modules1/rx_sd_adr_5 , \all_modules1/rx_sd_adr_4 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_5 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_4 , 
         \all_modules1/uart_to_sdram1/n4676 , \all_modules1/rx_sd_adr_3 , 
         \all_modules1/rx_sd_adr_2 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_3 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_2 , 
         \all_modules1/uart_to_sdram1/n4675 , \all_modules1/rx_sd_adr_1 , 
         \all_modules1/rx_sd_adr_0 , \all_modules1/uts_ack1 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_1 , 
         \all_modules1/uart_to_sdram1/sd_adr_23_N_319_0 , 
         \all_modules1/uart_to_sdram1/n4674 , \all_modules1/tx_sd_data_1 , 
         \all_modules1/tx_sd_data_0 , 
         \all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_0 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_1 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_15 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4748 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n70 , 
         \all_modules1/uart_to_sdram1/data_array_len_6 , 
         \all_modules1/uart_to_sdram1/data_array_len_7 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_14 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_13 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n71 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n72 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_N_370 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4747 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_12 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_11 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n73 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n74 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4746 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_10 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_9 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n75 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n76 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4745 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_8 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_7 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n77 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n78 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4744 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_6 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_5 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n79 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n80 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4743 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_4 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_3 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n81 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n82 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4742 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_2 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_1 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n83 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n84 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4741 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n16 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n85 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_15 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n70 , 
         \all_modules1/uart_to_sdram1/data_tim_flag , 
         \all_modules1/uart_to_sdram1/data_tim_flag_N_369 , 
         \all_modules1/uart_to_sdram1/data_count_clk , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4730 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_14 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_13 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n71 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n72 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4729 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_12 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_11 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n73 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n74 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4728 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_10 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_9 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n75 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n76 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4727 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_8 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_7 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n77 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n78 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4726 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_6 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_5 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n79 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n80 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4725 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_4 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_3 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n81 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n82 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4724 , 
         \all_modules1/uart_to_sdram1/data_array_len_15 , 
         \all_modules1/tx_sd_data_5 , \all_modules1/tx_sd_data_4 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4666 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_4 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_5 , 
         \all_modules1/uart_to_sdram1/data_array_len_14 , 
         \all_modules1/uart_to_sdram1/data_array_len_13 , 
         \all_modules1/tx_sd_data_3 , \all_modules1/tx_sd_data_2 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4665 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_2 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_3 , 
         \all_modules1/uart_to_sdram1/data_array_len_12 , 
         \all_modules1/uart_to_sdram1/data_array_len_11 , 
         \all_modules1/tx_sd_data_15 , \all_modules1/tx_sd_data_14 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4664 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_14 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_15 , 
         \all_modules1/uart_to_sdram1/data_array_len_10 , 
         \all_modules1/uart_to_sdram1/data_array_len_9 , 
         \all_modules1/tx_sd_data_13 , \all_modules1/tx_sd_data_12 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4663 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_12 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_13 , 
         \all_modules1/uart_to_sdram1/data_array_len_8 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4662 , 
         \all_modules1/uart_to_sdram1/data_array_len_5 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4661 , 
         \all_modules1/uart_to_sdram1/data_array_len_0 , 
         \all_modules1/uart_to_sdram1/data_array_len_1 , 
         \all_modules1/uart_to_sdram1/data_array_len_4 , 
         \all_modules1/uart_to_sdram1/data_array_len_3 , 
         \all_modules1/tx_sd_data_9 , \all_modules1/tx_sd_data_8 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4660 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_8 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_9 , 
         \all_modules1/uart_to_sdram1/data_array_len_2 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_2 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_1 , 
         \all_modules1/tx_sd_data_7 , \all_modules1/tx_sd_data_6 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4659 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_6 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_7 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_0 , 
         \all_modules1/tx_sd_data_11 , \all_modules1/tx_sd_data_10 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_10 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_11 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n83 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n84 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4723 , 
         \all_modules1/uart_to_sdram1/data_tim_flag_I_0/n85 , 
         \all_modules1/sdram_controller1/repeatTimer/count_13 , 
         \all_modules1/sdram_controller1/repeatTimer/n7 , 
         \all_modules1/sdram_controller1/count_2_derived_14_enable_14 , 
         \all_modules1/sdram_controller1/n5382 , 
         \all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 , 
         \all_modules1/sdram_controller1/repeatTimer/n4722 , 
         \all_modules1/sdram_controller1/repeatTimer/count_12 , 
         \all_modules1/sdram_controller1/repeatTimer/count_11 , 
         \all_modules1/sdram_controller1/repeatTimer/n8 , 
         \all_modules1/sdram_controller1/repeatTimer/n9 , 
         \all_modules1/sdram_controller1/repeatTimer/n4721 , 
         \all_modules1/sdram_controller1/repeatTimer/count_10 , 
         \all_modules1/sdram_controller1/repeatTimer/count_9 , 
         \all_modules1/sdram_controller1/repeatTimer/n10 , 
         \all_modules1/sdram_controller1/repeatTimer/n11 , 
         \all_modules1/sdram_controller1/repeatTimer/n4720 , 
         \all_modules1/sdram_controller1/repeatTimer/n4690 , 
         \all_modules1/sdram_controller1/repeatTimer/n4691 , 
         \all_modules1/sdram_controller1/repeatTimer/count_8 , 
         \all_modules1/sdram_controller1/repeatTimer/count_7 , 
         \all_modules1/sdram_controller1/repeatTimer/n12 , 
         \all_modules1/sdram_controller1/repeatTimer/n13 , 
         \all_modules1/sdram_controller1/repeatTimer/n4719 , 
         \all_modules1/sdram_controller1/repeatTimer/n4689 , 
         \all_modules1/sdram_controller1/repeatTimer/n4688 , 
         \all_modules1/sdram_controller1/repeatTimer/count_6 , 
         \all_modules1/sdram_controller1/repeatTimer/count_5 , 
         \all_modules1/sdram_controller1/repeatTimer/n14 , 
         \all_modules1/sdram_controller1/repeatTimer/n15 , 
         \all_modules1/sdram_controller1/repeatTimer/n4718 , 
         \all_modules1/sdram_controller1/repeatTimer/n4687 , 
         \all_modules1/sdram_controller1/repeatTimer/count_4 , 
         \all_modules1/repeat_tim_period_13 , 
         \all_modules1/sdram_controller1/repeatTimer/count_3 , 
         \all_modules1/sdram_controller1/repeatTimer/n16 , 
         \all_modules1/sdram_controller1/repeatTimer/n17 , 
         \all_modules1/sdram_controller1/repeatTimer/n4717 , 
         \all_modules1/sdram_controller1/repeatTimer/count_2 , 
         \all_modules1/sdram_controller1/repeatTimer/count_1 , 
         \all_modules1/sdram_controller1/repeatTimer/n18 , 
         \all_modules1/sdram_controller1/repeatTimer/n19 , 
         \all_modules1/sdram_controller1/repeatTimer/n4716 , 
         \all_modules1/sdram_controller1/repeatTimer/count_0 , 
         \all_modules1/sdram_controller1/repeatTimer/n20 , 
         \all_modules1/sdram_controller1/repeat_tim_flag , 
         \all_modules1/sdram_controller1/refreshTimer/count_23 , 
         \all_modules1/sdram_controller1/refreshTimer/n7 , SD_CLK_c_enable_128, 
         refresh_tim_reset, 
         \all_modules1/sdram_controller1/refreshTimer/n4715 , 
         \all_modules1/sdram_controller1/refreshTimer/count_22 , 
         \all_modules1/sdram_controller1/refreshTimer/count_21 , 
         \all_modules1/sdram_controller1/refreshTimer/n8 , 
         \all_modules1/sdram_controller1/refreshTimer/n9_adj_1003 , 
         \all_modules1/sdram_controller1/refreshTimer/n4714 , 
         \all_modules1/sdram_controller1/refreshTimer/count_20 , 
         \all_modules1/sdram_controller1/refreshTimer/count_19 , 
         \all_modules1/sdram_controller1/refreshTimer/n10 , 
         \all_modules1/sdram_controller1/refreshTimer/n11 , 
         \all_modules1/sdram_controller1/refreshTimer/n4713 , 
         \all_modules1/sdram_controller1/refreshTimer/count_18 , 
         \all_modules1/sdram_controller1/refreshTimer/count_17 , 
         \all_modules1/sdram_controller1/refreshTimer/n12 , 
         \all_modules1/sdram_controller1/refreshTimer/n13 , 
         \all_modules1/sdram_controller1/refreshTimer/n4712 , 
         \all_modules1/sdram_controller1/refreshTimer/count_16 , 
         \all_modules1/sdram_controller1/refreshTimer/count_15 , 
         \all_modules1/sdram_controller1/refreshTimer/n14 , 
         \all_modules1/sdram_controller1/refreshTimer/n15 , 
         \all_modules1/sdram_controller1/refreshTimer/n4711 , 
         \all_modules1/sdram_controller1/refreshTimer/count_14 , 
         \all_modules1/sdram_controller1/refreshTimer/count_13 , 
         \all_modules1/sdram_controller1/refreshTimer/n16 , 
         \all_modules1/sdram_controller1/refreshTimer/n17 , 
         \all_modules1/sdram_controller1/refreshTimer/n4710 , 
         \all_modules1/sdram_controller1/refreshTimer/count_12 , 
         \all_modules1/sdram_controller1/refreshTimer/count_11 , 
         \all_modules1/sdram_controller1/refreshTimer/n18 , 
         \all_modules1/sdram_controller1/refreshTimer/n19 , 
         \all_modules1/sdram_controller1/refreshTimer/n4709 , 
         \all_modules1/sdram_controller1/refreshTimer/count_10 , 
         \all_modules1/sdram_controller1/refreshTimer/count_9 , 
         \all_modules1/sdram_controller1/refreshTimer/n20 , 
         \all_modules1/sdram_controller1/refreshTimer/n21 , 
         \all_modules1/sdram_controller1/refreshTimer/n4708 , 
         \all_modules1/sdram_controller1/refreshTimer/count_8 , 
         \all_modules1/sdram_controller1/refreshTimer/count_7 , 
         \all_modules1/sdram_controller1/refreshTimer/n22 , 
         \all_modules1/sdram_controller1/refreshTimer/n23 , 
         \all_modules1/sdram_controller1/refreshTimer/n4707 , 
         \all_modules1/sdram_controller1/refreshTimer/count_6 , 
         \all_modules1/sdram_controller1/refreshTimer/count_5 , 
         \all_modules1/sdram_controller1/refreshTimer/n24 , 
         \all_modules1/sdram_controller1/refreshTimer/n25 , 
         \all_modules1/sdram_controller1/refreshTimer/n4706 , 
         \all_modules1/sdram_controller1/refreshTimer/count_4 , 
         \all_modules1/sdram_controller1/refreshTimer/count_3 , 
         \all_modules1/sdram_controller1/refreshTimer/n26 , 
         \all_modules1/sdram_controller1/refreshTimer/n27 , 
         \all_modules1/sdram_controller1/refreshTimer/n4705 , 
         \all_modules1/sdram_controller1/refreshTimer/count_2 , 
         \all_modules1/sdram_controller1/refreshTimer/count_1 , 
         \all_modules1/sdram_controller1/refreshTimer/n28 , 
         \all_modules1/sdram_controller1/refreshTimer/n29 , 
         \all_modules1/sdram_controller1/refreshTimer/n4704 , 
         \all_modules1/sdram_controller1/refreshTimer/count_0 , 
         \all_modules1/sdram_controller1/refreshTimer/n30 , 
         \all_modules1/sdram_controller1/initTimer/count_15 , 
         \all_modules1/rx_sd_data_5 , \all_modules1/rx_sd_data_4 , 
         \all_modules1/SD_CLK_c_enable_213 , 
         \all_modules1/sdram_controller1/n1737 , 
         \all_modules1/sdram_controller1/initTimer/n4703 , 
         \all_modules1/sdram_controller1/initTimer/n70 , SD_DATA_TEMP_4, 
         SD_DATA_TEMP_5, \all_modules1/sdram_controller1/initTimer/count_14 , 
         \all_modules1/sdram_controller1/initTimer/count_13 , 
         \all_modules1/sdram_controller1/initTimer/n71 , 
         \all_modules1/sdram_controller1/initTimer/n72 , 
         \all_modules1/sdram_controller1/SD_CLK_c_enable_125 , 
         \all_modules1/sdram_controller1/initTimer/n4702 , 
         \all_modules1/sdram_controller1/initTimer/count_12 , 
         \all_modules1/sdram_controller1/initTimer/count_11 , 
         \all_modules1/sdram_controller1/initTimer/n73 , 
         \all_modules1/sdram_controller1/initTimer/n74 , 
         \all_modules1/sdram_controller1/initTimer/n4701 , 
         \all_modules1/sdram_controller1/initTimer/count_10 , 
         \all_modules1/sdram_controller1/initTimer/count_9 , 
         \all_modules1/sdram_controller1/initTimer/n75 , 
         \all_modules1/sdram_controller1/initTimer/n76 , 
         \all_modules1/sdram_controller1/initTimer/n4700 , 
         \all_modules1/sdram_controller1/initTimer/count_8 , 
         \all_modules1/sdram_controller1/initTimer/count_7 , 
         \all_modules1/sdram_controller1/initTimer/n77 , 
         \all_modules1/sdram_controller1/initTimer/n78 , 
         \all_modules1/sdram_controller1/initTimer/n4699 , 
         \all_modules1/sdram_controller1/initTimer/count_6 , 
         \all_modules1/sdram_controller1/initTimer/count_5 , 
         \all_modules1/sdram_controller1/initTimer/n79 , 
         \all_modules1/sdram_controller1/initTimer/n80 , 
         \all_modules1/sdram_controller1/initTimer/n4698 , 
         \all_modules1/sdram_controller1/initTimer/count_4 , 
         \all_modules1/sdram_controller1/initTimer/count_3 , 
         \all_modules1/sdram_controller1/initTimer/n81 , 
         \all_modules1/sdram_controller1/initTimer/n82 , 
         \all_modules1/sdram_controller1/initTimer/n4697 , 
         \all_modules1/sdram_controller1/initTimer/count_2 , 
         \all_modules1/sdram_controller1/initTimer/count_1 , 
         \all_modules1/sdram_controller1/initTimer/n83 , 
         \all_modules1/sdram_controller1/initTimer/n84 , 
         \all_modules1/sdram_controller1/initTimer/n4696 , 
         \all_modules1/sdram_controller1/initTimer/count_0 , 
         \all_modules1/sdram_controller1/initTimer/n85 , 
         \all_modules1/fifo2/i_addr_7 , \all_modules1/fifo2/i_addr_1_7 , 
         \all_modules1/tx_ack1 , \all_modules1/fifo2/n4695 , 
         \all_modules1/fifo2/i_addr_6 , \all_modules1/fifo2/i_addr_5 , 
         \all_modules1/fifo2/i_addr_1_6 , \all_modules1/fifo2/i_addr_1_5 , 
         \all_modules1/fifo2/n4694 , \all_modules1/fifo2/i_addr_4 , 
         \all_modules1/fifo2/i_addr_3 , \all_modules1/fifo2/i_addr_1_4 , 
         \all_modules1/fifo2/i_addr_1_3 , \all_modules1/fifo2/n4693 , 
         \all_modules1/fifo2/i_addr_2 , \all_modules1/fifo2/o_addr_2 , 
         \all_modules1/fifo2/o_addr_3 , \all_modules1/fifo2/o_addr_4 , 
         \all_modules1/fifo2/o_addr_5 , \all_modules1/fifo2/n4599 , 
         \all_modules1/fifo2/n4600 , \all_modules1/fifo2/i_addr_1_0 , 
         \all_modules1/fifo2/o_addr_0 , \all_modules1/fifo2/i_addr_1_1 , 
         \all_modules1/fifo2/o_addr_1 , \uart1/RXDa , 
         \all_modules1/fifo2/n4602 , \uart1/RXDb , \all_modules1/full , 
         \all_modules1/fifo2/o_addr_6 , \all_modules1/fifo2/o_addr_7 , 
         \all_modules1/fifo2/i_addr_1_2 , \uart1/FSM_7__N_51 , \uart1/SMPL , 
         \all_modules1/fifo2/n4601 , \uart1/FSM_7__N_52 , \uart1/FSM_7__N_53 , 
         \uart1/FSM_7__N_54 , \all_modules1/fifo2/n38 , 
         \all_modules1/fifo2/o_stb_N_212 , \all_modules1/fifo2/n4658 , 
         \all_modules1/fifo2/i_addr_0 , \all_modules1/fifo2/i_addr_1 , 
         \all_modules1/fifo2/empty , \all_modules1/fifo2/n39 , 
         \all_modules1/fifo2/n40 , \all_modules1/fifo2/n4657 , 
         \all_modules1/fifo2/n41 , \all_modules1/fifo2/n42 , 
         \all_modules1/fifo2/n4656 , \all_modules1/fifo2/n45 , 
         \all_modules1/fifo2/n4655 , \all_modules1/fifo2/n43 , 
         \all_modules1/fifo2/n44 , \all_modules1/fifo2/n4692 , 
         \all_modules1/fifo1/i_addr_6 , \all_modules1/fifo1/o_addr_6 , 
         \all_modules1/fifo1/i_addr_7 , \all_modules1/fifo1/o_addr_7 , 
         \uart1/FSM_7__N_58 , \uart1/FSM_7__N_50 , \uart1/FSM_7__N_59 , 
         \all_modules1/fifo1/n4595 , \all_modules1/fifo1/n38 , 
         \all_modules1/fifo1/o_stb_N_212 , \all_modules1/fifo1/n4734 , 
         \all_modules1/fifo1/o_addr_5 , \all_modules1/fifo1/n39 , 
         \all_modules1/fifo1/n40 , \all_modules1/fifo1/n4733 , 
         \all_modules1/fifo1/o_addr_4 , \all_modules1/fifo1/o_addr_3 , 
         \all_modules1/fifo1/n41 , \all_modules1/fifo1/n42 , 
         \all_modules1/fifo1/n4732 , \all_modules1/fifo1/o_addr_2 , 
         \all_modules1/fifo1/o_addr_1 , \all_modules1/fifo1/n43 , 
         \all_modules1/fifo1/n44 , \all_modules1/fifo1/n4731 , 
         \all_modules1/fifo1/o_addr_0 , \all_modules1/fifo1/n45 , 
         \all_modules1/fifo1/i_addr_2 , \all_modules1/fifo1/i_addr_3 , 
         \all_modules1/fifo1/i_addr_4 , \all_modules1/fifo1/i_addr_5 , 
         \uart1/FSM_7__N_56 , \uart1/FSM_7__N_57 , \all_modules1/fifo1/n4596 , 
         \all_modules1/fifo1/i_addr_1_7 , SD_CLK_c_enable_109, 
         \all_modules1/fifo1/n4670 , \all_modules1/fifo1/i_addr_1_6 , 
         \all_modules1/fifo1/i_addr_1_5 , \all_modules1/fifo1/n4669 , 
         \all_modules1/fifo1/i_addr_1_4 , \all_modules1/fifo1/i_addr_1_3 , 
         \all_modules1/fifo1/n4668 , \all_modules1/fifo1/i_addr_1 , 
         \all_modules1/fifo1/i_addr_1_2 , \all_modules1/fifo1/i_addr_1_1 , 
         \all_modules1/fifo1/n4667 , \all_modules1/fifo1/i_addr_0 , 
         \all_modules1/fifo1/i_addr_1_0 , \uart1/DAT_3 , \uart1/DAT_2 , 
         rx_dat_2, rx_dat_3, \all_modules1/fifo1/n4597 , \uart1/DAT_7 , 
         \uart1/DAT_6 , \all_modules1/fifo1/n4598 , rx_dat_6, full, rx_dat_7, 
         \uart1/DAT_5 , \uart1/DAT_4 , rx_dat_4, rx_dat_5, \uart1/FSM_7__N_55 , 
         \all_modules1/fifo1/empty , \uart1/PS_10 , \uart1/PS_9 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 , \uart1/n4739 , 
         \uart1/n54 , \all_modules1/rx_sd_data_8 , \uart1/n53 , 
         \all_modules1/rx_sd_data_9 , \uart1/PS_8 , \uart1/PS_7 , \uart1/n55 , 
         \uart1/n2114 , \uart1/n4738 , \uart1/n56 , \uart1/PS_6 , \uart1/PS_5 , 
         \uart1/n58 , \uart1/n4737 , \uart1/n57 , \uart1/PS_4 , \uart1/PS_3 , 
         \uart1/n59 , \uart1/n60 , \uart1/n4736 , \uart1/PS_2 , \uart1/PS_1 , 
         \uart1/n61 , \uart1/n4735 , \uart1/n62 , \uart1/PS_0 , \uart1/n63 , 
         \uart_tx1/PS_10 , \uart_tx1/PS_9 , \uart_tx1/PS_10_N_870_10 , 
         \uart_tx1/PS_10_N_870_9 , \uart_tx1/PS_10__N_882 , \uart_tx1/n4753 , 
         \uart_tx1/PS_8 , \uart_tx1/PS_7 , \uart_tx1/PS_10_N_870_8 , 
         \uart_tx1/PS_10_N_870_7 , \uart_tx1/n4752 , \uart_tx1/PS_6 , 
         \uart_tx1/PS_5 , \uart_tx1/PS_10_N_870_6 , \uart_tx1/PS_10_N_870_5 , 
         \uart_tx1/n4751 , \uart_tx1/PS_4 , \uart_tx1/PS_3 , 
         \uart_tx1/PS_10_N_870_4 , \uart_tx1/PS_10_N_870_3 , \uart_tx1/n4750 , 
         \uart_tx1/PS_2 , \uart_tx1/PS_1 , \uart_tx1/PS_10_N_870_2 , 
         \uart_tx1/PS_10_N_870_1 , \uart_tx1/n4749 , \uart_tx1/PS_0 , 
         \uart_tx1/PS_10_N_870_0 , \all_modules1/sdram_to_uart1/state_1 , 
         \all_modules1/sdram_to_uart1/n5094 , \all_modules1/tx_dat1_1 , 
         \all_modules1/tx_dat1_0 , \all_modules1/tx_stb1 , LED_c_0, LED_c_1, 
         \all_modules1/sdram_to_uart1/n13 , 
         \all_modules1/sdram_to_uart1/state_0 , 
         \all_modules1/sdram_to_uart1/rd_wt_operation_1 , 
         \all_modules1/sdram_to_uart1/n8 , \all_modules1/tx_dat1_3 , 
         \all_modules1/tx_dat1_2 , LED_c_2, LED_c_3, 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 , 
         \all_modules1/rx_stb1 , \all_modules1/rd_wt_operation_1 , 
         \all_modules1/uart_to_sdram1/n5154 , \all_modules1/uart_to_sdram1/n8 , 
         \all_modules1/sdram_controller1/arb_delay_2 , 
         \all_modules1/sdram_controller1/arb_delay_2_N_465_1 , 
         \all_modules1/sdram_controller1/n10 , 
         \all_modules1/sdram_controller1/n14 , 
         \all_modules1/sdram_controller1/n5391 , 
         \all_modules1/sdram_controller1/n5076 , \all_modules1/rd_i_ack_N_577 , 
         \all_modules1/fifo1/n8 , \all_modules1/next_state_3__N_347 , 
         \all_modules1/rd_wt_operation_1_N_343_0 , 
         \all_modules1/uart_to_sdram1/data_tim_reset , 
         \all_modules1/rd_wt_operation_0 , n5560, 
         \all_modules1/sdram_controller1/init_done_N_558 , 
         \all_modules1/fifo1/n5398 , \all_modules1/fifo1/n7 , 
         \all_modules1/sdram_controller1/arbBank/n5402 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_750 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_2 , 
         \all_modules1/sdram_controller1/arbBank/n4851 , 
         \all_modules1/sdram_controller1/arb_delay_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_746 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_756 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_1 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_753 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_737 , 
         \all_modules1/sdram_controller1/arbBank/n5286 , 
         \all_modules1/sdram_controller1/arbBank/n5405 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_740 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_743 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_1 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_23 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_22 , 
         \all_modules1/sdram_controller1/arbBank/n4 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_733 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_724 , 
         \all_modules1/sdram_controller1/arbBank/n5284 , 
         \all_modules1/sdram_controller1/arbBank/n5401 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_727 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_730 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_1 , 
         \all_modules1/sdram_controller1/arbBank/n4_adj_998 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_720 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_710 , 
         \all_modules1/sdram_controller1/arbBank/n5282 , 
         \all_modules1/sdram_controller1/arbBank/n5399 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_714 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_717 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_1 , 
         \all_modules1/sdram_controller1/arbBank/n4_adj_999 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_706 , 
         \all_modules1/sdram_controller1/rd_busy_flag , 
         \all_modules1/sdram_controller1/wt_busy_flag , 
         \all_modules1/sdram_controller1/next_state_3__N_570 , 
         \all_modules1/sdram_controller1/n393 , DQM_c, delay_tim_reset, 
         \all_modules1/sdram_controller1/count_0 , 
         \all_modules1/sdram_controller1/delayTimer/n11 , SD_CLK_c_enable_131, 
         \all_modules1/sdram_controller1/n390 , 
         \all_modules1/sdram_controller1/n391 , 
         \all_modules1/sdram_controller1/count_1 , 
         \all_modules1/sdram_controller1/delayTimer/n9_adj_1000 , 
         \all_modules1/sdram_controller1/n5397 , 
         \all_modules1/sdram_controller1/delayTimer/count_3 , 
         \all_modules1/sdram_controller1/delayTimer/count_2 , 
         \all_modules1/sdram_controller1/delayTimer/n7 , 
         \all_modules1/sdram_controller1/delayTimer/n8 , \n5560\001/BUF1 , 
         \all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_110 , 
         \all_modules1/sdram_controller1/n397 , 
         \all_modules1/sdram_controller1/n395 , 
         \all_modules1/sdram_controller1/n5099 , 
         \all_modules1/sdram_controller1/n5084 , 
         \all_modules1/sdram_controller1/n2208 , refresh_tim_flag, 
         \all_modules1/sdram_controller1/n12_adj_1007 , 
         \all_modules1/sdram_controller1/n394 , 
         \all_modules1/sdram_controller1/n5092 , 
         \all_modules1/sdram_controller1/n2206 , 
         \all_modules1/sdram_controller1/n2202 , 
         \all_modules1/sdram_controller1/n2204 , 
         \all_modules1/sdram_controller1/n399 , 
         \all_modules1/sdram_controller1/n400 , 
         \all_modules1/sdram_controller1/n2200 , 
         \all_modules1/sdram_controller1/n12 , 
         \all_modules1/uart_to_sdram1/n146 , \all_modules1/n4060 , 
         \all_modules1/n5407 , \all_modules1/sdram_controller1/n5060 , 
         \all_modules1/sdram_controller1/n53 , 
         \all_modules1/sdram_controller1/n4 , nreset_c, 
         \all_modules1/sdram_to_uart1/n5395 , 
         \all_modules1/sdram_to_uart1/next_state_0 , 
         \all_modules1/sdram_to_uart1/n5292 , 
         \all_modules1/uart_to_sdram1/n141 , 
         \all_modules1/uart_to_sdram1/n4913 , 
         \all_modules1/uart_to_sdram1/n2899 , \all_modules1/n5390 , 
         \all_modules1/uart_to_sdram1/n4 , \all_modules1/uart_to_sdram1/n4799 , 
         \all_modules1/next_state_3__N_345 , 
         \all_modules1/uart_to_sdram1/n155 , \all_modules1/uart_to_sdram1/n5 , 
         \all_modules1/uart_to_sdram1/n4881 , 
         \all_modules1/uart_to_sdram1/n2825 , 
         \all_modules1/uart_to_sdram1/n2163 , 
         \all_modules1/uart_to_sdram1/n148 , 
         \all_modules1/uart_to_sdram1/n2161 , 
         \all_modules1/uart_to_sdram1/n144 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n2432 , 
         \all_modules1/sdram_controller1/n419 , tx_stb, 
         \uart_tx1/FSM_7__N_883 , DAT_7__N_993, tx_ack, 
         \all_modules1/fifo2/SD_CLK_c_enable_23 , \uart1/n5127 , \uart1/DAT_1 , 
         \uart1/RXDc , \uart1/n5102 , \uart1/DAT_0 , \uart1/n2882 , 
         \uart1/n2888 , \uart1/SD_CLK_c_enable_154 , \uart1/n5109 , 
         \uart1/n5101 , \uart1/n2870 , \uart1/n2876 , \uart1/n5112 , 
         \uart1/n5110 , \uart1/n2885 , \uart1/n2891 , \uart1/n5116 , 
         \uart1/n5115 , \uart1/n2873 , \uart1/n2879 , \uart1/FSM_7__N_49 , 
         \uart1/FSM_7__N_60 , \uart1/n2192 , \uart1/n2210 , \uart1/rx_stb , 
         \uart1/n3367 , \uart1/PS_10_N_37_6 , \uart1/PS_10_N_37_1 , 
         \uart1/PS_10__N_48 , \uart1/PS_10_N_37_9 , \uart1/PS_10_N_37_7 , 
         \uart1/PS_10_N_37_10 , uart_rx_c, VCC_net, GND_net, \uart1/n18 , 
         \uart1/n16 , \uart1/n20 , \uart1/n5380 , \uart1/STBo_N_161 , 
         \uart_tx1/FSM_7__N_887 , \uart_tx1/FSM_7__N_888 , 
         \uart_tx1/FSM_7__N_895 , \uart_tx1/SMPL , \uart_tx1/n2225 , 
         \uart_tx1/n1587 , \uart_tx1/FSM_7__N_884 , \uart_tx1/FSM_7__N_885 , 
         \uart_tx1/n2229 , \uart_tx1/n4789 , \uart_tx1/FSM_7__N_886 , 
         \uart_tx1/n16 , \uart_tx1/n18 , \uart_tx1/FSM_7__N_893 , n1842, n1840, 
         \uart_tx1/n2211 , \uart_tx1/FSM_7__N_889 , \uart_tx1/FSM_7__N_890 , 
         \uart_tx1/FSM_7__N_891 , \uart1/n5393 , \uart1/n5392 , \uart1/n5396 , 
         \uart_tx1/FSM_7__N_892 , \uart_tx1/FSM_7__N_894 , 
         \all_modules1/sdram_controller1/refreshTimer/n11_adj_1004 , 
         \uart_tx1/n20 , \all_modules1/rd_wt_operation_1_N_835_1 , 
         \all_modules1/wt_o_stb1 , \n5560\000/BUF1 , \uart_tx1/n1839 , n1854, 
         n1852, \uart_tx1/n2129 , \uart_tx1/n1598 , \uart_tx1/n2167 , 
         uart_tx_c, \all_modules1/sdram_controller1/n2188 , 
         \all_modules1/sdram_controller1/n5160 , 
         \all_modules1/sdram_controller1/arbBank/n5527 , 
         \all_modules1/sdram_controller1/arbBank/n5524 , \uart_tx1/n2644 , 
         \uart_tx1/n4812 , \all_modules1/uart_to_sdram1/n5088 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_13 , 
         \all_modules1/sdram_controller1/n5078 , 
         \all_modules1/sdram_controller1/n5055 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_3 , \all_modules1/n1734 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_18 , ADR_c_3, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_19 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_15 , 
         \all_modules1/sdram_controller1/n2417 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_5 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_2 , ADR_c_5, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_20 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_11 , 
         \all_modules1/sdram_controller1/n2409 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_1 , DB_out_9, DB_out_8, 
         \all_modules1/sdram_controller1/SD_CLK_c_enable_46 , ADR_c_1, 
         \all_modules1/sdram_controller1/n2423 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_8 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_0 , ADR_c_8, 
         \all_modules1/sdram_controller1/n5387 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_16 , ADR_c_10, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_17 , 
         \all_modules1/sdram_controller1/n2421 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_7 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_10 , ADR_c_7, 
         \all_modules1/sdram_controller1/n2419 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_6 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_12 , ADR_c_6, 
         \all_modules1/sdram_controller1/n2411 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_14 , ADR_c_2, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_4 , 
         \all_modules1/sdram_controller1/n21 , ADR_c_4, 
         \all_modules1/sdram_controller1/n2216 , \all_modules1/rx_sd_data_1 , 
         \all_modules1/rx_sd_data_0 , ADR_c_0, SD_DATA_TEMP_0, SD_DATA_TEMP_1, 
         n1850, n1848, \uart_tx1/n2544 , \uart_tx1/n2184 , 
         \all_modules1/uart_to_sdram1/n145 , 
         \all_modules1/sdram_controller1/n5383 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n26 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4775 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n5 , 
         \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n10 , 
         \all_modules1/sdram_controller1/delay_tim_flag_N_589 , 
         \all_modules1/tx_dat1_7 , \all_modules1/sdram_to_uart1/n6 , 
         \all_modules1/tx_dat1_4 , \all_modules1/sdram_to_uart1/n6_adj_1008 , 
         \all_modules1/tx_dat1_5 , \all_modules1/sdram_to_uart1/n10 , 
         \all_modules1/tx_dat1_6 , \all_modules1/sdram_controller1/n5408 , 
         \all_modules1/rx_sd_data_3 , \all_modules1/rx_sd_data_2 , 
         SD_DATA_TEMP_2, SD_DATA_TEMP_3, 
         \all_modules1/sdram_controller1/delay_tim_period_3 , 
         \all_modules1/sdram_controller1/n9 , 
         \all_modules1/sdram_controller1/state_0 , 
         \all_modules1/rx_sd_data_11 , \all_modules1/rx_sd_data_10 , nRAS_c, 
         SD_DATA_TEMP_10, SD_DATA_TEMP_11, nWE_c, \all_modules1/rx_sd_data_13 , 
         \all_modules1/rx_sd_data_12 , SD_DATA_TEMP_12, SD_DATA_TEMP_13, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_21 , 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_1002 , 
         \all_modules1/sdram_controller1/refreshTimer/n14_adj_1001 , 
         \all_modules1/sdram_controller1/refreshTimer/n9 , 
         \all_modules1/sdram_controller1/refreshTimer/n12_adj_1005 , 
         \all_modules1/sdram_controller1/refreshTimer/n5 , 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_1006 , 
         \all_modules1/sdram_controller1/initTimer/n10 , 
         \all_modules1/sdram_controller1/initTimer/n12 , 
         \all_modules1/sdram_controller1/initTimer/n24 , 
         \all_modules1/sdram_controller1/initTimer/n6 , 
         \all_modules1/sdram_controller1/initTimer/n30 , SD_DATA_TEMP_8, 
         SD_DATA_TEMP_9, \all_modules1/fifo1/n5145 , rx_dat_0, rx_dat_1, 
         \uart1/n5388 , \all_modules1/rx_sd_data_6 , 
         \all_modules1/rx_sd_data_7 , \uart1/n5389 , 
         \all_modules1/uart_to_sdram1/n147 , BA_c_0, BA_c_1, 
         \all_modules1/sdram_to_uart1/SD_CLK_c_enable_147 , DB_out_7, DB_out_6, 
         ADR_c_11, ADR_c_9, SD_P_DATA_15__N_423, \all_modules1/rx_sd_data_15 , 
         \all_modules1/rx_sd_data_14 , nCAS_c, SD_DATA_TEMP_14, 
         SD_DATA_TEMP_15, DB_out_11, DB_out_10, DB_out_13, DB_out_12, DB_out_1, 
         DB_out_0, DB_out_5, DB_out_4, SD_DATA_TEMP_6, SD_DATA_TEMP_7, 
         DB_out_3, DB_out_2, n1846, n1844, DB_out_15, DB_out_14, clk_c;

  all_modules1_uart_to_sdram1_SLICE_0 \all_modules1/uart_to_sdram1/SLICE_0 ( 
    .D1(\all_modules1/rx_sd_adr_13 ), .C1(\all_modules1/rx_dat1_5 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_12 ), 
    .C0(\all_modules1/rx_dat1_4 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_13 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_12 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4680 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_12 ), 
    .Q0(\all_modules1/rx_sd_adr_12 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_13 ), 
    .Q1(\all_modules1/rx_sd_adr_13 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4681 ));
  all_modules1_uart_to_sdram1_SLICE_1 \all_modules1/uart_to_sdram1/SLICE_1 ( 
    .D1(\all_modules1/rx_sd_adr_11 ), .C1(\all_modules1/rx_dat1_3 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_10 ), 
    .C0(\all_modules1/rx_dat1_2 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_11 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_10 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4679 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_10 ), 
    .Q0(\all_modules1/rx_sd_adr_10 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_11 ), 
    .Q1(\all_modules1/rx_sd_adr_11 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4680 ));
  all_modules1_uart_to_sdram1_SLICE_2 \all_modules1/uart_to_sdram1/SLICE_2 ( 
    .D1(\all_modules1/uart_to_sdram1/rx_sd_adr_9 ), 
    .C1(\all_modules1/rx_dat1_1 ), .B1(\all_modules1/o_stb_rd_N_367 ), 
    .D0(\all_modules1/rx_sd_adr_8 ), .C0(\all_modules1/rx_dat1_0 ), 
    .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_9 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_8 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4678 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_8 ), 
    .Q0(\all_modules1/rx_sd_adr_8 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_9 ), 
    .Q1(\all_modules1/uart_to_sdram1/rx_sd_adr_9 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4679 ));
  all_modules1_uart_to_sdram1_SLICE_3 \all_modules1/uart_to_sdram1/SLICE_3 ( 
    .D1(\all_modules1/rx_sd_adr_7 ), .C1(\all_modules1/rx_dat1_7 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_6 ), 
    .C0(\all_modules1/rx_dat1_6 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_7 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4677 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_6 ), 
    .Q0(\all_modules1/rx_sd_adr_6 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_7 ), 
    .Q1(\all_modules1/rx_sd_adr_7 ), .FCO(\all_modules1/uart_to_sdram1/n4678 ));
  all_modules1_uart_to_sdram1_SLICE_4 \all_modules1/uart_to_sdram1/SLICE_4 ( 
    .D1(\all_modules1/rx_sd_adr_23 ), .C1(\all_modules1/rx_dat1_7 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_22 ), 
    .C0(\all_modules1/rx_dat1_6 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_23 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_22 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4685 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_22 ), 
    .Q0(\all_modules1/rx_sd_adr_22 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_23 ), 
    .Q1(\all_modules1/rx_sd_adr_23 ));
  all_modules1_uart_to_sdram1_SLICE_5 \all_modules1/uart_to_sdram1/SLICE_5 ( 
    .D1(\all_modules1/rx_sd_adr_21 ), .C1(\all_modules1/rx_dat1_5 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_20 ), 
    .C0(\all_modules1/rx_dat1_4 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_21 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_20 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4684 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_20 ), 
    .Q0(\all_modules1/rx_sd_adr_20 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_21 ), 
    .Q1(\all_modules1/rx_sd_adr_21 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4685 ));
  all_modules1_uart_to_sdram1_SLICE_6 \all_modules1/uart_to_sdram1/SLICE_6 ( 
    .D1(\all_modules1/rx_sd_adr_19 ), .C1(\all_modules1/rx_dat1_3 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_18 ), 
    .C0(\all_modules1/rx_dat1_2 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_19 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_18 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4683 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_18 ), 
    .Q0(\all_modules1/rx_sd_adr_18 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_19 ), 
    .Q1(\all_modules1/rx_sd_adr_19 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4684 ));
  all_modules1_uart_to_sdram1_SLICE_7 \all_modules1/uart_to_sdram1/SLICE_7 ( 
    .D1(\all_modules1/rx_sd_adr_17 ), .C1(\all_modules1/rx_dat1_1 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_16 ), 
    .C0(\all_modules1/rx_dat1_0 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_17 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_16 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4682 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_16 ), 
    .Q0(\all_modules1/rx_sd_adr_16 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_17 ), 
    .Q1(\all_modules1/rx_sd_adr_17 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4683 ));
  all_modules1_uart_to_sdram1_SLICE_8 \all_modules1/uart_to_sdram1/SLICE_8 ( 
    .D1(\all_modules1/rx_sd_adr_15 ), .C1(\all_modules1/rx_dat1_7 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_14 ), 
    .C0(\all_modules1/rx_dat1_6 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_15 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_14 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4681 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_14 ), 
    .Q0(\all_modules1/rx_sd_adr_14 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_15 ), 
    .Q1(\all_modules1/rx_sd_adr_15 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4682 ));
  all_modules1_uart_to_sdram1_SLICE_9 \all_modules1/uart_to_sdram1/SLICE_9 ( 
    .D1(\all_modules1/rx_sd_adr_5 ), .C1(\all_modules1/rx_dat1_5 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_4 ), 
    .C0(\all_modules1/rx_dat1_4 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_5 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4676 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_4 ), 
    .Q0(\all_modules1/rx_sd_adr_4 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_5 ), 
    .Q1(\all_modules1/rx_sd_adr_5 ), .FCO(\all_modules1/uart_to_sdram1/n4677 ));
  all_modules1_uart_to_sdram1_SLICE_10 \all_modules1/uart_to_sdram1/SLICE_10 
    ( .D1(\all_modules1/rx_sd_adr_3 ), .C1(\all_modules1/rx_dat1_3 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_2 ), 
    .C0(\all_modules1/rx_dat1_2 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_3 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4675 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_2 ), 
    .Q0(\all_modules1/rx_sd_adr_2 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_3 ), 
    .Q1(\all_modules1/rx_sd_adr_3 ), .FCO(\all_modules1/uart_to_sdram1/n4676 ));
  all_modules1_uart_to_sdram1_SLICE_11 \all_modules1/uart_to_sdram1/SLICE_11 
    ( .D1(\all_modules1/rx_sd_adr_1 ), .C1(\all_modules1/rx_dat1_1 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), .D0(\all_modules1/rx_sd_adr_0 ), 
    .C0(\all_modules1/rx_dat1_0 ), .B0(\all_modules1/o_stb_rd_N_367 ), 
    .A0(\all_modules1/uts_ack1 ), 
    .DI1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_1 ), 
    .DI0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/n4674 ), 
    .F0(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_0 ), 
    .Q0(\all_modules1/rx_sd_adr_0 ), 
    .F1(\all_modules1/uart_to_sdram1/sd_adr_23_N_319_1 ), 
    .Q1(\all_modules1/rx_sd_adr_1 ), .FCO(\all_modules1/uart_to_sdram1/n4675 ));
  all_modules1_SLICE_12 \all_modules1/SLICE_12 ( 
    .A1(\all_modules1/o_stb_rd_N_367 ), .M1(\all_modules1/tx_sd_data_1 ), 
    .M0(\all_modules1/tx_sd_data_0 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ), 
    .FCO(\all_modules1/uart_to_sdram1/n4674 ));
  all_modules1_uart_to_sdram1_SLICE_13 \all_modules1/uart_to_sdram1/SLICE_13 
    ( .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_15 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4748 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n70 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_6 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_7 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_14 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_14 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_14 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_13 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n71 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n72 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4747 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n72 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_13 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n71 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_14 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4748 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_15 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_15 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_12 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_11 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n73 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n74 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4746 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n74 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_11 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n73 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_12 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4747 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_16 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_16 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_10 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_9 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n75 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n76 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4745 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n76 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_9 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n75 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_10 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4746 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_17 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_17 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_8 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_7 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n77 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n78 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4744 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n78 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_7 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n77 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_8 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4745 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_18 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_18 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_6 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_5 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n79 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n80 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4743 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n80 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_5 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n79 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_6 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4744 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_19 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_19 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_4 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_3 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n81 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n82 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4742 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n82 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_3 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n81 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_4 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4743 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_20 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_20 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_2 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_1 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n83 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n84 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4741 ), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n84 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_1 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n83 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_2 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4742 ));
  all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_21 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/SLICE_21 ( 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n16 ), 
    .DI1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n85 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n85 ), 
    .Q1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n16 ), 
    .FCO(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4741 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_22 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_22 ( 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_15 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n70 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4730 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n70 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_15 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_23 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_23 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_14 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_13 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n71 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n72 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4729 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n72 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_13 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n71 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_14 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4730 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_24 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_24 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_12 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_11 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n73 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n74 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4728 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n74 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_11 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n73 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_12 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4729 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_25 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_25 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_10 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_9 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n75 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n76 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4727 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n76 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_9 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n75 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_10 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4728 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_26 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_26 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_8 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_7 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n77 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n78 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4726 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n78 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_7 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n77 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_8 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4727 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_27 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_27 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_6 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_5 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n79 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n80 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4725 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n80 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_5 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n79 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_6 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4726 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_28 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_28 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_4 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_3 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n81 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n82 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4724 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n82 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_3 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n81 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_4 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4725 ));
  all_modules1_SLICE_29 \all_modules1/SLICE_29 ( 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_15 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_15 ), 
    .M1(\all_modules1/tx_sd_data_5 ), .M0(\all_modules1/tx_sd_data_4 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4666 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ));
  all_modules1_SLICE_30 \all_modules1/SLICE_30 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_14 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_14 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_13 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_13 ), 
    .M1(\all_modules1/tx_sd_data_3 ), .M0(\all_modules1/tx_sd_data_2 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4665 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4666 ));
  all_modules1_SLICE_31 \all_modules1/SLICE_31 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_12 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_12 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_11 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_11 ), 
    .M1(\all_modules1/tx_sd_data_15 ), .M0(\all_modules1/tx_sd_data_14 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4664 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_15 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4665 ));
  all_modules1_SLICE_32 \all_modules1/SLICE_32 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_10 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_10 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_9 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_9 ), 
    .M1(\all_modules1/tx_sd_data_13 ), .M0(\all_modules1/tx_sd_data_12 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4663 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4664 ));
  all_modules1_uart_to_sdram1_SLICE_33 \all_modules1/uart_to_sdram1/SLICE_33 
    ( .B1(\all_modules1/uart_to_sdram1/data_array_len_8 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_8 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_7 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_7 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4662 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_10 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_11 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4663 ));
  all_modules1_uart_to_sdram1_SLICE_34 \all_modules1/uart_to_sdram1/SLICE_34 
    ( .B1(\all_modules1/uart_to_sdram1/data_array_len_6 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_6 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_5 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_5 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4661 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_0 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_1 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4662 ));
  all_modules1_SLICE_35 \all_modules1/SLICE_35 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_4 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_4 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_3 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_3 ), 
    .M1(\all_modules1/tx_sd_data_9 ), .M0(\all_modules1/tx_sd_data_8 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4660 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4661 ));
  all_modules1_SLICE_36 \all_modules1/SLICE_36 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_2 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_2 ), 
    .B0(\all_modules1/uart_to_sdram1/data_array_len_1 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_1 ), 
    .M1(\all_modules1/tx_sd_data_7 ), .M0(\all_modules1/tx_sd_data_6 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4659 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_7 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4660 ));
  all_modules1_SLICE_37 \all_modules1/SLICE_37 ( 
    .B1(\all_modules1/uart_to_sdram1/data_array_len_0 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_0 ), 
    .M1(\all_modules1/tx_sd_data_11 ), .M0(\all_modules1/tx_sd_data_10 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ), .CLK(SD_CLK_c), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4659 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_38 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_38 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_2 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_1 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n83 ), 
    .DI0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n84 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .FCI(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4723 ), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n84 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_1 ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n83 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_2 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4724 ));
  all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_39 
    \all_modules1/uart_to_sdram1/data_tim_flag_I_0/SLICE_39 ( 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_0 ), 
    .DI1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n85 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .LSR(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .CLK(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .F1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n85 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_0 ), 
    .FCO(\all_modules1/uart_to_sdram1/data_tim_flag_I_0/n4723 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_40 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_40 ( 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_13 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4722 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_13 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_41 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_41 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4721 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4722 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_42 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_42 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4720 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4721 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_43 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_43 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4690 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4691 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_44 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_44 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4719 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4720 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_45 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_45 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4689 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4690 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_46 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_46 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4688 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4689 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_47 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_47 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4718 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4719 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_48 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_48 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4687 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4688 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_49 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_49 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .B0(\all_modules1/repeat_tim_period_13 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4687 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_50 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_50 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4717 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4718 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_51 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_51 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4716 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4717 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_52 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_52 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n5382 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4716 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_53 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_53 ( 
    .B0(\all_modules1/repeat_tim_period_13 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_13 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4691 ), 
    .F1(\all_modules1/sdram_controller1/repeat_tim_flag ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_54 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_54 ( 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4715 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_23 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_55 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_55 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_1003 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4714 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_1003 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4715 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_56 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_56 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4713 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4714 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_57 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_57 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4712 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4713 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_58 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_58 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4711 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4712 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_59 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_59 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4710 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4711 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_60 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_60 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4709 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4710 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_61 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_61 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4708 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4709 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_62 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_62 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4707 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4708 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_63 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_63 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4706 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4707 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_64 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_64 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4705 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4706 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_65 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_65 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4704 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4705 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_66 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_66 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .CE(SD_CLK_c_enable_128), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4704 ));
  all_modules1_sdram_controller1_SLICE_67 
    \all_modules1/sdram_controller1/SLICE_67 ( 
    .A0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .M1(\all_modules1/rx_sd_data_5 ), .M0(\all_modules1/rx_sd_data_4 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4703 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n70 ), .Q0(SD_DATA_TEMP_4), 
    .Q1(SD_DATA_TEMP_5));
  all_modules1_sdram_controller1_initTimer_SLICE_68 
    \all_modules1/sdram_controller1/initTimer/SLICE_68 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n71 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n72 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4702 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n72 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n71 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4703 ));
  all_modules1_sdram_controller1_initTimer_SLICE_69 
    \all_modules1/sdram_controller1/initTimer/SLICE_69 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n73 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n74 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4701 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n74 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n73 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4702 ));
  all_modules1_sdram_controller1_initTimer_SLICE_70 
    \all_modules1/sdram_controller1/initTimer/SLICE_70 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n75 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n76 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4700 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n76 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n75 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4701 ));
  all_modules1_sdram_controller1_initTimer_SLICE_71 
    \all_modules1/sdram_controller1/initTimer/SLICE_71 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n77 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n78 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4699 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n78 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n77 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4700 ));
  all_modules1_sdram_controller1_initTimer_SLICE_72 
    \all_modules1/sdram_controller1/initTimer/SLICE_72 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n79 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n80 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4698 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n80 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n79 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4699 ));
  all_modules1_sdram_controller1_initTimer_SLICE_73 
    \all_modules1/sdram_controller1/initTimer/SLICE_73 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n81 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n82 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4697 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n82 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n81 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4698 ));
  all_modules1_sdram_controller1_initTimer_SLICE_74 
    \all_modules1/sdram_controller1/initTimer/SLICE_74 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n83 ), 
    .DI0(\all_modules1/sdram_controller1/initTimer/n84 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/initTimer/n4696 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n84 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n83 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4697 ));
  all_modules1_sdram_controller1_initTimer_SLICE_75 
    \all_modules1/sdram_controller1/initTimer/SLICE_75 ( 
    .A1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/initTimer/n85 ), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/sdram_controller1/initTimer/n85 ), 
    .Q1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/initTimer/n4696 ));
  all_modules1_fifo2_SLICE_76 \all_modules1/fifo2/SLICE_76 ( 
    .A0(\all_modules1/fifo2/i_addr_7 ), .DI0(\all_modules1/fifo2/i_addr_1_7 ), 
    .CE(\all_modules1/tx_ack1 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4695 ), .F0(\all_modules1/fifo2/i_addr_1_7 ), 
    .Q0(\all_modules1/fifo2/i_addr_7 ));
  all_modules1_fifo2_SLICE_77 \all_modules1/fifo2/SLICE_77 ( 
    .A1(\all_modules1/fifo2/i_addr_6 ), .A0(\all_modules1/fifo2/i_addr_5 ), 
    .DI1(\all_modules1/fifo2/i_addr_1_6 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_5 ), .CE(\all_modules1/tx_ack1 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo2/n4694 ), 
    .F0(\all_modules1/fifo2/i_addr_1_5 ), .Q0(\all_modules1/fifo2/i_addr_5 ), 
    .F1(\all_modules1/fifo2/i_addr_1_6 ), .Q1(\all_modules1/fifo2/i_addr_6 ), 
    .FCO(\all_modules1/fifo2/n4695 ));
  all_modules1_fifo2_SLICE_78 \all_modules1/fifo2/SLICE_78 ( 
    .A1(\all_modules1/fifo2/i_addr_4 ), .A0(\all_modules1/fifo2/i_addr_3 ), 
    .DI1(\all_modules1/fifo2/i_addr_1_4 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_3 ), .CE(\all_modules1/tx_ack1 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo2/n4693 ), 
    .F0(\all_modules1/fifo2/i_addr_1_3 ), .Q0(\all_modules1/fifo2/i_addr_3 ), 
    .F1(\all_modules1/fifo2/i_addr_1_4 ), .Q1(\all_modules1/fifo2/i_addr_4 ), 
    .FCO(\all_modules1/fifo2/n4694 ));
  all_modules1_fifo2_SLICE_79 \all_modules1/fifo2/SLICE_79 ( 
    .D1(\all_modules1/fifo2/i_addr_2 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/i_addr_3 ), .A1(\all_modules1/fifo2/o_addr_3 ), 
    .D0(\all_modules1/fifo2/i_addr_4 ), .C0(\all_modules1/fifo2/o_addr_4 ), 
    .B0(\all_modules1/fifo2/i_addr_5 ), .A0(\all_modules1/fifo2/o_addr_5 ), 
    .FCI(\all_modules1/fifo2/n4599 ), .FCO(\all_modules1/fifo2/n4600 ));
  SLICE_80 SLICE_80( .D0(\all_modules1/fifo2/i_addr_1_0 ), 
    .C0(\all_modules1/fifo2/o_addr_0 ), .B0(\all_modules1/fifo2/i_addr_1_1 ), 
    .A0(\all_modules1/fifo2/o_addr_1 ), .M0(\uart1/RXDa ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4602 ), .Q0(\uart1/RXDb ), 
    .F1(\all_modules1/full ));
  all_modules1_fifo2_SLICE_81 \all_modules1/fifo2/SLICE_81 ( 
    .D1(\all_modules1/fifo2/i_addr_6 ), .C1(\all_modules1/fifo2/o_addr_6 ), 
    .B1(\all_modules1/fifo2/i_addr_7 ), .A1(\all_modules1/fifo2/o_addr_7 ), 
    .FCO(\all_modules1/fifo2/n4599 ));
  SLICE_82 SLICE_82( .D1(\all_modules1/fifo2/i_addr_1_2 ), 
    .C1(\all_modules1/fifo2/o_addr_2 ), .B1(\all_modules1/fifo2/i_addr_1_3 ), 
    .A1(\all_modules1/fifo2/o_addr_3 ), .D0(\all_modules1/fifo2/i_addr_1_4 ), 
    .C0(\all_modules1/fifo2/o_addr_4 ), .B0(\all_modules1/fifo2/i_addr_1_5 ), 
    .A0(\all_modules1/fifo2/o_addr_5 ), .M0(\uart1/FSM_7__N_51 ), 
    .CE(\uart1/SMPL ), .CLK(SD_CLK_c), .FCI(\all_modules1/fifo2/n4601 ), 
    .Q0(\uart1/FSM_7__N_52 ), .FCO(\all_modules1/fifo2/n4602 ));
  SLICE_83 SLICE_83( .D1(\all_modules1/fifo2/i_addr_1_6 ), 
    .C1(\all_modules1/fifo2/o_addr_6 ), .B1(\all_modules1/fifo2/i_addr_1_7 ), 
    .A1(\all_modules1/fifo2/o_addr_7 ), .M1(\uart1/FSM_7__N_52 ), 
    .M0(\uart1/FSM_7__N_53 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_54 ), .Q1(\uart1/FSM_7__N_53 ), 
    .FCO(\all_modules1/fifo2/n4601 ));
  all_modules1_fifo2_SLICE_84 \all_modules1/fifo2/SLICE_84 ( 
    .A0(\all_modules1/fifo2/o_addr_7 ), .DI0(\all_modules1/fifo2/n38 ), 
    .CE(\all_modules1/fifo2/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4658 ), .F0(\all_modules1/fifo2/n38 ), 
    .Q0(\all_modules1/fifo2/o_addr_7 ));
  all_modules1_fifo2_SLICE_85 \all_modules1/fifo2/SLICE_85 ( 
    .D0(\all_modules1/fifo2/i_addr_0 ), .C0(\all_modules1/fifo2/o_addr_0 ), 
    .B0(\all_modules1/fifo2/i_addr_1 ), .A0(\all_modules1/fifo2/o_addr_1 ), 
    .FCI(\all_modules1/fifo2/n4600 ), .F1(\all_modules1/fifo2/empty ));
  all_modules1_fifo2_SLICE_86 \all_modules1/fifo2/SLICE_86 ( 
    .A1(\all_modules1/fifo2/o_addr_6 ), .A0(\all_modules1/fifo2/o_addr_5 ), 
    .DI1(\all_modules1/fifo2/n39 ), .DI0(\all_modules1/fifo2/n40 ), 
    .CE(\all_modules1/fifo2/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4657 ), .F0(\all_modules1/fifo2/n40 ), 
    .Q0(\all_modules1/fifo2/o_addr_5 ), .F1(\all_modules1/fifo2/n39 ), 
    .Q1(\all_modules1/fifo2/o_addr_6 ), .FCO(\all_modules1/fifo2/n4658 ));
  all_modules1_fifo2_SLICE_87 \all_modules1/fifo2/SLICE_87 ( 
    .A1(\all_modules1/fifo2/o_addr_4 ), .A0(\all_modules1/fifo2/o_addr_3 ), 
    .DI1(\all_modules1/fifo2/n41 ), .DI0(\all_modules1/fifo2/n42 ), 
    .CE(\all_modules1/fifo2/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4656 ), .F0(\all_modules1/fifo2/n42 ), 
    .Q0(\all_modules1/fifo2/o_addr_3 ), .F1(\all_modules1/fifo2/n41 ), 
    .Q1(\all_modules1/fifo2/o_addr_4 ), .FCO(\all_modules1/fifo2/n4657 ));
  all_modules1_fifo2_SLICE_88 \all_modules1/fifo2/SLICE_88 ( 
    .A1(\all_modules1/fifo2/o_addr_0 ), .DI1(\all_modules1/fifo2/n45 ), 
    .CE(\all_modules1/fifo2/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/fifo2/n45 ), .Q1(\all_modules1/fifo2/o_addr_0 ), 
    .FCO(\all_modules1/fifo2/n4655 ));
  all_modules1_fifo2_SLICE_89 \all_modules1/fifo2/SLICE_89 ( 
    .A1(\all_modules1/fifo2/o_addr_2 ), .A0(\all_modules1/fifo2/o_addr_1 ), 
    .DI1(\all_modules1/fifo2/n43 ), .DI0(\all_modules1/fifo2/n44 ), 
    .CE(\all_modules1/fifo2/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo2/n4655 ), .F0(\all_modules1/fifo2/n44 ), 
    .Q0(\all_modules1/fifo2/o_addr_1 ), .F1(\all_modules1/fifo2/n43 ), 
    .Q1(\all_modules1/fifo2/o_addr_2 ), .FCO(\all_modules1/fifo2/n4656 ));
  all_modules1_fifo2_SLICE_90 \all_modules1/fifo2/SLICE_90 ( 
    .A1(\all_modules1/fifo2/i_addr_2 ), .A0(\all_modules1/fifo2/i_addr_1 ), 
    .DI1(\all_modules1/fifo2/i_addr_1_2 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_1 ), .CE(\all_modules1/tx_ack1 ), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo2/n4692 ), 
    .F0(\all_modules1/fifo2/i_addr_1_1 ), .Q0(\all_modules1/fifo2/i_addr_1 ), 
    .F1(\all_modules1/fifo2/i_addr_1_2 ), .Q1(\all_modules1/fifo2/i_addr_2 ), 
    .FCO(\all_modules1/fifo2/n4693 ));
  all_modules1_fifo2_SLICE_91 \all_modules1/fifo2/SLICE_91 ( 
    .A1(\all_modules1/fifo2/i_addr_0 ), .DI1(\all_modules1/fifo2/i_addr_1_0 ), 
    .CE(\all_modules1/tx_ack1 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/fifo2/i_addr_1_0 ), .Q1(\all_modules1/fifo2/i_addr_0 ), 
    .FCO(\all_modules1/fifo2/n4692 ));
  SLICE_92 SLICE_92( .D1(\all_modules1/fifo1/i_addr_6 ), 
    .C1(\all_modules1/fifo1/o_addr_6 ), .B1(\all_modules1/fifo1/i_addr_7 ), 
    .A1(\all_modules1/fifo1/o_addr_7 ), .M1(\uart1/FSM_7__N_58 ), 
    .M0(\uart1/FSM_7__N_50 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_51 ), .Q1(\uart1/FSM_7__N_59 ), 
    .FCO(\all_modules1/fifo1/n4595 ));
  all_modules1_fifo1_SLICE_93 \all_modules1/fifo1/SLICE_93 ( 
    .A0(\all_modules1/fifo1/o_addr_7 ), .DI0(\all_modules1/fifo1/n38 ), 
    .CE(\all_modules1/fifo1/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4734 ), .F0(\all_modules1/fifo1/n38 ), 
    .Q0(\all_modules1/fifo1/o_addr_7 ));
  all_modules1_fifo1_SLICE_94 \all_modules1/fifo1/SLICE_94 ( 
    .A1(\all_modules1/fifo1/o_addr_6 ), .A0(\all_modules1/fifo1/o_addr_5 ), 
    .DI1(\all_modules1/fifo1/n39 ), .DI0(\all_modules1/fifo1/n40 ), 
    .CE(\all_modules1/fifo1/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4733 ), .F0(\all_modules1/fifo1/n40 ), 
    .Q0(\all_modules1/fifo1/o_addr_5 ), .F1(\all_modules1/fifo1/n39 ), 
    .Q1(\all_modules1/fifo1/o_addr_6 ), .FCO(\all_modules1/fifo1/n4734 ));
  all_modules1_fifo1_SLICE_95 \all_modules1/fifo1/SLICE_95 ( 
    .A1(\all_modules1/fifo1/o_addr_4 ), .A0(\all_modules1/fifo1/o_addr_3 ), 
    .DI1(\all_modules1/fifo1/n41 ), .DI0(\all_modules1/fifo1/n42 ), 
    .CE(\all_modules1/fifo1/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4732 ), .F0(\all_modules1/fifo1/n42 ), 
    .Q0(\all_modules1/fifo1/o_addr_3 ), .F1(\all_modules1/fifo1/n41 ), 
    .Q1(\all_modules1/fifo1/o_addr_4 ), .FCO(\all_modules1/fifo1/n4733 ));
  all_modules1_fifo1_SLICE_96 \all_modules1/fifo1/SLICE_96 ( 
    .A1(\all_modules1/fifo1/o_addr_2 ), .A0(\all_modules1/fifo1/o_addr_1 ), 
    .DI1(\all_modules1/fifo1/n43 ), .DI0(\all_modules1/fifo1/n44 ), 
    .CE(\all_modules1/fifo1/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4731 ), .F0(\all_modules1/fifo1/n44 ), 
    .Q0(\all_modules1/fifo1/o_addr_1 ), .F1(\all_modules1/fifo1/n43 ), 
    .Q1(\all_modules1/fifo1/o_addr_2 ), .FCO(\all_modules1/fifo1/n4732 ));
  all_modules1_fifo1_SLICE_97 \all_modules1/fifo1/SLICE_97 ( 
    .A1(\all_modules1/fifo1/o_addr_0 ), .DI1(\all_modules1/fifo1/n45 ), 
    .CE(\all_modules1/fifo1/o_stb_N_212 ), .CLK(SD_CLK_c), 
    .F1(\all_modules1/fifo1/n45 ), .Q1(\all_modules1/fifo1/o_addr_0 ), 
    .FCO(\all_modules1/fifo1/n4731 ));
  SLICE_98 SLICE_98( .D1(\all_modules1/fifo1/i_addr_2 ), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/i_addr_3 ), 
    .A1(\all_modules1/fifo1/o_addr_3 ), .D0(\all_modules1/fifo1/i_addr_4 ), 
    .C0(\all_modules1/fifo1/o_addr_4 ), .B0(\all_modules1/fifo1/i_addr_5 ), 
    .A0(\all_modules1/fifo1/o_addr_5 ), .M1(\uart1/FSM_7__N_56 ), 
    .M0(\uart1/FSM_7__N_57 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4595 ), .Q0(\uart1/FSM_7__N_58 ), 
    .Q1(\uart1/FSM_7__N_57 ), .FCO(\all_modules1/fifo1/n4596 ));
  all_modules1_fifo1_SLICE_99 \all_modules1/fifo1/SLICE_99 ( 
    .A0(\all_modules1/fifo1/i_addr_7 ), .DI0(\all_modules1/fifo1/i_addr_1_7 ), 
    .CE(SD_CLK_c_enable_109), .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4670 ), 
    .F0(\all_modules1/fifo1/i_addr_1_7 ), .Q0(\all_modules1/fifo1/i_addr_7 ));
  all_modules1_fifo1_SLICE_100 \all_modules1/fifo1/SLICE_100 ( 
    .A1(\all_modules1/fifo1/i_addr_6 ), .A0(\all_modules1/fifo1/i_addr_5 ), 
    .DI1(\all_modules1/fifo1/i_addr_1_6 ), 
    .DI0(\all_modules1/fifo1/i_addr_1_5 ), .CE(SD_CLK_c_enable_109), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4669 ), 
    .F0(\all_modules1/fifo1/i_addr_1_5 ), .Q0(\all_modules1/fifo1/i_addr_5 ), 
    .F1(\all_modules1/fifo1/i_addr_1_6 ), .Q1(\all_modules1/fifo1/i_addr_6 ), 
    .FCO(\all_modules1/fifo1/n4670 ));
  all_modules1_fifo1_SLICE_101 \all_modules1/fifo1/SLICE_101 ( 
    .A1(\all_modules1/fifo1/i_addr_4 ), .A0(\all_modules1/fifo1/i_addr_3 ), 
    .DI1(\all_modules1/fifo1/i_addr_1_4 ), 
    .DI0(\all_modules1/fifo1/i_addr_1_3 ), .CE(SD_CLK_c_enable_109), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4668 ), 
    .F0(\all_modules1/fifo1/i_addr_1_3 ), .Q0(\all_modules1/fifo1/i_addr_3 ), 
    .F1(\all_modules1/fifo1/i_addr_1_4 ), .Q1(\all_modules1/fifo1/i_addr_4 ), 
    .FCO(\all_modules1/fifo1/n4669 ));
  all_modules1_fifo1_SLICE_102 \all_modules1/fifo1/SLICE_102 ( 
    .A1(\all_modules1/fifo1/i_addr_2 ), .A0(\all_modules1/fifo1/i_addr_1 ), 
    .DI1(\all_modules1/fifo1/i_addr_1_2 ), 
    .DI0(\all_modules1/fifo1/i_addr_1_1 ), .CE(SD_CLK_c_enable_109), 
    .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4667 ), 
    .F0(\all_modules1/fifo1/i_addr_1_1 ), .Q0(\all_modules1/fifo1/i_addr_1 ), 
    .F1(\all_modules1/fifo1/i_addr_1_2 ), .Q1(\all_modules1/fifo1/i_addr_2 ), 
    .FCO(\all_modules1/fifo1/n4668 ));
  all_modules1_fifo1_SLICE_103 \all_modules1/fifo1/SLICE_103 ( 
    .A1(\all_modules1/fifo1/i_addr_0 ), .DI1(\all_modules1/fifo1/i_addr_1_0 ), 
    .CE(SD_CLK_c_enable_109), .CLK(SD_CLK_c), 
    .F1(\all_modules1/fifo1/i_addr_1_0 ), .Q1(\all_modules1/fifo1/i_addr_0 ), 
    .FCO(\all_modules1/fifo1/n4667 ));
  SLICE_104 SLICE_104( .D1(\all_modules1/fifo1/i_addr_1_6 ), 
    .C1(\all_modules1/fifo1/o_addr_6 ), .B1(\all_modules1/fifo1/i_addr_1_7 ), 
    .A1(\all_modules1/fifo1/o_addr_7 ), .M1(\uart1/DAT_3 ), .M0(\uart1/DAT_2 ), 
    .CE(\uart1/FSM_7__N_59 ), .CLK(SD_CLK_c), .Q0(rx_dat_2), .Q1(rx_dat_3), 
    .FCO(\all_modules1/fifo1/n4597 ));
  SLICE_105 SLICE_105( .D0(\all_modules1/fifo1/i_addr_1_0 ), 
    .C0(\all_modules1/fifo1/o_addr_0 ), .B0(\all_modules1/fifo1/i_addr_1_1 ), 
    .A0(\all_modules1/fifo1/o_addr_1 ), .M1(\uart1/DAT_7 ), .M0(\uart1/DAT_6 ), 
    .CE(\uart1/FSM_7__N_59 ), .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4598 ), 
    .Q0(rx_dat_6), .F1(full), .Q1(rx_dat_7));
  SLICE_106 SLICE_106( .D1(\all_modules1/fifo1/i_addr_1_2 ), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/i_addr_1_3 ), 
    .A1(\all_modules1/fifo1/o_addr_3 ), .D0(\all_modules1/fifo1/i_addr_1_4 ), 
    .C0(\all_modules1/fifo1/o_addr_4 ), .B0(\all_modules1/fifo1/i_addr_1_5 ), 
    .A0(\all_modules1/fifo1/o_addr_5 ), .M1(\uart1/DAT_5 ), .M0(\uart1/DAT_4 ), 
    .CE(\uart1/FSM_7__N_59 ), .CLK(SD_CLK_c), .FCI(\all_modules1/fifo1/n4597 ), 
    .Q0(rx_dat_4), .Q1(rx_dat_5), .FCO(\all_modules1/fifo1/n4598 ));
  SLICE_107 SLICE_107( .D0(\all_modules1/fifo1/i_addr_0 ), 
    .C0(\all_modules1/fifo1/o_addr_0 ), .B0(\all_modules1/fifo1/i_addr_1 ), 
    .A0(\all_modules1/fifo1/o_addr_1 ), .M1(\uart1/FSM_7__N_54 ), 
    .M0(\uart1/FSM_7__N_55 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/fifo1/n4596 ), .Q0(\uart1/FSM_7__N_56 ), 
    .F1(\all_modules1/fifo1/empty ), .Q1(\uart1/FSM_7__N_55 ));
  SLICE_108 SLICE_108( .A1(\uart1/PS_10 ), .A0(\uart1/PS_9 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4739 ), .F0(\uart1/n54 ), .Q0(\all_modules1/rx_sd_data_8 ), 
    .F1(\uart1/n53 ), .Q1(\all_modules1/rx_sd_data_9 ));
  uart1_SLICE_109 \uart1/SLICE_109 ( .A1(\uart1/PS_8 ), .A0(\uart1/PS_7 ), 
    .DI1(\uart1/n55 ), .LSR(\uart1/n2114 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4738 ), .F0(\uart1/n56 ), .F1(\uart1/n55 ), .Q1(\uart1/PS_8 ), 
    .FCO(\uart1/n4739 ));
  uart1_SLICE_110 \uart1/SLICE_110 ( .A1(\uart1/PS_6 ), .A0(\uart1/PS_5 ), 
    .DI0(\uart1/n58 ), .LSR(\uart1/n2114 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4737 ), .F0(\uart1/n58 ), .Q0(\uart1/PS_5 ), .F1(\uart1/n57 ), 
    .FCO(\uart1/n4738 ));
  uart1_SLICE_111 \uart1/SLICE_111 ( .A1(\uart1/PS_4 ), .A0(\uart1/PS_3 ), 
    .DI1(\uart1/n59 ), .DI0(\uart1/n60 ), .LSR(\uart1/n2114 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4736 ), .F0(\uart1/n60 ), .Q0(\uart1/PS_3 ), .F1(\uart1/n59 ), 
    .Q1(\uart1/PS_4 ), .FCO(\uart1/n4737 ));
  uart1_SLICE_112 \uart1/SLICE_112 ( .A1(\uart1/PS_2 ), .A0(\uart1/PS_1 ), 
    .DI1(\uart1/n61 ), .LSR(\uart1/n2114 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4735 ), .F0(\uart1/n62 ), .F1(\uart1/n61 ), .Q1(\uart1/PS_2 ), 
    .FCO(\uart1/n4736 ));
  uart1_SLICE_113 \uart1/SLICE_113 ( .A1(\uart1/PS_0 ), .DI1(\uart1/n63 ), 
    .LSR(\uart1/n2114 ), .CLK(SD_CLK_c), .F1(\uart1/n63 ), .Q1(\uart1/PS_0 ), 
    .FCO(\uart1/n4735 ));
  uart_tx1_SLICE_114 \uart_tx1/SLICE_114 ( .A1(\uart_tx1/PS_10 ), 
    .A0(\uart_tx1/PS_9 ), .DI1(\uart_tx1/PS_10_N_870_10 ), 
    .DI0(\uart_tx1/PS_10_N_870_9 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4753 ), .F0(\uart_tx1/PS_10_N_870_9 ), 
    .Q0(\uart_tx1/PS_9 ), .F1(\uart_tx1/PS_10_N_870_10 ), 
    .Q1(\uart_tx1/PS_10 ));
  uart_tx1_SLICE_115 \uart_tx1/SLICE_115 ( .A1(\uart_tx1/PS_8 ), 
    .A0(\uart_tx1/PS_7 ), .DI1(\uart_tx1/PS_10_N_870_8 ), 
    .DI0(\uart_tx1/PS_10_N_870_7 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4752 ), .F0(\uart_tx1/PS_10_N_870_7 ), 
    .Q0(\uart_tx1/PS_7 ), .F1(\uart_tx1/PS_10_N_870_8 ), .Q1(\uart_tx1/PS_8 ), 
    .FCO(\uart_tx1/n4753 ));
  uart_tx1_SLICE_116 \uart_tx1/SLICE_116 ( .A1(\uart_tx1/PS_6 ), 
    .A0(\uart_tx1/PS_5 ), .DI1(\uart_tx1/PS_10_N_870_6 ), 
    .DI0(\uart_tx1/PS_10_N_870_5 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4751 ), .F0(\uart_tx1/PS_10_N_870_5 ), 
    .Q0(\uart_tx1/PS_5 ), .F1(\uart_tx1/PS_10_N_870_6 ), .Q1(\uart_tx1/PS_6 ), 
    .FCO(\uart_tx1/n4752 ));
  uart_tx1_SLICE_117 \uart_tx1/SLICE_117 ( .A1(\uart_tx1/PS_4 ), 
    .A0(\uart_tx1/PS_3 ), .DI1(\uart_tx1/PS_10_N_870_4 ), 
    .DI0(\uart_tx1/PS_10_N_870_3 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4750 ), .F0(\uart_tx1/PS_10_N_870_3 ), 
    .Q0(\uart_tx1/PS_3 ), .F1(\uart_tx1/PS_10_N_870_4 ), .Q1(\uart_tx1/PS_4 ), 
    .FCO(\uart_tx1/n4751 ));
  uart_tx1_SLICE_118 \uart_tx1/SLICE_118 ( .A1(\uart_tx1/PS_2 ), 
    .A0(\uart_tx1/PS_1 ), .DI1(\uart_tx1/PS_10_N_870_2 ), 
    .DI0(\uart_tx1/PS_10_N_870_1 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4749 ), .F0(\uart_tx1/PS_10_N_870_1 ), 
    .Q0(\uart_tx1/PS_1 ), .F1(\uart_tx1/PS_10_N_870_2 ), .Q1(\uart_tx1/PS_2 ), 
    .FCO(\uart_tx1/n4750 ));
  uart_tx1_SLICE_119 \uart_tx1/SLICE_119 ( .A1(\uart_tx1/PS_0 ), 
    .DI1(\uart_tx1/PS_10_N_870_0 ), .LSR(\uart_tx1/PS_10__N_882 ), 
    .CLK(SD_CLK_c), .F1(\uart_tx1/PS_10_N_870_0 ), .Q1(\uart_tx1/PS_0 ), 
    .FCO(\uart_tx1/n4749 ));
  all_modules1_SLICE_120 \all_modules1/SLICE_120 ( 
    .D1(\all_modules1/sdram_to_uart1/state_1 ), 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ), 
    .B1(\all_modules1/sdram_to_uart1/n5094 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ), 
    .D0(\all_modules1/sdram_to_uart1/state_1 ), 
    .C0(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .B0(\all_modules1/sdram_to_uart1/n5094 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), 
    .DI1(\all_modules1/tx_dat1_1 ), .DI0(\all_modules1/tx_dat1_0 ), 
    .CE(\all_modules1/tx_stb1 ), .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_0 ), 
    .Q0(LED_c_0), .F1(\all_modules1/tx_dat1_1 ), .Q1(LED_c_1));
  all_modules1_SLICE_121 \all_modules1/SLICE_121 ( 
    .C1(\all_modules1/sdram_to_uart1/n13 ), 
    .B1(\all_modules1/sdram_to_uart1/state_0 ), 
    .A1(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .B0(\all_modules1/sdram_to_uart1/n8 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .DI1(\all_modules1/tx_dat1_3 ), 
    .DI0(\all_modules1/tx_dat1_2 ), .CE(\all_modules1/tx_stb1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_2 ), .Q0(LED_c_2), 
    .F1(\all_modules1/tx_dat1_3 ), .Q1(LED_c_3));
  all_modules1_uart_to_sdram1_SLICE_130 
    \all_modules1/uart_to_sdram1/SLICE_130 ( 
    .D1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .C1(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .B1(\all_modules1/rx_stb1 ), .A1(\all_modules1/rd_wt_operation_1 ), 
    .C0(\all_modules1/o_stb_rd_N_367 ), 
    .B0(\all_modules1/uart_to_sdram1/n5154 ), .A0(\all_modules1/uts_ack1 ), 
    .DI0(\all_modules1/uart_to_sdram1/n8 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n8 ), .Q0(\all_modules1/o_stb_rd_N_367 ), 
    .F1(\all_modules1/uart_to_sdram1/n5154 ));
  all_modules1_sdram_controller1_SLICE_131 
    \all_modules1/sdram_controller1/SLICE_131 ( 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .D0(\all_modules1/sdram_controller1/n10 ), 
    .C0(\all_modules1/sdram_controller1/n14 ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/n5391 ), 
    .DI0(\all_modules1/sdram_controller1/n5076 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n5076 ), 
    .Q0(\all_modules1/rd_i_ack_N_577 ), 
    .F1(\all_modules1/sdram_controller1/n5391 ));
  all_modules1_SLICE_132 \all_modules1/SLICE_132 ( 
    .C1(\all_modules1/rx_dat1_2 ), .B1(\all_modules1/rx_dat1_0 ), 
    .A1(\all_modules1/fifo1/n8 ), .C0(\all_modules1/rx_dat1_0 ), 
    .B0(\all_modules1/fifo1/n8 ), .A0(\all_modules1/rx_dat1_2 ), 
    .DI1(\all_modules1/next_state_3__N_347 ), 
    .DI0(\all_modules1/rd_wt_operation_1_N_343_0 ), 
    .CE(\all_modules1/uart_to_sdram1/data_tim_reset ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/rd_wt_operation_1_N_343_0 ), 
    .Q0(\all_modules1/rd_wt_operation_0 ), 
    .F1(\all_modules1/next_state_3__N_347 ), 
    .Q1(\all_modules1/rd_wt_operation_1 ));
  SLICE_134 SLICE_134( .DI0(n5560), 
    .CE(\all_modules1/sdram_controller1/init_done_N_558 ), .CLK(SD_CLK_c), 
    .F0(n5560), .Q0(\all_modules1/repeat_tim_period_13 ));
  all_modules1_fifo1_SLICE_143 \all_modules1/fifo1/SLICE_143 ( 
    .B0(\all_modules1/fifo1/empty ), .A0(\all_modules1/fifo1/n5398 ), 
    .DI0(\all_modules1/fifo1/n7 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n7 ), .Q0(\all_modules1/rx_stb1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_156 
    \all_modules1/sdram_controller1/arbBank/SLICE_156 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/n5402 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_750 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4851 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_750 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_746 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_756 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_756 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_746 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ));
  all_modules1_sdram_controller1_arbBank_SLICE_157 
    \all_modules1/sdram_controller1/arbBank/SLICE_157 ( 
    .B1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_753 ), 
    .M0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_750 ), 
    .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_753 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_158 
    \all_modules1/sdram_controller1/arbBank/SLICE_158 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_737 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5286 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n5405 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_737 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_740 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_743 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_743 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_740 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_159 
    \all_modules1/sdram_controller1/arbBank/SLICE_159 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_737 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_733 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_733 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_737 ));
  all_modules1_sdram_controller1_arbBank_SLICE_160 
    \all_modules1/sdram_controller1/arbBank/SLICE_160 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_724 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5284 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n5401 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_724 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_727 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_730 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_730 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_727 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_161 
    \all_modules1/sdram_controller1/arbBank/SLICE_161 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4_adj_998 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_724 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_720 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_720 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_724 ));
  all_modules1_sdram_controller1_arbBank_SLICE_162 
    \all_modules1/sdram_controller1/arbBank/SLICE_162 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_710 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5282 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n5399 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_710 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_714 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_717 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_717 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_714 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_163 
    \all_modules1/sdram_controller1/arbBank/SLICE_163 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4_adj_999 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_710 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_706 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_706 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_710 ));
  all_modules1_sdram_controller1_SLICE_164 
    \all_modules1/sdram_controller1/SLICE_164 ( 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .C0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .DI0(\all_modules1/sdram_controller1/next_state_3__N_570 ), 
    .LSR(\all_modules1/sdram_controller1/n393 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/next_state_3__N_570 ), 
    .Q0(\all_modules1/sdram_controller1/arb_delay_2 ), .F1(DQM_c));
  SLICE_166 SLICE_166( .B1(delay_tim_reset), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C0(delay_tim_reset), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/count_0 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n11 ), 
    .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/count_0 ), .F1(SD_CLK_c_enable_131));
  all_modules1_sdram_controller1_SLICE_167 
    \all_modules1/sdram_controller1/SLICE_167 ( 
    .B1(\all_modules1/sdram_controller1/n390 ), 
    .A1(\all_modules1/sdram_controller1/n391 ), 
    .B0(\all_modules1/sdram_controller1/count_0 ), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n9_adj_1000 ), 
    .CE(SD_CLK_c_enable_131), .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n9_adj_1000 ), 
    .Q0(\all_modules1/sdram_controller1/count_1 ), 
    .F1(\all_modules1/sdram_controller1/n5397 ));
  all_modules1_sdram_controller1_delayTimer_SLICE_168 
    \all_modules1/sdram_controller1/delayTimer/SLICE_168 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .C1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .B1(\all_modules1/sdram_controller1/count_0 ), 
    .A1(\all_modules1/sdram_controller1/count_1 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .B0(\all_modules1/sdram_controller1/count_0 ), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .CE(SD_CLK_c_enable_131), .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .Q0(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .Q1(\all_modules1/sdram_controller1/delayTimer/count_3 ));
  all_modules1_sdram_controller1_initTimer_SLICE_169 
    \all_modules1/sdram_controller1/initTimer/SLICE_169 ( 
    .DI0(\n5560\001/BUF1 ), 
    .CE(\all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_110 ), 
    .CLK(SD_CLK_c), .F0(\n5560\001/BUF1 ), 
    .Q0(\all_modules1/sdram_controller1/initTimer/count_15 ));
  all_modules1_sdram_controller1_SLICE_170 
    \all_modules1/sdram_controller1/SLICE_170 ( 
    .D1(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .C1(\all_modules1/sdram_controller1/n397 ), 
    .B1(\all_modules1/sdram_controller1/n395 ), 
    .A1(\all_modules1/repeat_tim_period_13 ), 
    .C0(\all_modules1/sdram_controller1/n397 ), 
    .B0(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(\all_modules1/sdram_controller1/n5099 ), 
    .LSR(\all_modules1/repeat_tim_period_13 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n5099 ), 
    .Q0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .F1(\all_modules1/sdram_controller1/n10 ));
  all_modules1_sdram_controller1_SLICE_171 
    \all_modules1/sdram_controller1/SLICE_171 ( 
    .D1(\all_modules1/sdram_controller1/n393 ), 
    .C1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n391 ), 
    .A0(\all_modules1/sdram_controller1/n390 ), 
    .DI1(\all_modules1/sdram_controller1/n5084 ), 
    .DI0(\all_modules1/sdram_controller1/n2208 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2208 ), 
    .Q0(\all_modules1/sdram_controller1/n390 ), 
    .F1(\all_modules1/sdram_controller1/n5084 ), 
    .Q1(\all_modules1/sdram_controller1/n391 ));
  all_modules1_sdram_controller1_SLICE_172 
    \all_modules1/sdram_controller1/SLICE_172 ( .D1(\all_modules1/uts_ack1 ), 
    .C1(\all_modules1/repeat_tim_period_13 ), .B1(refresh_tim_flag), 
    .A1(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), 
    .D0(\all_modules1/sdram_controller1/n12_adj_1007 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n394 ), 
    .A0(\all_modules1/sdram_controller1/n393 ), 
    .DI1(\all_modules1/sdram_controller1/n5092 ), 
    .DI0(\all_modules1/sdram_controller1/n2206 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2206 ), 
    .Q0(\all_modules1/sdram_controller1/n393 ), 
    .F1(\all_modules1/sdram_controller1/n5092 ), 
    .Q1(\all_modules1/sdram_controller1/n394 ));
  all_modules1_sdram_controller1_SLICE_173 
    \all_modules1/sdram_controller1/SLICE_173 ( 
    .C1(\all_modules1/sdram_controller1/n397 ), .B1(refresh_tim_reset), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .A0(\all_modules1/sdram_controller1/n395 ), 
    .DI1(\all_modules1/sdram_controller1/n2202 ), 
    .DI0(\all_modules1/sdram_controller1/n2204 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2204 ), 
    .Q0(\all_modules1/sdram_controller1/n395 ), 
    .F1(\all_modules1/sdram_controller1/n2202 ), 
    .Q1(\all_modules1/sdram_controller1/n397 ));
  all_modules1_sdram_controller1_SLICE_174 
    \all_modules1/sdram_controller1/SLICE_174 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .C1(\all_modules1/rd_i_ack_N_577 ), 
    .B1(\all_modules1/sdram_controller1/n399 ), 
    .A1(\all_modules1/sdram_controller1/n395 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/n399 ), 
    .DI0(\all_modules1/sdram_controller1/n2200 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2200 ), 
    .Q0(\all_modules1/sdram_controller1/n399 ), 
    .F1(\all_modules1/sdram_controller1/n12 ));
  all_modules1_SLICE_176 \all_modules1/SLICE_176 ( 
    .B1(\all_modules1/o_stb_rd_N_367 ), 
    .A1(\all_modules1/uart_to_sdram1/n146 ), .D0(\all_modules1/n4060 ), 
    .C0(\all_modules1/rd_wt_operation_1 ), 
    .B0(\all_modules1/rd_wt_operation_0 ), .A0(\all_modules1/n5407 ), 
    .DI0(\all_modules1/sdram_controller1/n5060 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n5060 ), 
    .Q0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_102 ));
  all_modules1_sdram_controller1_SLICE_177 
    \all_modules1/sdram_controller1/SLICE_177 ( 
    .B1(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .A1(\all_modules1/rd_i_ack_N_577 ), .C0(\all_modules1/n4060 ), 
    .B0(\all_modules1/rd_wt_operation_0 ), .A0(\all_modules1/n5407 ), 
    .DI0(\all_modules1/sdram_controller1/n53 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n53 ), 
    .Q0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .F1(\all_modules1/sdram_controller1/n4 ));
  all_modules1_sdram_to_uart1_SLICE_187 
    \all_modules1/sdram_to_uart1/SLICE_187 ( .C1(\all_modules1/full ), 
    .B1(\all_modules1/sdram_to_uart1/state_0 ), .A1(nreset_c), 
    .D0(\all_modules1/sdram_to_uart1/state_0 ), 
    .C0(\all_modules1/sdram_to_uart1/state_1 ), .B0(\all_modules1/tx_ack1 ), 
    .A0(\all_modules1/sdram_to_uart1/n5395 ), 
    .DI0(\all_modules1/sdram_to_uart1/next_state_0 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/next_state_0 ), 
    .Q0(\all_modules1/sdram_to_uart1/state_0 ), .F1(\all_modules1/tx_ack1 ));
  all_modules1_sdram_to_uart1_SLICE_188 
    \all_modules1/sdram_to_uart1/SLICE_188 ( .B1(nreset_c), 
    .A1(\all_modules1/sdram_to_uart1/state_0 ), .D0(\all_modules1/full ), 
    .C0(\all_modules1/sdram_to_uart1/state_1 ), .B0(nreset_c), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .DI0(\all_modules1/sdram_to_uart1/n5292 ), 
    .LSR(\all_modules1/sdram_to_uart1/state_0 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/n5292 ), 
    .Q0(\all_modules1/sdram_to_uart1/state_1 ), .F1(\all_modules1/tx_stb1 ));
  all_modules1_uart_to_sdram1_SLICE_198 
    \all_modules1/uart_to_sdram1/SLICE_198 ( 
    .B1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .A1(\all_modules1/uart_to_sdram1/n141 ), 
    .D0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .C0(\all_modules1/rx_stb1 ), .B0(\all_modules1/uart_to_sdram1/n141 ), 
    .A0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4913 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4913 ), 
    .Q0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .F1(\all_modules1/uart_to_sdram1/n2899 ));
  all_modules1_SLICE_207 \all_modules1/SLICE_207 ( .C1(\all_modules1/n4060 ), 
    .B1(\all_modules1/n5390 ), .A1(\all_modules1/rd_i_ack_N_577 ), 
    .D0(\all_modules1/uts_ack1 ), .C0(\all_modules1/uart_to_sdram1/n4 ), 
    .B0(\all_modules1/o_stb_rd_N_367 ), 
    .A0(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .DI0(\all_modules1/uart_to_sdram1/n4799 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4799 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .F1(\all_modules1/uts_ack1 ));
  all_modules1_uart_to_sdram1_SLICE_208 
    \all_modules1/uart_to_sdram1/SLICE_208 ( .C1(\all_modules1/uts_ack1 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), 
    .A1(\all_modules1/uart_to_sdram1/data_tim_flag ), 
    .D0(\all_modules1/next_state_3__N_345 ), 
    .C0(\all_modules1/uart_to_sdram1/n155 ), 
    .B0(\all_modules1/uart_to_sdram1/data_tim_reset ), 
    .A0(\all_modules1/uart_to_sdram1/n5 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4881 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4881 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_tim_reset ), 
    .F1(\all_modules1/uart_to_sdram1/n155 ));
  all_modules1_uart_to_sdram1_SLICE_209 
    \all_modules1/uart_to_sdram1/SLICE_209 ( .D1(\all_modules1/rx_stb1 ), 
    .C1(\all_modules1/rd_wt_operation_0 ), 
    .B1(\all_modules1/rd_wt_operation_1 ), 
    .A1(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .D0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .C0(\all_modules1/rx_stb1 ), .B0(\all_modules1/uart_to_sdram1/n2825 ), 
    .A0(\all_modules1/uart_to_sdram1/n141 ), 
    .DI0(\all_modules1/uart_to_sdram1/n2163 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n2163 ), 
    .Q0(\all_modules1/uart_to_sdram1/n141 ), 
    .F1(\all_modules1/uart_to_sdram1/n2825 ));
  all_modules1_SLICE_212 \all_modules1/SLICE_212 ( .D1(\all_modules1/rx_stb1 ), 
    .C1(\all_modules1/rx_dat1_2 ), .B1(\all_modules1/fifo1/n8 ), 
    .A1(\all_modules1/rx_dat1_0 ), 
    .D0(\all_modules1/uart_to_sdram1/data_tim_reset ), 
    .C0(\all_modules1/rx_stb1 ), .B0(\all_modules1/next_state_3__N_345 ), 
    .A0(\all_modules1/uart_to_sdram1/n148 ), 
    .DI0(\all_modules1/uart_to_sdram1/n2161 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n2161 ), 
    .Q0(\all_modules1/uart_to_sdram1/n148 ), 
    .F1(\all_modules1/next_state_3__N_345 ));
  all_modules1_uart_to_sdram1_SLICE_213 
    \all_modules1/uart_to_sdram1/SLICE_213 ( 
    .B1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), 
    .A1(\all_modules1/uart_to_sdram1/n144 ), 
    .B0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n70 ), 
    .A0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .DI0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n2432 ), 
    .LSR(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n2432 ), 
    .Q0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_15 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 ));
  all_modules1_sdram_controller1_SLICE_215 
    \all_modules1/sdram_controller1/SLICE_215 ( 
    .D1(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .C1(\all_modules1/sdram_controller1/n397 ), 
    .B1(\all_modules1/sdram_controller1/n399 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/sdram_controller1/n397 ), 
    .C0(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .B0(\all_modules1/sdram_controller1/n399 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(\all_modules1/sdram_controller1/n419 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n419 ), .Q0(refresh_tim_reset), 
    .F1(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ));
  uart_tx1_SLICE_220 \uart_tx1/SLICE_220 ( .B0(tx_stb), 
    .A0(\uart_tx1/FSM_7__N_883 ), .DI0(DAT_7__N_993), .CLK(SD_CLK_c), 
    .F0(DAT_7__N_993), .Q0(tx_ack));
  all_modules1_fifo2_SLICE_221 \all_modules1/fifo2/SLICE_221 ( 
    .C1(\all_modules1/fifo2/empty ), .B1(tx_stb), .A1(tx_ack), .C0(tx_ack), 
    .B0(\all_modules1/fifo2/empty ), .A0(tx_stb), 
    .DI0(\all_modules1/fifo2/o_stb_N_212 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_23 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/o_stb_N_212 ), .Q0(tx_stb), 
    .F1(\all_modules1/fifo2/SD_CLK_c_enable_23 ));
  uart1_SLICE_222 \uart1/SLICE_222 ( .D1(\uart1/n5127 ), 
    .C1(\uart1/FSM_7__N_52 ), .B1(\uart1/DAT_1 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n5102 ), .C0(\uart1/FSM_7__N_51 ), .B0(\uart1/DAT_0 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2882 ), .DI0(\uart1/n2888 ), 
    .CE(\uart1/SD_CLK_c_enable_154 ), .CLK(SD_CLK_c), .F0(\uart1/n2888 ), 
    .Q0(\uart1/DAT_0 ), .F1(\uart1/n2882 ), .Q1(\uart1/DAT_1 ));
  uart1_SLICE_223 \uart1/SLICE_223 ( .D1(\uart1/n5109 ), 
    .C1(\uart1/FSM_7__N_54 ), .B1(\uart1/DAT_3 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n5101 ), .C0(\uart1/FSM_7__N_53 ), .B0(\uart1/DAT_2 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2870 ), .DI0(\uart1/n2876 ), 
    .CE(\uart1/SD_CLK_c_enable_154 ), .CLK(SD_CLK_c), .F0(\uart1/n2876 ), 
    .Q0(\uart1/DAT_2 ), .F1(\uart1/n2870 ), .Q1(\uart1/DAT_3 ));
  uart1_SLICE_224 \uart1/SLICE_224 ( .D1(\uart1/n5112 ), 
    .C1(\uart1/FSM_7__N_56 ), .B1(\uart1/DAT_5 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n5110 ), .C0(\uart1/FSM_7__N_55 ), .B0(\uart1/DAT_4 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2885 ), .DI0(\uart1/n2891 ), 
    .CE(\uart1/SD_CLK_c_enable_154 ), .CLK(SD_CLK_c), .F0(\uart1/n2891 ), 
    .Q0(\uart1/DAT_4 ), .F1(\uart1/n2885 ), .Q1(\uart1/DAT_5 ));
  uart1_SLICE_225 \uart1/SLICE_225 ( .D1(\uart1/n5116 ), 
    .C1(\uart1/FSM_7__N_58 ), .B1(\uart1/DAT_7 ), .A1(\uart1/RXDc ), 
    .D0(\uart1/n5115 ), .C0(\uart1/FSM_7__N_57 ), .B0(\uart1/DAT_6 ), 
    .A0(\uart1/RXDc ), .DI1(\uart1/n2873 ), .DI0(\uart1/n2879 ), 
    .CE(\uart1/SD_CLK_c_enable_154 ), .CLK(SD_CLK_c), .F0(\uart1/n2879 ), 
    .Q0(\uart1/DAT_6 ), .F1(\uart1/n2873 ), .Q1(\uart1/DAT_7 ));
  uart1_SLICE_226 \uart1/SLICE_226 ( .D1(\uart1/SMPL ), 
    .C1(\uart1/FSM_7__N_50 ), .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), 
    .D0(SD_CLK_c_enable_109), .C0(\uart1/FSM_7__N_49 ), 
    .B0(\uart1/FSM_7__N_60 ), .A0(\uart1/RXDc ), .DI1(\uart1/n2192 ), 
    .DI0(\uart1/n2210 ), .CLK(SD_CLK_c), .F0(\uart1/n2210 ), 
    .Q0(\uart1/FSM_7__N_49 ), .F1(\uart1/n2192 ), .Q1(\uart1/FSM_7__N_50 ));
  uart1_SLICE_232 \uart1/SLICE_232 ( .B1(full), .A1(\uart1/rx_stb ), 
    .D0(\uart1/SMPL ), .C0(\uart1/FSM_7__N_59 ), .B0(SD_CLK_c_enable_109), 
    .A0(\uart1/FSM_7__N_60 ), .DI0(\uart1/n3367 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n3367 ), .Q0(\uart1/FSM_7__N_60 ), .F1(SD_CLK_c_enable_109));
  uart1_SLICE_233 \uart1/SLICE_233 ( .C1(\uart1/n57 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n62 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI1(\uart1/PS_10_N_37_6 ), 
    .DI0(\uart1/PS_10_N_37_1 ), .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_10_N_37_1 ), .Q0(\uart1/PS_1 ), .F1(\uart1/PS_10_N_37_6 ), 
    .Q1(\uart1/PS_6 ));
  uart1_SLICE_234 \uart1/SLICE_234 ( .C1(\uart1/n54 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n56 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI1(\uart1/PS_10_N_37_9 ), 
    .DI0(\uart1/PS_10_N_37_7 ), .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_10_N_37_7 ), .Q0(\uart1/PS_7 ), .F1(\uart1/PS_10_N_37_9 ), 
    .Q1(\uart1/PS_9 ));
  uart1_SLICE_235 \uart1/SLICE_235 ( .C1(\uart1/PS_10__N_48 ), 
    .B1(\uart1/FSM_7__N_49 ), .A1(\uart1/RXDc ), .C0(\uart1/n53 ), 
    .B0(\uart1/FSM_7__N_49 ), .A0(\uart1/RXDc ), .DI0(\uart1/PS_10_N_37_10 ), 
    .LSR(\uart1/PS_10__N_48 ), .CLK(SD_CLK_c), .F0(\uart1/PS_10_N_37_10 ), 
    .Q0(\uart1/PS_10 ), .F1(\uart1/n2114 ));
  SLICE_238 SLICE_238( .M1(uart_rx_c), .M0(\uart1/RXDb ), .CLK(SD_CLK_c), 
    .F0(VCC_net), .Q0(\uart1/RXDc ), .F1(GND_net), .Q1(\uart1/RXDa ));
  uart1_SLICE_239 \uart1/SLICE_239 ( .D1(\uart1/PS_2 ), .C1(\uart1/PS_10 ), 
    .B1(\uart1/n18 ), .A1(\uart1/PS_4 ), .D0(\uart1/PS_9 ), .C0(\uart1/n16 ), 
    .B0(\uart1/n20 ), .A0(\uart1/PS_7 ), .DI0(\uart1/PS_10__N_48 ), 
    .CLK(SD_CLK_c), .F0(\uart1/PS_10__N_48 ), .Q0(\uart1/SMPL ), 
    .F1(\uart1/n20 ));
  uart1_SLICE_240 \uart1/SLICE_240 ( .C1(\uart1/FSM_7__N_60 ), .B1(full), 
    .A1(\uart1/rx_stb ), .D0(\uart1/SMPL ), .C0(\uart1/rx_stb ), 
    .B0(\uart1/FSM_7__N_59 ), .A0(\uart1/n5380 ), .DI0(\uart1/STBo_N_161 ), 
    .CLK(SD_CLK_c), .F0(\uart1/STBo_N_161 ), .Q0(\uart1/rx_stb ), 
    .F1(\uart1/n5380 ));
  uart_tx1_SLICE_241 \uart_tx1/SLICE_241 ( .B1(\uart_tx1/FSM_7__N_887 ), 
    .A1(\uart_tx1/FSM_7__N_888 ), .D0(\uart_tx1/FSM_7__N_895 ), .C0(tx_stb), 
    .B0(\uart_tx1/SMPL ), .A0(\uart_tx1/FSM_7__N_883 ), .DI0(\uart_tx1/n2225 ), 
    .M1(DAT_7__N_993), .CLK(SD_CLK_c), .F0(\uart_tx1/n2225 ), 
    .Q0(\uart_tx1/FSM_7__N_883 ), .F1(\uart_tx1/n1587 ), 
    .Q1(\uart_tx1/FSM_7__N_884 ));
  uart_tx1_SLICE_242 \uart_tx1/SLICE_242 ( .C1(\uart_tx1/FSM_7__N_885 ), 
    .B1(\uart_tx1/FSM_7__N_883 ), .A1(\uart_tx1/FSM_7__N_884 ), 
    .C0(\uart_tx1/SMPL ), .B0(\uart_tx1/FSM_7__N_884 ), 
    .A0(\uart_tx1/FSM_7__N_885 ), .DI0(\uart_tx1/n2229 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2229 ), .Q0(\uart_tx1/FSM_7__N_885 ), .F1(\uart_tx1/n4789 ));
  uart_tx1_SLICE_243 \uart_tx1/SLICE_243 ( .D1(\uart_tx1/PS_0 ), 
    .C1(\uart_tx1/PS_9 ), .B1(\uart_tx1/PS_2 ), .A1(\uart_tx1/PS_7 ), 
    .B0(\uart_tx1/PS_5 ), .A0(\uart_tx1/PS_1 ), .M1(\uart_tx1/FSM_7__N_886 ), 
    .M0(\uart_tx1/FSM_7__N_885 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n16 ), .Q0(\uart_tx1/FSM_7__N_886 ), .F1(\uart_tx1/n18 ), 
    .Q1(\uart_tx1/FSM_7__N_887 ));
  SLICE_244 SLICE_244( .C1(\uart_tx1/FSM_7__N_893 ), .B1(n1842), .A1(n1840), 
    .D0(\uart1/PS_1 ), .C0(\uart1/PS_0 ), .B0(\uart1/PS_6 ), .A0(\uart1/PS_3 ), 
    .M1(\uart_tx1/FSM_7__N_888 ), .M0(\uart_tx1/FSM_7__N_887 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), .F0(\uart1/n18 ), 
    .Q0(\uart_tx1/FSM_7__N_888 ), .F1(\uart_tx1/n2211 ), 
    .Q1(\uart_tx1/FSM_7__N_889 ));
  SLICE_245 SLICE_245( .D1(\uart1/FSM_7__N_50 ), .C1(\uart1/FSM_7__N_49 ), 
    .B1(\uart1/FSM_7__N_60 ), .A1(\uart1/FSM_7__N_59 ), .B0(\uart1/PS_8 ), 
    .A0(\uart1/PS_5 ), .M1(\uart_tx1/FSM_7__N_890 ), 
    .M0(\uart_tx1/FSM_7__N_889 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\uart1/n16 ), .Q0(\uart_tx1/FSM_7__N_890 ), 
    .F1(\uart1/SD_CLK_c_enable_154 ), .Q1(\uart_tx1/FSM_7__N_891 ));
  SLICE_246 SLICE_246( .D1(\uart1/n5393 ), .C1(\uart1/n5392 ), 
    .B1(\uart1/n5396 ), .A1(\uart1/FSM_7__N_52 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .M1(\uart_tx1/FSM_7__N_892 ), .M0(\uart_tx1/FSM_7__N_891 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/n5401 ), 
    .Q0(\uart_tx1/FSM_7__N_892 ), .F1(\uart1/n5112 ), 
    .Q1(\uart_tx1/FSM_7__N_893 ));
  SLICE_247 SLICE_247( .B1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .M1(\uart_tx1/FSM_7__N_894 ), .M0(\uart_tx1/FSM_7__N_893 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n11_adj_1004 ), 
    .Q0(\uart_tx1/FSM_7__N_894 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5399 ), 
    .Q1(\uart_tx1/FSM_7__N_895 ));
  uart_tx1_SLICE_248 \uart_tx1/SLICE_248 ( .D1(\uart_tx1/PS_10 ), 
    .C1(\uart_tx1/PS_3 ), .B1(\uart_tx1/n18 ), .A1(\uart_tx1/PS_6 ), 
    .D0(\uart_tx1/PS_8 ), .C0(\uart_tx1/n16 ), .B0(\uart_tx1/n20 ), 
    .A0(\uart_tx1/PS_4 ), .DI0(\uart_tx1/PS_10__N_882 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/PS_10__N_882 ), .Q0(\uart_tx1/SMPL ), .F1(\uart_tx1/n20 ));
  SLICE_249 SLICE_249( .B1(\all_modules1/rd_wt_operation_1_N_835_1 ), 
    .A1(\all_modules1/wt_o_stb1 ), .DI0(\n5560\000/BUF1 ), .CLK(SD_CLK_c), 
    .F0(\n5560\000/BUF1 ), .Q0(\uart_tx1/n1839 ), 
    .F1(\all_modules1/sdram_to_uart1/n5395 ));
  uart_tx1_SLICE_250 \uart_tx1/SLICE_250 ( .D1(\uart_tx1/FSM_7__N_887 ), 
    .C1(n1854), .B1(n1852), .A1(\uart_tx1/n1839 ), .D0(\uart_tx1/n1587 ), 
    .C0(\uart_tx1/n2129 ), .B0(\uart_tx1/FSM_7__N_886 ), .A0(\uart_tx1/n1598 ), 
    .DI0(\uart_tx1/n2167 ), .LSR(\uart_tx1/n4789 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2167 ), .Q0(uart_tx_c), .F1(\uart_tx1/n2129 ));
  all_modules1_sdram_controller1_mux_618_i1_SLICE_251 
    \all_modules1/sdram_controller1/mux_618_i1/SLICE_251 ( 
    .D1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .C1(\all_modules1/sdram_controller1/n399 ), 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/sdram_controller1/n4 ), 
    .C0(\all_modules1/sdram_controller1/n2188 ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .M0(\all_modules1/sdram_controller1/n5160 ), .OFX0(delay_tim_reset));
  all_modules1_sdram_controller1_arbBank_i4223_SLICE_252 
    \all_modules1/sdram_controller1/arbBank/i4223/SLICE_252 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n5527 ));
  all_modules1_sdram_controller1_arbBank_i4219_SLICE_253 
    \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .M1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .FXB(\all_modules1/sdram_controller1/arbBank/n5524 ), 
    .FXA(\all_modules1/sdram_controller1/arbBank/n5527 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n5524 ), 
    .OFX1(\all_modules1/n4060 ));
  uart_tx1_mux_721_i1_SLICE_254 \uart_tx1/mux_721_i1/SLICE_254 ( 
    .B1(\uart_tx1/n2644 ), .A1(\uart_tx1/n1839 ), .D0(\uart_tx1/FSM_7__N_893 ), 
    .C0(\uart_tx1/n2211 ), .B0(\uart_tx1/FSM_7__N_894 ), .A0(\uart_tx1/n1839 ), 
    .M0(\uart_tx1/n4812 ), .OFX0(\uart_tx1/n1598 ));
  all_modules1_SLICE_255 \all_modules1/SLICE_255 ( .D1(\all_modules1/n5407 ), 
    .C1(\all_modules1/rd_wt_operation_0 ), .B1(nreset_c), 
    .A1(\all_modules1/rd_i_ack_N_577 ), .C0(\all_modules1/o_stb_rd_N_367 ), 
    .B0(\all_modules1/repeat_tim_period_13 ), .A0(nreset_c), 
    .F0(\all_modules1/n5407 ), .F1(\all_modules1/sdram_controller1/n1737 ));
  all_modules1_uart_to_sdram1_SLICE_256 
    \all_modules1/uart_to_sdram1/SLICE_256 ( .D1(\all_modules1/rx_stb1 ), 
    .C1(\all_modules1/rd_wt_operation_0 ), 
    .B1(\all_modules1/rd_wt_operation_1 ), 
    .A1(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .D0(\all_modules1/rx_stb1 ), .C0(\all_modules1/uart_to_sdram1/n5088 ), 
    .B0(\all_modules1/uart_to_sdram1/n2899 ), 
    .A0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n5 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_12 ), 
    .F1(\all_modules1/uart_to_sdram1/n5088 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_13 ));
  all_modules1_sdram_controller1_SLICE_257 
    \all_modules1/sdram_controller1/SLICE_257 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n5078 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_19 ), .M0(\all_modules1/rx_sd_adr_18 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n5078 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), .F1(ADR_c_3), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ));
  all_modules1_sdram_controller1_SLICE_258 
    \all_modules1/sdram_controller1/SLICE_258 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2417 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_20 ), .M0(\all_modules1/rx_sd_adr_2 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2417 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), .F1(ADR_c_5), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ));
  all_modules1_sdram_controller1_SLICE_259 
    \all_modules1/sdram_controller1/SLICE_259 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2409 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), .M1(DB_out_9), 
    .M0(DB_out_8), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2409 ), 
    .Q0(\all_modules1/tx_sd_data_8 ), .F1(ADR_c_1), 
    .Q1(\all_modules1/tx_sd_data_9 ));
  all_modules1_sdram_controller1_SLICE_260 
    \all_modules1/sdram_controller1/SLICE_260 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2423 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_1 ), .M0(\all_modules1/rx_sd_adr_0 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2423 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), .F1(ADR_c_8), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ));
  all_modules1_sdram_controller1_SLICE_261 
    \all_modules1/sdram_controller1/SLICE_261 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ), 
    .B1(\all_modules1/sdram_controller1/n5387 ), 
    .A1(\all_modules1/sdram_controller1/n400 ), 
    .C0(\all_modules1/sdram_controller1/n5055 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_17 ), .M0(\all_modules1/rx_sd_adr_16 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n5387 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), .F1(ADR_c_10), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ));
  all_modules1_sdram_controller1_SLICE_262 
    \all_modules1/sdram_controller1/SLICE_262 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2421 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_11 ), .M0(\all_modules1/rx_sd_adr_10 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2421 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), .F1(ADR_c_7), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ));
  all_modules1_sdram_controller1_SLICE_263 
    \all_modules1/sdram_controller1/SLICE_263 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2419 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_13 ), .M0(\all_modules1/rx_sd_adr_12 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2419 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), .F1(ADR_c_6), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ));
  all_modules1_sdram_controller1_SLICE_264 
    \all_modules1/sdram_controller1/SLICE_264 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n2411 ), 
    .D0(\all_modules1/sdram_controller1/n5055 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_adr_15 ), .M0(\all_modules1/rx_sd_adr_14 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n2411 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), .F1(ADR_c_2), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ));
  all_modules1_sdram_controller1_SLICE_265 
    \all_modules1/sdram_controller1/SLICE_265 ( 
    .D1(\all_modules1/sdram_controller1/n5055 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .D0(\all_modules1/sdram_controller1/n394 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), 
    .B0(\all_modules1/sdram_controller1/n21 ), 
    .A0(\all_modules1/sdram_controller1/n400 ), 
    .M1(\all_modules1/rx_sd_adr_3 ), .M0(\all_modules1/rx_sd_adr_23 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(ADR_c_4), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .F1(\all_modules1/sdram_controller1/n21 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ));
  all_modules1_sdram_controller1_SLICE_266 
    \all_modules1/sdram_controller1/SLICE_266 ( 
    .D1(\all_modules1/sdram_controller1/n5055 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .D0(\all_modules1/sdram_controller1/n394 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/n2216 ), 
    .M1(\all_modules1/rx_sd_data_1 ), .M0(\all_modules1/rx_sd_data_0 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), .F0(ADR_c_0), 
    .Q0(SD_DATA_TEMP_0), .F1(\all_modules1/sdram_controller1/n2216 ), 
    .Q1(SD_DATA_TEMP_1));
  SLICE_267 SLICE_267( .C1(\uart_tx1/FSM_7__N_889 ), .B1(n1850), .A1(n1848), 
    .D0(\uart_tx1/FSM_7__N_890 ), .C0(\uart_tx1/FSM_7__N_889 ), 
    .B0(\uart_tx1/n2544 ), .A0(\uart_tx1/n2184 ), 
    .M1(\all_modules1/uart_to_sdram1/n145 ), 
    .M0(\all_modules1/uart_to_sdram1/n146 ), .CE(\all_modules1/rx_stb1 ), 
    .CLK(SD_CLK_c), .F0(\uart_tx1/n2644 ), 
    .Q0(\all_modules1/uart_to_sdram1/n145 ), .F1(\uart_tx1/n2544 ), 
    .Q1(\all_modules1/uart_to_sdram1/n144 ));
  all_modules1_SLICE_268 \all_modules1/SLICE_268 ( 
    .D1(\all_modules1/sdram_controller1/n5383 ), .C1(\all_modules1/n5390 ), 
    .B1(\all_modules1/rd_i_ack_N_577 ), .A1(\all_modules1/n4060 ), 
    .C0(\all_modules1/rd_wt_operation_0 ), 
    .B0(\all_modules1/rd_wt_operation_1 ), .A0(\all_modules1/n5407 ), 
    .F0(\all_modules1/n5390 ), .F1(\all_modules1/sdram_controller1/n14 ));
  all_modules1_SLICE_269 \all_modules1/SLICE_269 ( .B1(nreset_c), 
    .A1(\all_modules1/rd_i_ack_N_577 ), 
    .D0(\all_modules1/SD_CLK_c_enable_213 ), 
    .C0(\all_modules1/rd_wt_operation_0 ), 
    .B0(\all_modules1/rd_wt_operation_1 ), .A0(\all_modules1/n5407 ), 
    .F0(\all_modules1/n1734 ), .F1(\all_modules1/SD_CLK_c_enable_213 ));
  all_modules1_uart_to_sdram1_SLICE_270 
    \all_modules1/uart_to_sdram1/SLICE_270 ( 
    .D1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_13 ), 
    .C1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_14 ), 
    .B1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_15 ), 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n26 ), 
    .D0(\all_modules1/uart_to_sdram1/n5088 ), 
    .C0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), 
    .B0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .A0(\all_modules1/rx_stb1 ), .M1(\all_modules1/rx_dat1_7 ), 
    .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_14 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_197 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_15 ));
  all_modules1_uart_to_sdram1_SLICE_271 
    \all_modules1/uart_to_sdram1/SLICE_271 ( 
    .C1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_8 ), 
    .B1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_10 ), 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4775 ), 
    .D0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_9 ), 
    .C0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_11 ), 
    .B0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_12 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n5 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n26 ), 
    .Q0(\all_modules1/rx_sd_data_0 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n5 ), 
    .Q1(\all_modules1/rx_sd_data_1 ));
  all_modules1_uart_to_sdram1_SLICE_272 
    \all_modules1/uart_to_sdram1/SLICE_272 ( 
    .D1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_1 ), 
    .C1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_2 ), 
    .B1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_4 ), 
    .A1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_3 ), 
    .D0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_5 ), 
    .C0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_6 ), 
    .B0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_7 ), 
    .A0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n10 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_55 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n4775 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_8 ), 
    .F1(\all_modules1/uart_to_sdram1/timout_tim_flag_I_0/n10 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_9 ));
  all_modules1_SLICE_273 \all_modules1/SLICE_273 ( 
    .D1(\all_modules1/sdram_to_uart1/state_1 ), 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_7 ), 
    .B1(\all_modules1/sdram_to_uart1/n5094 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_15 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .M0(\all_modules1/sdram_controller1/n390 ), 
    .LSR(\all_modules1/sdram_controller1/delay_tim_flag_N_589 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_to_uart1/n5094 ), 
    .Q0(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .F1(\all_modules1/tx_dat1_7 ));
  all_modules1_SLICE_274 \all_modules1/SLICE_274 ( 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .C0(\all_modules1/sdram_to_uart1/n6 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .M0(\all_modules1/rd_i_ack_N_577 ), 
    .LSR(\all_modules1/sdram_controller1/n5383 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_4 ), .Q0(\all_modules1/sdram_controller1/n400 ), 
    .F1(\all_modules1/sdram_to_uart1/n6 ));
  all_modules1_SLICE_275 \all_modules1/SLICE_275 ( 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ), 
    .C0(\all_modules1/sdram_to_uart1/n6_adj_1008 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .M0(\all_modules1/sdram_controller1/arb_delay_2 ), .CE(nreset_c), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_5 ), 
    .Q0(\all_modules1/wt_o_stb1 ), 
    .F1(\all_modules1/sdram_to_uart1/n6_adj_1008 ));
  all_modules1_sdram_to_uart1_SLICE_276 
    \all_modules1/sdram_to_uart1/SLICE_276 ( 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), 
    .C0(\all_modules1/sdram_to_uart1/n10 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), .F0(\all_modules1/tx_dat1_6 ), 
    .F1(\all_modules1/sdram_to_uart1/n10 ));
  all_modules1_sdram_controller1_SLICE_277 
    \all_modules1/sdram_controller1/SLICE_277 ( 
    .B1(\all_modules1/sdram_controller1/n390 ), .A1(refresh_tim_reset), 
    .D0(\all_modules1/sdram_controller1/n397 ), 
    .C0(\all_modules1/sdram_controller1/n5408 ), 
    .B0(\all_modules1/sdram_controller1/n12 ), 
    .A0(\all_modules1/sdram_controller1/n393 ), 
    .M1(\all_modules1/rx_sd_data_3 ), .M0(\all_modules1/rx_sd_data_2 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n5055 ), .Q0(SD_DATA_TEMP_2), 
    .F1(\all_modules1/sdram_controller1/n5408 ), .Q1(SD_DATA_TEMP_3));
  all_modules1_sdram_controller1_SLICE_278 
    \all_modules1/sdram_controller1/SLICE_278 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .C1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .A1(\all_modules1/sdram_controller1/n9 ), 
    .D0(\all_modules1/sdram_controller1/repeat_tim_flag ), 
    .C0(\all_modules1/sdram_controller1/n397 ), 
    .B0(\all_modules1/sdram_controller1/n399 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .M1(\all_modules1/rx_sd_adr_5 ), .M0(\all_modules1/rx_sd_adr_4 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n5382 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ));
  all_modules1_sdram_controller1_SLICE_279 
    \all_modules1/sdram_controller1/SLICE_279 ( 
    .B1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .C0(\all_modules1/sdram_controller1/n393 ), 
    .B0(\all_modules1/sdram_controller1/n5397 ), 
    .A0(\all_modules1/sdram_controller1/state_0 ), 
    .M1(\all_modules1/rx_sd_data_11 ), .M0(\all_modules1/rx_sd_data_10 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), .F0(nRAS_c), 
    .Q0(SD_DATA_TEMP_10), .F1(\all_modules1/sdram_controller1/arb_delay_0 ), 
    .Q1(SD_DATA_TEMP_11));
  all_modules1_sdram_controller1_SLICE_280 
    \all_modules1/sdram_controller1/SLICE_280 ( .D1(nWE_c), 
    .C1(\all_modules1/sdram_controller1/n394 ), 
    .B1(\all_modules1/sdram_controller1/n390 ), .A1(refresh_tim_reset), 
    .C0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .M1(\all_modules1/rx_sd_data_13 ), .M0(\all_modules1/rx_sd_data_12 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), .F0(nWE_c), 
    .Q0(SD_DATA_TEMP_12), .F1(\all_modules1/sdram_controller1/state_0 ), 
    .Q1(SD_DATA_TEMP_13));
  all_modules1_sdram_controller1_SLICE_281 
    \all_modules1/sdram_controller1/SLICE_281 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .C1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .A1(\all_modules1/sdram_controller1/n9 ), 
    .D0(\all_modules1/sdram_controller1/count_1 ), 
    .C0(\all_modules1/sdram_controller1/count_0 ), 
    .B0(\all_modules1/sdram_controller1/n390 ), 
    .A0(\all_modules1/sdram_controller1/n391 ), 
    .M1(\all_modules1/rx_sd_adr_22 ), .M0(\all_modules1/rx_sd_adr_21 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n9 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .F1(\all_modules1/sdram_controller1/delay_tim_flag_N_589 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ));
  SLICE_282 SLICE_282( .B1(refresh_tim_reset), .A1(refresh_tim_flag), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_1002 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/n14_adj_1001 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .F0(refresh_tim_flag), .F1(SD_CLK_c_enable_128));
  all_modules1_sdram_controller1_SLICE_283 
    \all_modules1/sdram_controller1/SLICE_283 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/n12_adj_1005 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/n11_adj_1004 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/n5 ), 
    .M0(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), .CE(nreset_c), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .Q0(\all_modules1/rd_wt_operation_1_N_835_1 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n5 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_284 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_284 ( 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_1006 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n12_adj_1005 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n10_adj_1006 ));
  all_modules1_sdram_controller1_initTimer_SLICE_285 
    \all_modules1/sdram_controller1/initTimer/SLICE_285 ( 
    .D1(\all_modules1/sdram_controller1/initTimer/count_8 ), 
    .C1(\all_modules1/sdram_controller1/initTimer/n10 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_11 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_10 ), 
    .D0(\all_modules1/sdram_controller1/initTimer/count_9 ), 
    .C0(\all_modules1/sdram_controller1/initTimer/n12 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/count_7 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n10 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n24 ));
  all_modules1_sdram_controller1_initTimer_SLICE_286 
    \all_modules1/sdram_controller1/initTimer/SLICE_286 ( 
    .C1(\all_modules1/sdram_controller1/initTimer/count_1 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_2 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_0 ), 
    .D0(\all_modules1/sdram_controller1/initTimer/count_3 ), 
    .C0(\all_modules1/sdram_controller1/initTimer/count_4 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_5 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n6 ), 
    .F0(\all_modules1/sdram_controller1/initTimer/n12 ), 
    .F1(\all_modules1/sdram_controller1/initTimer/n6 ));
  all_modules1_sdram_controller1_SLICE_287 
    \all_modules1/sdram_controller1/SLICE_287 ( 
    .D1(\all_modules1/sdram_controller1/initTimer/count_12 ), 
    .C1(\all_modules1/sdram_controller1/initTimer/n24 ), 
    .B1(\all_modules1/sdram_controller1/initTimer/count_13 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/count_14 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .M1(\all_modules1/rx_sd_data_9 ), .M0(\all_modules1/rx_sd_data_8 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/SD_CLK_c_enable_125 ), 
    .Q0(SD_DATA_TEMP_8), .F1(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .Q1(SD_DATA_TEMP_9));
  SLICE_288 SLICE_288( .D1(\all_modules1/fifo1/n5145 ), 
    .C1(\all_modules1/rx_dat1_1 ), .B1(\all_modules1/rx_dat1_4 ), 
    .A1(\all_modules1/rx_dat1_6 ), .C0(\all_modules1/rx_dat1_5 ), 
    .B0(\all_modules1/rx_dat1_3 ), .A0(\all_modules1/rx_dat1_7 ), 
    .M1(\uart1/DAT_1 ), .M0(\uart1/DAT_0 ), .CE(\uart1/FSM_7__N_59 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo1/n5145 ), .Q0(rx_dat_0), 
    .F1(\all_modules1/fifo1/n8 ), .Q1(rx_dat_1));
  all_modules1_SLICE_289 \all_modules1/SLICE_289 ( .D1(nreset_c), 
    .C1(\all_modules1/o_stb_rd_N_367 ), .B1(\all_modules1/rx_stb1 ), 
    .A1(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .B0(\all_modules1/fifo1/empty ), .A0(\all_modules1/fifo1/n5398 ), 
    .M0(\all_modules1/uart_to_sdram1/n144 ), .CE(\all_modules1/rx_stb1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo1/o_stb_N_212 ), 
    .Q0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), 
    .F1(\all_modules1/fifo1/n5398 ));
  SLICE_290 SLICE_290( .D1(\uart1/FSM_7__N_52 ), .C1(\uart1/FSM_7__N_53 ), 
    .B1(\uart1/n5393 ), .A1(\uart1/n5388 ), .B0(\uart1/FSM_7__N_54 ), 
    .A0(\uart1/FSM_7__N_55 ), .M1(\all_modules1/rx_dat1_7 ), 
    .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5393 ), .Q0(\all_modules1/rx_sd_data_6 ), .F1(\uart1/n5102 ), 
    .Q1(\all_modules1/rx_sd_data_7 ));
  SLICE_291 SLICE_291( .B1(\uart1/FSM_7__N_51 ), .A1(\uart1/FSM_7__N_53 ), 
    .D0(\uart1/n5393 ), .C0(\uart1/n5396 ), .B0(\uart1/n5392 ), 
    .A0(\uart1/FSM_7__N_56 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5127 ), .Q0(\all_modules1/rx_sd_data_10 ), .F1(\uart1/n5396 ), 
    .Q1(\all_modules1/rx_sd_data_11 ));
  SLICE_292 SLICE_292( .B1(\uart1/FSM_7__N_58 ), .A1(\uart1/FSM_7__N_57 ), 
    .D0(\uart1/n5389 ), .C0(\uart1/FSM_7__N_55 ), .B0(\uart1/n5392 ), 
    .A0(\uart1/FSM_7__N_56 ), .M1(\all_modules1/rx_dat1_5 ), 
    .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5109 ), .Q0(\all_modules1/rx_sd_data_12 ), .F1(\uart1/n5392 ), 
    .Q1(\all_modules1/rx_sd_data_13 ));
  SLICE_293 SLICE_293( .D1(\uart1/FSM_7__N_56 ), .C1(\uart1/FSM_7__N_58 ), 
    .B1(\uart1/n5393 ), .A1(\uart1/n5389 ), .C0(\uart1/FSM_7__N_52 ), 
    .B0(\uart1/FSM_7__N_51 ), .A0(\uart1/FSM_7__N_53 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5389 ), .Q0(\all_modules1/rx_sd_data_4 ), .F1(\uart1/n5115 ), 
    .Q1(\all_modules1/rx_sd_data_5 ));
  SLICE_294 SLICE_294( .D1(\uart1/FSM_7__N_52 ), .C1(\uart1/FSM_7__N_51 ), 
    .B1(\uart1/n5393 ), .A1(\uart1/n5388 ), .C0(\uart1/FSM_7__N_56 ), 
    .B0(\uart1/FSM_7__N_58 ), .A0(\uart1/FSM_7__N_57 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5388 ), .Q0(\all_modules1/rx_sd_data_2 ), .F1(\uart1/n5101 ), 
    .Q1(\all_modules1/rx_sd_data_3 ));
  all_modules1_uart_to_sdram1_SLICE_295 
    \all_modules1/uart_to_sdram1/SLICE_295 ( 
    .C1(\all_modules1/uart_to_sdram1/n146 ), 
    .B1(\all_modules1/o_stb_rd_N_367 ), 
    .A1(\all_modules1/uart_to_sdram1/n147 ), 
    .D0(\all_modules1/uart_to_sdram1/n147 ), 
    .C0(\all_modules1/uart_to_sdram1/n146 ), 
    .B0(\all_modules1/o_stb_rd_N_367 ), 
    .A0(\all_modules1/uart_to_sdram1/n148 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_87 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_2 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_95 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_3 ));
  all_modules1_sdram_controller1_SLICE_296 
    \all_modules1/sdram_controller1/SLICE_296 ( 
    .D1(\all_modules1/sdram_controller1/n394 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .B1(\all_modules1/sdram_controller1/n391 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/n394 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .B0(\all_modules1/sdram_controller1/n391 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .M0(\all_modules1/rx_sd_adr_8 ), .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/n1734 ), .CLK(SD_CLK_c), .F0(BA_c_0), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), .F1(BA_c_1));
  all_modules1_uart_to_sdram1_SLICE_297 
    \all_modules1/uart_to_sdram1/SLICE_297 ( 
    .B1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), 
    .A1(\all_modules1/uart_to_sdram1/n141 ), 
    .D0(\all_modules1/uart_to_sdram1/data_count_clk ), 
    .C0(\all_modules1/uart_to_sdram1/n141 ), 
    .B0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_79 ), .A0(nreset_c), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/timout_tim_flag_N_370 ), 
    .Q0(\all_modules1/uart_to_sdram1/data_array_len_4 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 ), 
    .Q1(\all_modules1/uart_to_sdram1/data_array_len_5 ));
  all_modules1_sdram_to_uart1_SLICE_298 
    \all_modules1/sdram_to_uart1/SLICE_298 ( 
    .D1(\all_modules1/sdram_to_uart1/state_0 ), 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/rd_wt_operation_1_N_835_1 ), 
    .A1(\all_modules1/wt_o_stb1 ), .B0(\all_modules1/sdram_to_uart1/state_1 ), 
    .A0(\all_modules1/sdram_to_uart1/state_0 ), 
    .F0(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_147 ), 
    .F1(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_146 ));
  all_modules1_sdram_controller1_SLICE_299 
    \all_modules1/sdram_controller1/SLICE_299 ( 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ), 
    .B1(\all_modules1/sdram_controller1/n400 ), 
    .A1(\all_modules1/sdram_controller1/n394 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .B0(\all_modules1/sdram_controller1/n400 ), 
    .A0(\all_modules1/sdram_controller1/n394 ), .M1(DB_out_7), .M0(DB_out_6), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), .CLK(SD_CLK_c), 
    .F0(ADR_c_11), .Q0(\all_modules1/tx_sd_data_6 ), .F1(ADR_c_9), 
    .Q1(\all_modules1/tx_sd_data_7 ));
  all_modules1_sdram_controller1_SLICE_300 
    \all_modules1/sdram_controller1/SLICE_300 ( 
    .B1(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .A1(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .B0(\all_modules1/sdram_controller1/wt_busy_flag ), 
    .A0(\all_modules1/sdram_controller1/rd_busy_flag ), 
    .M1(\all_modules1/rx_sd_adr_7 ), .M0(\all_modules1/rx_sd_adr_6 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), .LSR(\all_modules1/n1734 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n12_adj_1007 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), 
    .F1(SD_P_DATA_15__N_423), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ));
  all_modules1_sdram_controller1_SLICE_301 
    \all_modules1/sdram_controller1/SLICE_301 ( .D1(refresh_tim_reset), 
    .C1(\all_modules1/sdram_controller1/n397 ), 
    .B1(\all_modules1/sdram_controller1/n390 ), 
    .A1(\all_modules1/sdram_controller1/n391 ), .D0(refresh_tim_reset), 
    .C0(\all_modules1/sdram_controller1/init_done_N_558 ), 
    .B0(\all_modules1/sdram_controller1/n391 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .M1(\all_modules1/rx_sd_data_15 ), .M0(\all_modules1/rx_sd_data_14 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), .F0(nCAS_c), 
    .Q0(SD_DATA_TEMP_14), 
    .F1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .Q1(SD_DATA_TEMP_15));
  all_modules1_sdram_controller1_SLICE_302 
    \all_modules1/sdram_controller1/SLICE_302 ( 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), .M1(DB_out_11), 
    .M0(DB_out_10), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n5284 ), 
    .Q0(\all_modules1/tx_sd_data_10 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4_adj_998 ), 
    .Q1(\all_modules1/tx_sd_data_11 ));
  all_modules1_sdram_controller1_SLICE_303 
    \all_modules1/sdram_controller1/SLICE_303 ( 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), .M1(DB_out_13), 
    .M0(DB_out_12), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n5282 ), 
    .Q0(\all_modules1/tx_sd_data_12 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4_adj_999 ), 
    .Q1(\all_modules1/tx_sd_data_13 ));
  all_modules1_sdram_controller1_SLICE_304 
    \all_modules1/sdram_controller1/SLICE_304 ( 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), .M1(DB_out_1), 
    .M0(DB_out_0), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n5286 ), 
    .Q0(\all_modules1/tx_sd_data_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5405 ), 
    .Q1(\all_modules1/tx_sd_data_1 ));
  SLICE_305 SLICE_305( .D1(\uart1/FSM_7__N_56 ), .C1(\uart1/FSM_7__N_57 ), 
    .B1(\uart1/n5393 ), .A1(\uart1/n5389 ), .D0(\uart1/n5389 ), 
    .C0(\uart1/FSM_7__N_54 ), .B0(\uart1/n5392 ), .A0(\uart1/FSM_7__N_56 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_72 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n5110 ), .Q0(\all_modules1/rx_sd_data_14 ), .F1(\uart1/n5116 ), 
    .Q1(\all_modules1/rx_sd_data_15 ));
  all_modules1_SLICE_306 \all_modules1/SLICE_306 ( .B1(nreset_c), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .B0(\all_modules1/uart_to_sdram1/data_tim_reset ), .A0(nreset_c), 
    .M0(\all_modules1/rd_wt_operation_1_N_835_1 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_147 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/data_tim_flag_N_369 ), 
    .Q0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .F1(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ));
  all_modules1_sdram_to_uart1_SLICE_307 
    \all_modules1/sdram_to_uart1/SLICE_307 ( 
    .C1(\all_modules1/sdram_to_uart1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ), 
    .D0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .C0(\all_modules1/sdram_to_uart1/state_1 ), 
    .B0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), 
    .A0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .F0(\all_modules1/sdram_to_uart1/n8 ), 
    .F1(\all_modules1/sdram_to_uart1/n13 ));
  all_modules1_sdram_controller1_SLICE_308 
    \all_modules1/sdram_controller1/SLICE_308 ( 
    .B1(\all_modules1/sdram_controller1/n393 ), 
    .A1(\all_modules1/sdram_controller1/n399 ), 
    .B0(\all_modules1/sdram_controller1/n399 ), 
    .A0(\all_modules1/sdram_controller1/n397 ), .M1(DB_out_5), .M0(DB_out_4), 
    .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2188 ), 
    .Q0(\all_modules1/tx_sd_data_4 ), 
    .F1(\all_modules1/sdram_controller1/n5160 ), 
    .Q1(\all_modules1/tx_sd_data_5 ));
  all_modules1_sdram_controller1_SLICE_309 
    \all_modules1/sdram_controller1/SLICE_309 ( 
    .B1(\all_modules1/sdram_controller1/initTimer/n70 ), 
    .A1(\all_modules1/sdram_controller1/initTimer/n30 ), .D0(refresh_tim_flag), 
    .C0(\all_modules1/repeat_tim_period_13 ), 
    .B0(\all_modules1/sdram_controller1/initTimer/count_15 ), 
    .A0(\all_modules1/sdram_controller1/initTimer/n30 ), 
    .M1(\all_modules1/rx_sd_data_7 ), .M0(\all_modules1/rx_sd_data_6 ), 
    .CE(\all_modules1/SD_CLK_c_enable_213 ), 
    .LSR(\all_modules1/sdram_controller1/n1737 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n5383 ), .Q0(SD_DATA_TEMP_6), 
    .F1(\all_modules1/sdram_controller1/initTimer/SD_CLK_c_enable_110 ), 
    .Q1(SD_DATA_TEMP_7));
  all_modules1_sdram_controller1_SLICE_310 
    \all_modules1/sdram_controller1/SLICE_310 ( 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), .M1(DB_out_3), 
    .M0(DB_out_2), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n5402 ), 
    .Q0(\all_modules1/tx_sd_data_2 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4851 ), 
    .Q1(\all_modules1/tx_sd_data_3 ));
  SLICE_311 SLICE_311( .C1(\uart_tx1/FSM_7__N_891 ), .B1(n1846), .A1(n1844), 
    .D0(\uart_tx1/FSM_7__N_889 ), .C0(\uart_tx1/FSM_7__N_891 ), 
    .B0(\uart_tx1/FSM_7__N_890 ), .A0(\uart_tx1/FSM_7__N_892 ), 
    .M1(\all_modules1/uart_to_sdram1/n147 ), 
    .M0(\all_modules1/uart_to_sdram1/n148 ), .CE(\all_modules1/rx_stb1 ), 
    .CLK(SD_CLK_c), .F0(\uart_tx1/n4812 ), 
    .Q0(\all_modules1/uart_to_sdram1/n147 ), .F1(\uart_tx1/n2184 ), 
    .Q1(\all_modules1/uart_to_sdram1/n146 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_312 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_312 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_1002 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n14_adj_1001 ));
  all_modules1_sdram_controller1_SLICE_313 
    \all_modules1/sdram_controller1/SLICE_313 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_465_1 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), .M1(DB_out_15), 
    .M0(DB_out_14), .CE(\all_modules1/sdram_controller1/SD_CLK_c_enable_46 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4 ), 
    .Q0(\all_modules1/tx_sd_data_14 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_750 ), 
    .Q1(\all_modules1/tx_sd_data_15 ));
  DB_14_ \DB[14]_I ( .PADDI(DB_out_14), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_14), .DB14(DB[14]));
  DB_15_ \DB[15]_I ( .PADDI(DB_out_15), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_15), .DB15(DB[15]));
  DB_13_ \DB[13]_I ( .PADDI(DB_out_13), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_13), .DB13(DB[13]));
  DB_12_ \DB[12]_I ( .PADDI(DB_out_12), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_12), .DB12(DB[12]));
  DB_11_ \DB[11]_I ( .PADDI(DB_out_11), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_11), .DB11(DB[11]));
  DB_10_ \DB[10]_I ( .PADDI(DB_out_10), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_10), .DB10(DB[10]));
  DB_9_ \DB[9]_I ( .PADDI(DB_out_9), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_9), .DB9(DB[9]));
  DB_8_ \DB[8]_I ( .PADDI(DB_out_8), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_8), .DB8(DB[8]));
  DB_7_ \DB[7]_I ( .PADDI(DB_out_7), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_7), .DB7(DB[7]));
  DB_6_ \DB[6]_I ( .PADDI(DB_out_6), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_6), .DB6(DB[6]));
  DB_5_ \DB[5]_I ( .PADDI(DB_out_5), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_5), .DB5(DB[5]));
  DB_4_ \DB[4]_I ( .PADDI(DB_out_4), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_4), .DB4(DB[4]));
  DB_3_ \DB[3]_I ( .PADDI(DB_out_3), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_3), .DB3(DB[3]));
  DB_2_ \DB[2]_I ( .PADDI(DB_out_2), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_2), .DB2(DB[2]));
  DB_1_ \DB[1]_I ( .PADDI(DB_out_1), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_1), .DB1(DB[1]));
  DB_0_ \DB[0]_I ( .PADDI(DB_out_0), .PADDT(SD_P_DATA_15__N_423), 
    .PADDO(SD_DATA_TEMP_0), .DB0(DB[0]));
  uart_tx uart_tx_I( .PADDO(uart_tx_c), .uart_tx(uart_tx));
  ADR_12_ \ADR[12]_I ( .PADDO(GND_net), .ADR12(ADR[12]));
  ADR_11_ \ADR[11]_I ( .PADDO(ADR_c_11), .ADR11(ADR[11]));
  ADR_10_ \ADR[10]_I ( .PADDO(ADR_c_10), .ADR10(ADR[10]));
  ADR_9_ \ADR[9]_I ( .PADDO(ADR_c_9), .ADR9(ADR[9]));
  ADR_8_ \ADR[8]_I ( .PADDO(ADR_c_8), .ADR8(ADR[8]));
  ADR_7_ \ADR[7]_I ( .PADDO(ADR_c_7), .ADR7(ADR[7]));
  ADR_6_ \ADR[6]_I ( .PADDO(ADR_c_6), .ADR6(ADR[6]));
  ADR_5_ \ADR[5]_I ( .PADDO(ADR_c_5), .ADR5(ADR[5]));
  ADR_4_ \ADR[4]_I ( .PADDO(ADR_c_4), .ADR4(ADR[4]));
  ADR_3_ \ADR[3]_I ( .PADDO(ADR_c_3), .ADR3(ADR[3]));
  ADR_2_ \ADR[2]_I ( .PADDO(ADR_c_2), .ADR2(ADR[2]));
  ADR_1_ \ADR[1]_I ( .PADDO(ADR_c_1), .ADR1(ADR[1]));
  ADR_0_ \ADR[0]_I ( .PADDO(ADR_c_0), .ADR0(ADR[0]));
  BA_1_ \BA[1]_I ( .PADDO(BA_c_1), .BA1(BA[1]));
  BA_0_ \BA[0]_I ( .PADDO(BA_c_0), .BA0(BA[0]));
  DQM_1_ \DQM[1]_I ( .PADDO(DQM_c), .DQM1(DQM[1]));
  DQM_0_ \DQM[0]_I ( .PADDO(DQM_c), .DQM0(DQM[0]));
  nCAS nCAS_I( .PADDO(nCAS_c), .nCAS(nCAS));
  CKE CKE_I( .PADDO(VCC_net), .CKE(CKE));
  nRAS nRAS_I( .PADDO(nRAS_c), .nRAS(nRAS));
  nWE nWE_I( .PADDO(nWE_c), .nWE(nWE));
  nCS nCS_I( .PADDO(GND_net), .nCS(nCS));
  SD_CLK SD_CLK_I( .PADDO(SD_CLK_c), .SD_CLK(SD_CLK));
  LED_3_ \LED[3]_I ( .PADDO(LED_c_3), .LED3(LED[3]));
  LED_2_ \LED[2]_I ( .PADDO(LED_c_2), .LED2(LED[2]));
  LED_1_ \LED[1]_I ( .PADDO(LED_c_1), .LED1(LED[1]));
  LED_0_ \LED[0]_I ( .PADDO(LED_c_0), .LED0(LED[0]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  nreset nreset_I( .PADDI(nreset_c), .nreset(nreset));
  uart_rx uart_rx_I( .PADDI(uart_rx_c), .uart_rx(uart_rx));
  all_modules1_fifo2_m_RAM0 \all_modules1/fifo2/m_RAM0 ( 
    .DIA7(\all_modules1/tx_dat1_7 ), .DIA6(\all_modules1/tx_dat1_6 ), 
    .DIA5(\all_modules1/tx_dat1_5 ), .DIA4(\all_modules1/tx_dat1_4 ), 
    .DIA3(\all_modules1/tx_dat1_3 ), .DIA2(\all_modules1/tx_dat1_2 ), 
    .DIA1(\all_modules1/tx_dat1_1 ), .DIA0(\all_modules1/tx_dat1_0 ), 
    .ADA10(\all_modules1/fifo2/i_addr_7 ), 
    .ADA9(\all_modules1/fifo2/i_addr_6 ), .ADA8(\all_modules1/fifo2/i_addr_5 ), 
    .ADA7(\all_modules1/fifo2/i_addr_4 ), .ADA6(\all_modules1/fifo2/i_addr_3 ), 
    .ADA5(\all_modules1/fifo2/i_addr_2 ), .ADA4(\all_modules1/fifo2/i_addr_1 ), 
    .ADA3(\all_modules1/fifo2/i_addr_0 ), .WEA(\all_modules1/tx_ack1 ), 
    .CLKA(SD_CLK_c), .CLKB(SD_CLK_c), .OCEB(DAT_7__N_993), 
    .CEB(\all_modules1/fifo2/o_stb_N_212 ), .DOB0(n1854), .DOB1(n1852), 
    .DOB2(n1850), .DOB3(n1848), .DOB4(n1846), .DOB5(n1844), .DOB6(n1842), 
    .DOB7(n1840), .ADB3(\all_modules1/fifo2/o_addr_0 ), 
    .ADB4(\all_modules1/fifo2/o_addr_1 ), .ADB5(\all_modules1/fifo2/o_addr_2 ), 
    .ADB6(\all_modules1/fifo2/o_addr_3 ), .ADB7(\all_modules1/fifo2/o_addr_4 ), 
    .ADB8(\all_modules1/fifo2/o_addr_5 ), .ADB9(\all_modules1/fifo2/o_addr_6 ), 
    .ADB10(\all_modules1/fifo2/o_addr_7 ));
  all_modules1_fifo1_m_RAM0 \all_modules1/fifo1/m_RAM0 ( .DIA7(rx_dat_7), 
    .DIA6(rx_dat_6), .DIA5(rx_dat_5), .DIA4(rx_dat_4), .DIA3(rx_dat_3), 
    .DIA2(rx_dat_2), .DIA1(rx_dat_1), .DIA0(rx_dat_0), 
    .ADA10(\all_modules1/fifo1/i_addr_7 ), 
    .ADA9(\all_modules1/fifo1/i_addr_6 ), .ADA8(\all_modules1/fifo1/i_addr_5 ), 
    .ADA7(\all_modules1/fifo1/i_addr_4 ), .ADA6(\all_modules1/fifo1/i_addr_3 ), 
    .ADA5(\all_modules1/fifo1/i_addr_2 ), .ADA4(\all_modules1/fifo1/i_addr_1 ), 
    .ADA3(\all_modules1/fifo1/i_addr_0 ), .WEA(SD_CLK_c_enable_109), 
    .CLKA(SD_CLK_c), .CLKB(SD_CLK_c), .CEB(\all_modules1/fifo1/o_stb_N_212 ), 
    .DOB0(\all_modules1/rx_dat1_0 ), .DOB1(\all_modules1/rx_dat1_1 ), 
    .DOB2(\all_modules1/rx_dat1_2 ), .DOB3(\all_modules1/rx_dat1_3 ), 
    .DOB4(\all_modules1/rx_dat1_4 ), .DOB5(\all_modules1/rx_dat1_5 ), 
    .DOB6(\all_modules1/rx_dat1_6 ), .DOB7(\all_modules1/rx_dat1_7 ), 
    .ADB3(\all_modules1/fifo1/o_addr_0 ), .ADB4(\all_modules1/fifo1/o_addr_1 ), 
    .ADB5(\all_modules1/fifo1/o_addr_2 ), .ADB6(\all_modules1/fifo1/o_addr_3 ), 
    .ADB7(\all_modules1/fifo1/o_addr_4 ), .ADB8(\all_modules1/fifo1/o_addr_5 ), 
    .ADB9(\all_modules1/fifo1/o_addr_6 ), 
    .ADB10(\all_modules1/fifo1/o_addr_7 ));
  GSR_INST GSR_INST( .GSRNET(nreset_c));
  clk_multiply_PLLInst_0 \clk_multiply/PLLInst_0 ( .CLKI(clk_c), 
    .CLKFB(SD_CLK_c), .CLKOP(SD_CLK_c));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module all_modules1_uart_to_sdram1_SLICE_0 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i13 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i12 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_15 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h569a;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_SLICE_1 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i11 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i10 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_13 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_2 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i9 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i8 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_11 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_3 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i7 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i6 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_4 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i23 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i22 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_25 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_5 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i21 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i20 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_23 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_6 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i19 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i18 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_21 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_7 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i17 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i16 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_19 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_8 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i15 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i14 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_17 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_9 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i5 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_10 ( input D1, C1, B1, D0, C0, B0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 \all_modules1/uart_to_sdram1/add_91_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_11 ( input D1, C1, B1, D0, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i1 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_adr_i0_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20001 \all_modules1/uart_to_sdram1/add_91_3 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_SLICE_12 ( input A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 \all_modules1/uart_to_sdram1/add_91_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_SLICE_13 ( input A0, M1, M0, CE, CLK, FCI, 
    output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_17 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_14 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i14 
    ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i13 
    ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_15 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_15 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i12 
    ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i11 
    ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_13 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_16 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i10 
    ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_11 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_17 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_9 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_18 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_7 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_19 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_5 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_20 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_3 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_timout_tim_flag_I_0_SLICE_21 ( input A1, 
    DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814_add_4_1 
    ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_22 ( input A0, DI0, 
    CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20003 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_17 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_23 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_15 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_24 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_13 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_25 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_11 
    ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_26 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_9 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_27 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_7 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_28 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_5 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_29 ( input B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20006 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_17 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_SLICE_30 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_15 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_SLICE_31 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_13 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_32 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_11 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_33 ( input B1, A1, B0, A0, M1, M0, CE, 
    CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_9 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_34 ( input B1, A1, B0, A0, M1, M0, CE, 
    CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_7 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_35 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_5 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_36 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_3 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_37 ( input B1, A1, M1, M0, CE, CLK, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_to_uart1/sd_data_temp_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20008 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/sub_642_add_2_1 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_38 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20004 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_3 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_data_tim_flag_I_0_SLICE_39 ( input A1, DI1, 
    CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CE_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_NOTIN), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  ccu20005 \all_modules1/uart_to_sdram1/data_tim_flag_I_0/count_813_add_4_1 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_40 ( input A0, DI0, CE, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20010 \all_modules1/sdram_controller1/repeatTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0009 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_41 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_42 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_43 ( input A1, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20012 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_10 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_44 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_45 ( input A1, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20012 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_8 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_46 ( input A1, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20012 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_6 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_47 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_48 ( input A1, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20012 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_4 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_49 ( input A1, B0, A0, 
    output FCO );
  wire   GNDI;

  ccu20013 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_2 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_50 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_51 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/repeatTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_52 ( input A1, DI1, CE, 
    LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/repeatTimer/count__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20014 \all_modules1/sdram_controller1/repeatTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_53 ( input B0, A0, FCI, 
    output F1 );
  wire   GNDI;

  ccu20006 \all_modules1/sdram_controller1/repeatTimer/sub_643_add_2_12 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_54 ( input A0, DI0, 
    CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i23 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20010 \all_modules1/sdram_controller1/refreshTimer/add_6_25 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_55 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i22 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i21 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_23 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_56 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i20 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i19 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_21 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_57 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i18 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i17 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_19 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_58 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i16 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_17 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_59 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_60 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_61 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_62 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_63 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_64 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_65 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20011 \all_modules1/sdram_controller1/refreshTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_66 ( input A1, DI1, 
    CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0009 \all_modules1/sdram_controller1/refreshTimer/count__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20014 \all_modules1/sdram_controller1/refreshTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_67 ( input A0, M1, M0, CE, LSR, 
    CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i5 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i4 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu20003 \all_modules1/sdram_controller1/initTimer/count_815_add_4_17 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0015 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_68 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_15 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0016 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_69 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_13 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_70 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_11 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_71 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_9 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_72 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_7 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_73 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_5 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_74 ( input A1, A0, DI1, 
    DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  ccu20004 \all_modules1/sdram_controller1/initTimer/count_815_add_4_3 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_75 ( input A1, DI1, CE, 
    CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \all_modules1/sdram_controller1/initTimer/count_815_add_4_1 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_76 ( input A0, DI0, CE, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20010 \all_modules1/fifo2/add_38_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_77 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo2/add_38_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_78 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo2/add_38_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, 
    output FCO );

  ccu20017 \all_modules1/fifo2/i_addr_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_80 ( input D0, C0, B0, A0, M0, CLK, FCI, output Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \uart1/RXDb_68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20018 \all_modules1/fifo2/i_addr_1_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'hFFFF;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_fifo2_SLICE_81 ( input D1, C1, B1, A1, output FCO );
  wire   GNDI;

  ccu20019 \all_modules1/fifo2/i_addr_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, FCI, 
    output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \uart1/FSM_FSM_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20017 \all_modules1/fifo2/i_addr_1_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/FSM_FSM_i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/FSM_FSM_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20019 \all_modules1/fifo2/i_addr_1_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_84 ( input A0, DI0, CE, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \all_modules1/fifo2/o_addr_812_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_85 ( input D0, C0, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20018 \all_modules1/fifo2/i_addr_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_86 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo2/o_addr_812_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_87 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo2/o_addr_812_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_88 ( input A1, DI1, CE, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \all_modules1/fifo2/o_addr_812_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_89 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/o_addr_812__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo2/o_addr_812_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_90 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo2/add_38_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_91 ( input A1, DI1, CE, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo2/i_addr_i0_i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20014 \all_modules1/fifo2/add_38_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_92 ( input D1, C1, B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/FSM_FSM_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/FSM_FSM_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20019 \all_modules1/fifo1/i_addr_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_93 ( input A0, DI0, CE, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \all_modules1/fifo1/o_addr_811_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_94 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo1/o_addr_811_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_95 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo1/o_addr_811_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_96 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \all_modules1/fifo1/o_addr_811_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_97 ( input A1, DI1, CE, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/o_addr_811__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20005 \all_modules1/fifo1/o_addr_811_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_98 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/FSM_FSM_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/FSM_FSM_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20017 \all_modules1/fifo1/i_addr_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_99 ( input A0, DI0, CE, CLK, FCI, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20010 \all_modules1/fifo1/add_38_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_100 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo1/add_38_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_101 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo1/add_38_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_102 ( input A1, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \all_modules1/fifo1/add_38_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_103 ( input A1, DI1, CE, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0016 \all_modules1/fifo1/i_addr_i0_i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20014 \all_modules1/fifo1/add_38_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_104 ( input D1, C1, B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/DATo_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0016 \uart1/DATo_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20019 \all_modules1/fifo1/i_addr_1_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_105 ( input D0, C0, B0, A0, M1, M0, CE, CLK, FCI, output Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/DATo_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0016 \uart1/DATo_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20018 \all_modules1/fifo1/i_addr_1_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_106 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/DATo_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0016 \uart1/DATo_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20017 \all_modules1/fifo1/i_addr_1_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_107 ( input D0, C0, B0, A0, M1, M0, CE, CLK, FCI, output Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0016 \uart1/FSM_FSM_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/FSM_FSM_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20018 \all_modules1/fifo1/i_addr_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_108 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \uart1/sub_7_add_2_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_109 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \uart1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20012 \uart1/sub_7_add_2_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_110 ( input A1, A0, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \uart1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20012 \uart1/sub_7_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_111 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \uart1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart1/sub_7_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_112 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \uart1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20012 \uart1/sub_7_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_113 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \uart1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20014 \uart1/sub_7_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_114 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0020 \uart_tx1/PS_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_tx1/PS_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart_tx1/add_596_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0020 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module uart_tx1_SLICE_115 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0020 \uart_tx1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart_tx1/add_596_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_116 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_tx1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart_tx1/add_596_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_117 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \uart_tx1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart_tx1/add_596_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_118 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0020 \uart_tx1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20012 \uart_tx1/add_596_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_119 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0009 \uart_tx1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20014 \uart_tx1/add_596_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \all_modules1/sdram_to_uart1/i4105_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut4 \all_modules1/sdram_to_uart1/i4109_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/status_temp_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/status_temp_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3BB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_121 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40021 \all_modules1/sdram_to_uart1/i1_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \all_modules1/sdram_to_uart1/i1_2_lut_adj_100 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0016 \all_modules1/status_temp_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \all_modules1/status_temp_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_130 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40023 \all_modules1/uart_to_sdram1/i4038_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40024 \all_modules1/uart_to_sdram1/i4115_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i11 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_131 ( input B1, A1, D0, C0, B0, A0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40025 
    \all_modules1/sdram_controller1/arb_delay_2__N_572_I_0_2_lut_rep_53 ( 
    .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 \all_modules1/sdram_controller1/i1_4_lut_adj_96 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0027 \all_modules1/sdram_controller1/state_FSM_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0027 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module all_modules1_SLICE_132 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40028 \all_modules1/fifo1/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \all_modules1/fifo1/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/rd_wt_operation_i0_i1 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/rd_wt_operation_i0_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_134 ( input DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40030 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/init_done_146 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_143 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40031 \all_modules1/fifo1/i4112_2_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/fifo1/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_156 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40032 \all_modules1/sdram_controller1/arbBank/mux_958_i3_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_958_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_157 ( input B1, A1, C0, B0, 
    A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/SLICE_157_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/i4247/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40034 \all_modules1/sdram_controller1/arbBank/SLICE_157_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/SLICE_157_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 \all_modules1/sdram_controller1/arbBank/i4247/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/i4247/GATE_H0 )
    );
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/sdram_controller1/arbBank/SLICE_157_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/i4247/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/SLICE_157/all_modules1/sdram_controller1/arbBank/SLICE_157_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9898) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_158 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i4124/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_960_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i5 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_159 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40037 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_adj_80 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \all_modules1/sdram_controller1/arbBank/mux_960_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i6 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_160 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i4122/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_959_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_161 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40038 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_adj_76 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \all_modules1/sdram_controller1/arbBank/mux_959_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_162 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i4120/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/mux_957_i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i11 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i10 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_163 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40039 \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \all_modules1/sdram_controller1/arbBank/mux_957_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/arbBank/delay_0__i12 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_164 ( input B1, A1, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40040 \all_modules1/sdram_controller1/i4084_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 \all_modules1/sdram_controller1/i2_3_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/state_FSM_i10 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_166 ( input B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40042 i839_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 \all_modules1/sdram_controller1/delayTimer/i1166_2_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/delayTimer/count__i0 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5959) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_167 ( input B1, A1, B0, A0, DI0, 
    CE, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40025 \all_modules1/sdram_controller1/i1_2_lut_rep_59 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \all_modules1/sdram_controller1/delayTimer/i1019_2_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/delayTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_delayTimer_SLICE_168 ( input D1, C1, B1, 
    A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40045 \all_modules1/sdram_controller1/delayTimer/i1033_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \all_modules1/sdram_controller1/delayTimer/i1026_2_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/delayTimer/count__i3 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/delayTimer/count__i2 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_169 ( input DI0, CE, CLK, 
    output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40030 \all_modules1/sdram_controller1/initTimer/n5560\001/BUF1/BUF1 ( 
    .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/initTimer/count_815__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_170 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40047 \all_modules1/sdram_controller1/i1_4_lut_adj_98 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40029 \all_modules1/sdram_controller1/i1_2_lut_3_lut_adj_89 ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/state_FSM_i6 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_171 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 \all_modules1/sdram_controller1/i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40049 \all_modules1/sdram_controller1/i1262_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i11 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i12 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_172 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 \all_modules1/sdram_controller1/i1_2_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40051 \all_modules1/sdram_controller1/i1260_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_173 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40024 \all_modules1/sdram_controller1/i1256_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \all_modules1/sdram_controller1/i1258_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i5 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_174 ( input D1, C1, B1, A1, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40052 \all_modules1/sdram_controller1/i5_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40049 \all_modules1/sdram_controller1/i1254_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i3 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_176 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40025 \all_modules1/uart_to_sdram1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \all_modules1/sdram_controller1/i3_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/rd_wt_operation_i0_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_177 ( input B1, A1, C0, B0, A0, 
    DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \all_modules1/sdram_controller1/i2959_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/rd_wt_operation_i0_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_to_uart1_SLICE_187 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40054 \all_modules1/sdram_to_uart1/i2_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \all_modules1/sdram_to_uart1/state_1__I_0_39_Mux_0_i3_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/sdram_to_uart1/state_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_to_uart1_SLICE_188 ( input B1, A1, D0, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40022 \all_modules1/sdram_to_uart1/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \all_modules1/sdram_to_uart1/state_0__bdd_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/state_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF078) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_198 ( input B1, A1, D0, C0, B0, A0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40025 \all_modules1/uart_to_sdram1/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \all_modules1/uart_to_sdram1/i12_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i10 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_207 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40054 \all_modules1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \all_modules1/uart_to_sdram1/i2_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i8 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_208 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40029 \all_modules1/uart_to_sdram1/i85_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \all_modules1/uart_to_sdram1/i2_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0027 \all_modules1/uart_to_sdram1/state_FSM_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_209 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40059 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40060 \all_modules1/uart_to_sdram1/i1219_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40061 \all_modules1/fifo1/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40062 \all_modules1/uart_to_sdram1/i1217_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_213 ( input B1, A1, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40063 \all_modules1/uart_to_sdram1/i1401_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i1454_2_lut_2_lut 
    ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/count_814__i15 
    ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_215 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40064 \all_modules1/sdram_controller1/i840_2_lut_4_lut_4_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \all_modules1/sdram_controller1/reduce_or_206_i1_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/sdram_controller1/state_FSM_i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_220 ( input B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40022 \uart_tx1/DAT_7__I_55_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart_tx1/ACKi_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_221 ( input C1, B1, A1, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40066 \all_modules1/fifo2/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \all_modules1/fifo2/i1227_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0016 \all_modules1/fifo2/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3131) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_222 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \uart1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \uart1/i1_4_lut_adj_66 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/DAT_i0_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/DAT_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \uart1/i1_4_lut_adj_59 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \uart1/i1_4_lut_adj_57 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/DAT_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/DAT_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_224 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \uart1/i1_4_lut_adj_62 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \uart1/i1_4_lut_adj_60 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/DAT_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/DAT_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_225 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40023 \uart1/i1_4_lut_adj_64 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \uart1/i1_4_lut_adj_63 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/DAT_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/DAT_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \uart1/i1_3_lut_4_lut_adj_75 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40023 \uart1/i60_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0027 \uart1/FSM_FSM_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_232 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40063 \uart1/i4100_2_lut_rep_43 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \uart1/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/FSM_FSM_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_233 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40070 \uart1/i1_2_lut_3_lut_adj_73 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \uart1/i1_2_lut_3_lut_adj_74 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0009 \uart1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0020 \uart1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_234 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40070 \uart1/i1_2_lut_3_lut_adj_71 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \uart1/i1_2_lut_3_lut_adj_72 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0009 \uart1/PS_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0020 \uart1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_235 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40070 \uart1/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 \uart1/i1_2_lut_3_lut_adj_70 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0020 \uart1/PS_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_238 ( input M1, M0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40072 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i6( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \uart1/RXDa_67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \uart1/RXDc_69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_239 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40052 \uart1/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \uart1/i4097_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/SMPL_72 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_240 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40074 \uart1/i1_2_lut_rep_42_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \uart1/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart1/STBo_76 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_241 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40025 \uart_tx1/i715_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \uart_tx1/i1278_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0027 \uart_tx1/FSM_FSM_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_242 ( input C1, B1, A1, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40076 \uart_tx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \uart_tx1/i1282_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_243 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart_tx1/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 \uart_tx1/i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_244 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \uart_tx1/mux_707_i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \uart1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_245 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40073 \uart1/i4103_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 \uart1/i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_246 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_61 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_63 ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_247 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_61 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \all_modules1/sdram_controller1/refreshTimer/i4_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \uart_tx1/FSM_FSM_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40052 \uart_tx1/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \uart_tx1/i4087_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \uart_tx1/SMPL_61 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_249 ( input B1, A1, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40025 \all_modules1/sdram_to_uart1/i478_2_lut_rep_57 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 \uart_tx1/n5560\000/BUF1/BUF1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0016 \uart_tx1/DAT ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40078 \uart_tx1/i1186_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \uart_tx1/i3036_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0020 \uart_tx1/TXD_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_mux_618_i1_SLICE_251 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/SLICE_251_K1_H1 
         , 
         \all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/GATE_H0 
         ;

  lut40080 \all_modules1/sdram_controller1/mux_618_i1/SLICE_251_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/SLICE_251_K1_H1 )
    );
  lut40081 \all_modules1/sdram_controller1/mux_618_i1/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/mux_618_i1/SLICE_251_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/mux_618_i1/SLICE_251/all_modules1/sdram_controller1/mux_618_i1/SLICE_251_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i4223_SLICE_252 ( input C1, B1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/SLICE_252_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/GATE_H0 
         ;

  lut40082 \all_modules1/sdram_controller1/arbBank/i4223/SLICE_252_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/SLICE_252_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \all_modules1/sdram_controller1/arbBank/i4223/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i4223/SLICE_252_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i4223/SLICE_252/all_modules1/sdram_controller1/arbBank/i4223/SLICE_252_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i4219_SLICE_253 ( input C1, B1, 
    A1, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/GATE_H0 
         ;

  lut40082 \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \all_modules1/sdram_controller1/arbBank/i4219/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i4219/SLICE_253/all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \all_modules1/sdram_controller1/arbBank/i4219/SLICE_253_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_tx1_mux_721_i1_SLICE_254 ( input B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/SLICE_254_K1_H1 , 
         \uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/GATE_H0 ;

  lut40083 \uart_tx1/mux_721_i1/SLICE_254_K1 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), 
    .Z(\uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/SLICE_254_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \uart_tx1/mux_721_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/GATE_H0 ));
  selmux2 \uart_tx1/mux_721_i1/SLICE_254_K0K1MUX ( 
    .D0(\uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/GATE_H0 ), 
    .D1(\uart_tx1/mux_721_i1/SLICE_254/uart_tx1/mux_721_i1/SLICE_254_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_255 ( input D1, C1, B1, A1, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40085 \all_modules1/sdram_controller1/i4063_2_lut_2_lut_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \all_modules1/i2_3_lut_rep_69 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_256 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40086 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut_4_lut_adj_106 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 \all_modules1/uart_to_sdram1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5054) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_257 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3028_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i19 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i18 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_258 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3029_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40089 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_83 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i20 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_259 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40079 \all_modules1/sdram_controller1/i3026_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_260 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3032_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_84 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_261 ( input D1, C1, B1, A1, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40090 \all_modules1/sdram_controller1/i1_4_lut_adj_94 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40076 \all_modules1/sdram_controller1/i1_2_lut_rep_49_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i17 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i16 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFABB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_262 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3031_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_85 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i11 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i10 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_263 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3030_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_86 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i13 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i12 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_264 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40079 \all_modules1/sdram_controller1/i3027_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_87 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i15 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i14 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_265 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40089 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_93 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \all_modules1/sdram_controller1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i23 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_266 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40088 \all_modules1/sdram_controller1/i1_2_lut_3_lut_4_lut_adj_92 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 \all_modules1/sdram_controller1/i2994_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i1 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i0 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_267 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \uart_tx1/i1175_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 \uart_tx1/i4054_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i6 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i5 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_268 ( input D1, C1, B1, A1, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40093 \all_modules1/sdram_controller1/i2_4_lut_adj_97 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40094 \all_modules1/i1_3_lut_rep_52 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_269 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40022 \all_modules1/sdram_controller1/i2974_2_lut_rep_71 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \all_modules1/i4065_2_lut_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_270 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40096 
    \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i4071_4_lut_rep_47 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \all_modules1/uart_to_sdram1/i1_4_lut_adj_105 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_271 ( input C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40097 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i1_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i910_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_272 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i913_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 \all_modules1/uart_to_sdram1/timout_tim_flag_I_0/i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_273 ( input D1, C1, B1, A1, B0, A0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40099 \all_modules1/sdram_to_uart1/i1_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40022 \all_modules1/sdram_to_uart1/i1_2_lut_adj_99 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/state_FSM_i13 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_274 ( input C1, B1, A1, C0, B0, A0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40077 \all_modules1/sdram_to_uart1/i19_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \all_modules1/sdram_to_uart1/i1_3_lut_adj_101 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/state_FSM_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD5D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_275 ( input C1, B1, A1, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40077 \all_modules1/sdram_to_uart1/i19_3_lut_adj_103 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \all_modules1/sdram_to_uart1/i1_3_lut_adj_102 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/wt_o_stb_147 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_to_uart1_SLICE_276 ( input C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40077 \all_modules1/sdram_to_uart1/i17_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \all_modules1/sdram_to_uart1/i1_3_lut_adj_104 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_277 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40025 \all_modules1/sdram_controller1/i1_2_lut_rep_70 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \all_modules1/sdram_controller1/i6_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i3 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i2 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_278 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40102 
    \all_modules1/sdram_controller1/delayTimer/period_3__I_0_i8_4_lut_rep_48 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \all_modules1/sdram_controller1/i20_3_lut_rep_44_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_279 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40025 \all_modules1/sdram_controller1/i1_2_lut_adj_95 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40104 \all_modules1/sdram_controller1/i3_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i11 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i10 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_280 ( input D1, C1, B1, A1, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40105 \all_modules1/sdram_controller1/i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40106 \all_modules1/sdram_controller1/i4078_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i13 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i12 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_281 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40107 
    \all_modules1/sdram_controller1/delayTimer/delay_tim_flag_I_0_1_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_90 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i22 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i21 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3031) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_282 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i838_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \all_modules1/sdram_controller1/refreshTimer/i914_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_283 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40110 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut_adj_82 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/rd_o_stb_148 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_284 ( input B1, A1, 
    D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40022 \all_modules1/sdram_controller1/refreshTimer/i3_2_lut ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \all_modules1/sdram_controller1/refreshTimer/i5_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_285 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, output F0, F1 );

  lut40109 \all_modules1/sdram_controller1/initTimer/i925_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \all_modules1/sdram_controller1/initTimer/i4_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_initTimer_SLICE_286 ( input C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 \all_modules1/sdram_controller1/initTimer/i908_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \all_modules1/sdram_controller1/initTimer/i926_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_287 ( input D1, C1, B1, A1, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40039 \all_modules1/sdram_controller1/initTimer/i2_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40040 \all_modules1/sdram_controller1/initTimer/i4094_2_lut_rep_46 ( 
    .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i9 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i8 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_288 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40113 \all_modules1/fifo1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \all_modules1/fifo1/i4030_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \uart1/DATo_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0016 \uart1/DATo_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_289 ( input D1, C1, B1, A1, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40114 \all_modules1/fifo1/i1_4_lut_rep_60 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \all_modules1/fifo1/i1188_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i7 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3733) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_290 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_69 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40025 \uart1/i1_2_lut_rep_55 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_291 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \uart1/i1_2_lut_rep_58 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \uart1/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_292 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \uart1/i1_2_lut_rep_54 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_56 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_293 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_67 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \uart1/i1_2_lut_rep_51_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_294 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_68 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \uart1/i1_2_lut_rep_50_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_uart_to_sdram1_SLICE_295 ( input C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40049 \all_modules1/uart_to_sdram1/i1_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 \all_modules1/uart_to_sdram1/i1_4_lut_adj_107 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_296 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40116 \all_modules1/sdram_controller1/i3025_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 \all_modules1/sdram_controller1/i2987_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_297 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40063 \all_modules1/uart_to_sdram1/i1306_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 \all_modules1/uart_to_sdram1/i4061_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/uart_to_sdram1/data_array_len_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5557) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_to_uart1_SLICE_298 ( input D1, C1, B1, A1, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40118 \all_modules1/sdram_to_uart1/i1191_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \all_modules1/sdram_to_uart1/i4090_2_lut_rep_56 ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_299 ( input C1, B1, A1, C0, B0, A0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40119 \all_modules1/sdram_controller1/i1_2_lut_3_lut_adj_88 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 \all_modules1/sdram_controller1/i1_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_300 ( input B1, A1, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40120 \all_modules1/sdram_controller1/i4107_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \all_modules1/sdram_controller1/i23_2_lut_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_ADR_TEMP__i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_301 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40122 \all_modules1/sdram_controller1/i1_3_lut_4_lut_adj_91 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40073 \all_modules1/sdram_controller1/i4081_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i15 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i14 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_302 ( input B1, A1, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_adj_78 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \all_modules1/sdram_controller1/arbBank/delay_2[[1__bdd_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9898) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_303 ( input B1, A1, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_adj_79 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \all_modules1/sdram_controller1/arbBank/delay_3[[1__bdd_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_304 ( input B1, A1, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_67 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \all_modules1/sdram_controller1/arbBank/delay_1[[1__bdd_3_lut_4221 
    ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_65 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \uart1/i1_2_lut_3_lut_4_lut_adj_58 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/uart_to_sdram1/sd_data_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_SLICE_306 ( input B1, A1, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40022 \all_modules1/sdram_controller1/i2992_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 \all_modules1/uart_to_sdram1/RST_I_0_86_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_to_uart1/rd_wt_operation_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_to_uart1_SLICE_307 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40077 \all_modules1/sdram_to_uart1/i2715_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \all_modules1/sdram_to_uart1/i21_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F85) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_308 ( input B1, A1, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/i4113_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \all_modules1/sdram_controller1/i1242_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_309 ( input B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40120 \all_modules1/sdram_controller1/initTimer/i1376_2_lut ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \all_modules1/sdram_controller1/initTimer/i4074_3_lut_rep_45_4_lut 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i7 ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 \all_modules1/sdram_controller1/SD_DATA_TEMP__i6 ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_310 ( input B1, A1, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_adj_81 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_64 ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_311 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \uart_tx1/mux_709_i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \uart_tx1/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i4 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0016 \all_modules1/uart_to_sdram1/state_FSM_i3 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_312 ( input D1, C1, 
    B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 \all_modules1/sdram_controller1/refreshTimer/i6_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 \all_modules1/sdram_controller1/refreshTimer/i2_2_lut ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_313 ( input D1, C1, B1, A1, B0, A0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40122 
    \all_modules1/sdram_controller1/arbBank/i1_2_lut_3_lut_4_lut_adj_77 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 \all_modules1/sdram_controller1/arbBank/i1_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/RD_DATA_i0_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DB_14_ ( output PADDI, input PADDT, PADDO, inout DB14 );

  xo2iobuf DB_pad_14( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB14), .PADI(DB14));

  specify
    (PADDT => DB14) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB14) = (0:0:0,0:0:0);
    (DB14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB14, 0:0:0);
    $width (negedge DB14, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module DB_15_ ( output PADDI, input PADDT, PADDO, inout DB15 );

  xo2iobuf DB_pad_15( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB15), .PADI(DB15));

  specify
    (PADDT => DB15) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB15) = (0:0:0,0:0:0);
    (DB15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB15, 0:0:0);
    $width (negedge DB15, 0:0:0);
  endspecify

endmodule

module DB_13_ ( output PADDI, input PADDT, PADDO, inout DB13 );

  xo2iobuf DB_pad_13( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB13), .PADI(DB13));

  specify
    (PADDT => DB13) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB13) = (0:0:0,0:0:0);
    (DB13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB13, 0:0:0);
    $width (negedge DB13, 0:0:0);
  endspecify

endmodule

module DB_12_ ( output PADDI, input PADDT, PADDO, inout DB12 );

  xo2iobuf DB_pad_12( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB12), .PADI(DB12));

  specify
    (PADDT => DB12) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB12) = (0:0:0,0:0:0);
    (DB12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB12, 0:0:0);
    $width (negedge DB12, 0:0:0);
  endspecify

endmodule

module DB_11_ ( output PADDI, input PADDT, PADDO, inout DB11 );

  xo2iobuf DB_pad_11( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB11), .PADI(DB11));

  specify
    (PADDT => DB11) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB11) = (0:0:0,0:0:0);
    (DB11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB11, 0:0:0);
    $width (negedge DB11, 0:0:0);
  endspecify

endmodule

module DB_10_ ( output PADDI, input PADDT, PADDO, inout DB10 );

  xo2iobuf DB_pad_10( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB10), .PADI(DB10));

  specify
    (PADDT => DB10) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB10) = (0:0:0,0:0:0);
    (DB10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB10, 0:0:0);
    $width (negedge DB10, 0:0:0);
  endspecify

endmodule

module DB_9_ ( output PADDI, input PADDT, PADDO, inout DB9 );

  xo2iobuf DB_pad_9( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB9), .PADI(DB9));

  specify
    (PADDT => DB9) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB9) = (0:0:0,0:0:0);
    (DB9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB9, 0:0:0);
    $width (negedge DB9, 0:0:0);
  endspecify

endmodule

module DB_8_ ( output PADDI, input PADDT, PADDO, inout DB8 );

  xo2iobuf DB_pad_8( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB8), .PADI(DB8));

  specify
    (PADDT => DB8) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB8) = (0:0:0,0:0:0);
    (DB8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB8, 0:0:0);
    $width (negedge DB8, 0:0:0);
  endspecify

endmodule

module DB_7_ ( output PADDI, input PADDT, PADDO, inout DB7 );

  xo2iobuf DB_pad_7( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB7), .PADI(DB7));

  specify
    (PADDT => DB7) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB7) = (0:0:0,0:0:0);
    (DB7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB7, 0:0:0);
    $width (negedge DB7, 0:0:0);
  endspecify

endmodule

module DB_6_ ( output PADDI, input PADDT, PADDO, inout DB6 );

  xo2iobuf DB_pad_6( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB6), .PADI(DB6));

  specify
    (PADDT => DB6) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB6) = (0:0:0,0:0:0);
    (DB6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB6, 0:0:0);
    $width (negedge DB6, 0:0:0);
  endspecify

endmodule

module DB_5_ ( output PADDI, input PADDT, PADDO, inout DB5 );

  xo2iobuf DB_pad_5( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB5), .PADI(DB5));

  specify
    (PADDT => DB5) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB5) = (0:0:0,0:0:0);
    (DB5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB5, 0:0:0);
    $width (negedge DB5, 0:0:0);
  endspecify

endmodule

module DB_4_ ( output PADDI, input PADDT, PADDO, inout DB4 );

  xo2iobuf DB_pad_4( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB4), .PADI(DB4));

  specify
    (PADDT => DB4) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB4) = (0:0:0,0:0:0);
    (DB4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB4, 0:0:0);
    $width (negedge DB4, 0:0:0);
  endspecify

endmodule

module DB_3_ ( output PADDI, input PADDT, PADDO, inout DB3 );

  xo2iobuf DB_pad_3( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB3), .PADI(DB3));

  specify
    (PADDT => DB3) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB3) = (0:0:0,0:0:0);
    (DB3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB3, 0:0:0);
    $width (negedge DB3, 0:0:0);
  endspecify

endmodule

module DB_2_ ( output PADDI, input PADDT, PADDO, inout DB2 );

  xo2iobuf DB_pad_2( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB2), .PADI(DB2));

  specify
    (PADDT => DB2) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB2) = (0:0:0,0:0:0);
    (DB2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB2, 0:0:0);
    $width (negedge DB2, 0:0:0);
  endspecify

endmodule

module DB_1_ ( output PADDI, input PADDT, PADDO, inout DB1 );

  xo2iobuf DB_pad_1( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB1), .PADI(DB1));

  specify
    (PADDT => DB1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB1) = (0:0:0,0:0:0);
    (DB1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB1, 0:0:0);
    $width (negedge DB1, 0:0:0);
  endspecify

endmodule

module DB_0_ ( output PADDI, input PADDT, PADDO, inout DB0 );

  xo2iobuf DB_pad_0( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB0), .PADI(DB0));

  specify
    (PADDT => DB0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB0) = (0:0:0,0:0:0);
    (DB0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB0, 0:0:0);
    $width (negedge DB0, 0:0:0);
  endspecify

endmodule

module uart_tx ( input PADDO, output uart_tx );
  wire   GNDI;

  xo2iobuf0126 uart_tx_pad( .I(PADDO), .T(GNDI), .PAD(uart_tx));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => uart_tx) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0126 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module ADR_12_ ( input PADDO, output ADR12 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_12( .I(PADDO), .T(GNDI), .PAD(ADR12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR12) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_11_ ( input PADDO, output ADR11 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_11( .I(PADDO), .T(GNDI), .PAD(ADR11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR11) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_10_ ( input PADDO, output ADR10 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_10( .I(PADDO), .T(GNDI), .PAD(ADR10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR10) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_9_ ( input PADDO, output ADR9 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_9( .I(PADDO), .T(GNDI), .PAD(ADR9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR9) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_8_ ( input PADDO, output ADR8 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_8( .I(PADDO), .T(GNDI), .PAD(ADR8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_7_ ( input PADDO, output ADR7 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_7( .I(PADDO), .T(GNDI), .PAD(ADR7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR7) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_6_ ( input PADDO, output ADR6 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_6( .I(PADDO), .T(GNDI), .PAD(ADR6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR6) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_5_ ( input PADDO, output ADR5 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_5( .I(PADDO), .T(GNDI), .PAD(ADR5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_4_ ( input PADDO, output ADR4 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_4( .I(PADDO), .T(GNDI), .PAD(ADR4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_3_ ( input PADDO, output ADR3 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_3( .I(PADDO), .T(GNDI), .PAD(ADR3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_2_ ( input PADDO, output ADR2 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_2( .I(PADDO), .T(GNDI), .PAD(ADR2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_1_ ( input PADDO, output ADR1 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_1( .I(PADDO), .T(GNDI), .PAD(ADR1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_0_ ( input PADDO, output ADR0 );
  wire   GNDI;

  xo2iobuf0126 ADR_pad_0( .I(PADDO), .T(GNDI), .PAD(ADR0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_1_ ( input PADDO, output BA1 );
  wire   GNDI;

  xo2iobuf0126 BA_pad_1( .I(PADDO), .T(GNDI), .PAD(BA1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA1) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_0_ ( input PADDO, output BA0 );
  wire   GNDI;

  xo2iobuf0126 BA_pad_0( .I(PADDO), .T(GNDI), .PAD(BA0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_1_ ( input PADDO, output DQM1 );
  wire   GNDI;

  xo2iobuf0126 DQM_pad_1( .I(PADDO), .T(GNDI), .PAD(DQM1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_0_ ( input PADDO, output DQM0 );
  wire   GNDI;

  xo2iobuf0126 DQM_pad_0( .I(PADDO), .T(GNDI), .PAD(DQM0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM0) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCAS ( input PADDO, output nCAS );
  wire   GNDI;

  xo2iobuf0126 nCAS_pad( .I(PADDO), .T(GNDI), .PAD(nCAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module CKE ( input PADDO, output CKE );
  wire   GNDI;

  xo2iobuf0126 CKE_pad( .I(PADDO), .T(GNDI), .PAD(CKE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CKE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nRAS ( input PADDO, output nRAS );
  wire   GNDI;

  xo2iobuf0126 nRAS_pad( .I(PADDO), .T(GNDI), .PAD(nRAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nRAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module nWE ( input PADDO, output nWE );
  wire   GNDI;

  xo2iobuf0126 nWE_pad( .I(PADDO), .T(GNDI), .PAD(nWE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nWE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCS ( input PADDO, output nCS );
  wire   GNDI;

  xo2iobuf0126 nCS_pad( .I(PADDO), .T(GNDI), .PAD(nCS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCS) = (0:0:0,0:0:0);
  endspecify

endmodule

module SD_CLK ( input PADDO, output SD_CLK );
  wire   GNDI;

  xo2iobuf0126 SD_CLK_pad( .I(PADDO), .T(GNDI), .PAD(SD_CLK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => SD_CLK) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_3_ ( input PADDO, output LED3 );
  wire   GNDI;

  xo2iobuf0126 LED_pad_3( .I(PADDO), .T(GNDI), .PAD(LED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_2_ ( input PADDO, output LED2 );
  wire   GNDI;

  xo2iobuf0126 LED_pad_2( .I(PADDO), .T(GNDI), .PAD(LED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_1_ ( input PADDO, output LED1 );
  wire   GNDI;

  xo2iobuf0126 LED_pad_1( .I(PADDO), .T(GNDI), .PAD(LED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED_0_ ( input PADDO, output LED0 );
  wire   GNDI;

  xo2iobuf0126 LED_pad_0( .I(PADDO), .T(GNDI), .PAD(LED0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0127 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module xo2iobuf0127 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module nreset ( output PADDI, input nreset );

  xo2iobuf0127 nreset_pad( .Z(PADDI), .PAD(nreset));

  specify
    (nreset => PADDI) = (0:0:0,0:0:0);
    $width (posedge nreset, 0:0:0);
    $width (negedge nreset, 0:0:0);
  endspecify

endmodule

module uart_rx ( output PADDI, input uart_rx );

  xo2iobuf0127 uart_rx_pad( .Z(PADDI), .PAD(uart_rx));

  specify
    (uart_rx => PADDI) = (0:0:0,0:0:0);
    $width (posedge uart_rx, 0:0:0);
    $width (negedge uart_rx, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_m_RAM0 ( input DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, 
    DIA1, DIA0, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, WEA, CLKA, 
    CLKB, OCEB, CEB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, 
    input ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10 );
  wire   VCCI, GNDI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA10_dly, ADA9_dly, ADA8_dly, 
         ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, WEA_dly, OCEB_dly, 
         CLKB_dly, CEB_dly, ADB3_dly, ADB4_dly, ADB5_dly, ADB6_dly, ADB7_dly, 
         ADB8_dly, ADB9_dly, ADB10_dly;

  DP8KC_B \all_modules1/fifo2/m_RAM0_DP8KC ( .CEA(VCCI), .OCEA(VCCI), 
    .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), 
    .RSTA(GNDI), .CEB(CEB_dly), .OCEB(OCEB_dly), .CLKB(CLKB_dly), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(DIA0_dly), 
    .DIA1(DIA1_dly), .DIA2(DIA2_dly), .DIA3(DIA3_dly), .DIA4(DIA4_dly), 
    .DIA5(DIA5_dly), .DIA6(DIA6_dly), .DIA7(DIA7_dly), .DIA8(GNDI), 
    .ADA0(VCCI), .ADA1(GNDI), .ADA2(GNDI), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(GNDI), .ADA12(GNDI), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(VCCI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(ADB3_dly), .ADB4(ADB4_dly), 
    .ADB5(ADB5_dly), .ADB6(ADB6_dly), .ADB7(ADB7_dly), .ADB8(ADB8_dly), 
    .ADB9(ADB9_dly), .ADB10(ADB10_dly), .ADB11(GNDI), .ADB12(GNDI), .DOA0(), 
    .DOA1(), .DOA2(), .DOA3(), .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKB, OCEB, 0:0:0, 0:0:0,,,, CLKB_dly, OCEB_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKB, ADB3, 0:0:0, 0:0:0,,,, CLKB_dly, ADB3_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module DP8KC_B ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, OCEB, 
    CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, DIA5, 
    DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, ADA8, 
    ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, DIB7, 
    DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10, 
    ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, DOA8, 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b000";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "OUTREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "READBEFOREWRITE";
  defparam INST10.WRITEMODE_B = "READBEFOREWRITE";
endmodule

module all_modules1_fifo1_m_RAM0 ( input DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, 
    DIA1, DIA0, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, WEA, CLKA, 
    CLKB, CEB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, input 
    ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10 );
  wire   VCCI, GNDI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA10_dly, ADA9_dly, ADA8_dly, 
         ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, WEA_dly, CEB_dly, 
         CLKB_dly, ADB3_dly, ADB4_dly, ADB5_dly, ADB6_dly, ADB7_dly, ADB8_dly, 
         ADB9_dly, ADB10_dly;

  DP8KC0128 \all_modules1/fifo1/m_RAM0_DP8KC ( .CEA(VCCI), .OCEA(VCCI), 
    .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), 
    .RSTA(GNDI), .CEB(CEB_dly), .OCEB(VCCI), .CLKB(CLKB_dly), .WEB(GNDI), 
    .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(DIA0_dly), 
    .DIA1(DIA1_dly), .DIA2(DIA2_dly), .DIA3(DIA3_dly), .DIA4(DIA4_dly), 
    .DIA5(DIA5_dly), .DIA6(DIA6_dly), .DIA7(DIA7_dly), .DIA8(GNDI), 
    .ADA0(VCCI), .ADA1(GNDI), .ADA2(GNDI), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(GNDI), .ADA12(GNDI), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(VCCI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(ADB3_dly), .ADB4(ADB4_dly), 
    .ADB5(ADB5_dly), .ADB6(ADB6_dly), .ADB7(ADB7_dly), .ADB8(ADB8_dly), 
    .ADB9(ADB9_dly), .ADB10(ADB10_dly), .ADB11(GNDI), .ADB12(GNDI), .DOA0(), 
    .DOA1(), .DOA2(), .DOA3(), .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKB, ADB3, 0:0:0, 0:0:0,,,, CLKB_dly, ADB3_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module DP8KC0128 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b000";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "READBEFOREWRITE";
  defparam INST10.WRITEMODE_B = "READBEFOREWRITE";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule

module clk_multiply_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \clk_multiply/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 8;
  defparam INST10.CLKI_DIV = 3;
  defparam INST10.CLKOP_CPHASE = 3;
  defparam INST10.CLKOP_DIV = 4;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
