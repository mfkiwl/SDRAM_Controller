
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o sdram_uart_Implementation_vo.vo -w -neg -gui -msgset C:/lscc/sd_ram_uart/promote.xml sdram_uart_Implementation.ncd 
// Netlist created on Wed May 22 20:00:52 2019
// Netlist written on Wed May 22 20:01:16 2019
// Design is for device LCMXO2-7000HC
// Design is for package TQFP144
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module sdram_uart_top ( clk, nreset, uart_rx, uart_tx, led, DB, ADR, BA, DQM, 
                        nCAS, CKE, nRAS, nWE, nCS, SD_CLK );
  input  clk, nreset, uart_rx;
  output uart_tx, led;
  output [12:0] ADR;
  output [1:0] BA;
  output [1:0] DQM;
  output nCAS, CKE, nRAS, nWE, nCS, SD_CLK;
  inout  [15:0] DB;
  wire   \all_modules1/sdram_controller1/repeatTimer/count_4 , 
         \all_modules1/sdram_controller1/repeatTimer/count_3 , 
         \all_modules1/sdram_controller1/repeatTimer/n16 , 
         \all_modules1/sdram_controller1/repeatTimer/n17 , 
         \all_modules1/sdram_controller1/count_2_derived_14_enable_14 , 
         \all_modules1/sdram_controller1/n4889 , 
         \all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 , 
         \all_modules1/sdram_controller1/repeatTimer/n4276 , 
         \all_modules1/sdram_controller1/repeatTimer/n4277 , 
         \all_modules1/sdram_controller1/repeatTimer/count_2 , 
         \all_modules1/sdram_controller1/repeatTimer/count_1 , 
         \all_modules1/sdram_controller1/repeatTimer/n18 , 
         \all_modules1/sdram_controller1/repeatTimer/n19 , 
         \all_modules1/sdram_controller1/repeatTimer/n4275 , 
         \all_modules1/sdram_controller1/repeatTimer/count_0 , 
         \all_modules1/sdram_controller1/repeatTimer/n20 , 
         \all_modules1/sdram_controller1/count_13 , 
         \all_modules1/sdram_controller1/repeatTimer/n7 , 
         \all_modules1/sdram_controller1/repeatTimer/n4281 , 
         \all_modules1/sdram_controller1/repeatTimer/count_12 , 
         \all_modules1/sdram_controller1/repeatTimer/count_11 , 
         \all_modules1/sdram_controller1/repeatTimer/n8 , 
         \all_modules1/sdram_controller1/repeatTimer/n9 , 
         \all_modules1/sdram_controller1/repeatTimer/n4280 , 
         \all_modules1/sdram_controller1/repeatTimer/count_10 , 
         \all_modules1/sdram_controller1/repeatTimer/count_9 , 
         \all_modules1/sdram_controller1/repeatTimer/n10 , 
         \all_modules1/sdram_controller1/repeatTimer/n11 , 
         \all_modules1/sdram_controller1/repeatTimer/n4279 , 
         \all_modules1/sdram_controller1/repeatTimer/count_8 , 
         \all_modules1/sdram_controller1/repeatTimer/count_7 , 
         \all_modules1/sdram_controller1/repeatTimer/n12 , 
         \all_modules1/sdram_controller1/repeatTimer/n13 , 
         \all_modules1/sdram_controller1/repeatTimer/n4278 , 
         \all_modules1/sdram_controller1/repeatTimer/count_6 , 
         \all_modules1/sdram_controller1/repeatTimer/count_5 , 
         \all_modules1/sdram_controller1/repeatTimer/n14 , 
         \all_modules1/sdram_controller1/repeatTimer/n15 , 
         \all_modules1/sdram_controller1/refreshTimer/count_23 , 
         \all_modules1/sdram_controller1/refreshTimer/n7 , SD_CLK_c_enable_103, 
         refresh_tim_reset, SD_CLK_c, 
         \all_modules1/sdram_controller1/refreshTimer/n4274 , 
         \all_modules1/sdram_controller1/refreshTimer/count_22 , 
         \all_modules1/sdram_controller1/refreshTimer/count_21 , 
         \all_modules1/sdram_controller1/refreshTimer/n8 , 
         \all_modules1/sdram_controller1/refreshTimer/n9 , 
         \all_modules1/sdram_controller1/refreshTimer/n4273 , 
         \all_modules1/sdram_controller1/refreshTimer/count_2 , 
         \all_modules1/sdram_controller1/refreshTimer/count_1 , 
         \all_modules1/sdram_controller1/refreshTimer/n28 , 
         \all_modules1/sdram_controller1/refreshTimer/n29 , 
         \all_modules1/sdram_controller1/refreshTimer/n4263 , 
         \all_modules1/sdram_controller1/refreshTimer/n4264 , 
         \all_modules1/sdram_controller1/refreshTimer/count_20 , 
         \all_modules1/sdram_controller1/refreshTimer/count_19 , 
         \all_modules1/sdram_controller1/refreshTimer/n10 , 
         \all_modules1/sdram_controller1/refreshTimer/n11 , 
         \all_modules1/sdram_controller1/refreshTimer/n4272 , 
         \all_modules1/sdram_controller1/refreshTimer/count_0 , 
         \all_modules1/sdram_controller1/refreshTimer/n30 , 
         \all_modules1/sdram_controller1/refreshTimer/count_18 , 
         \all_modules1/sdram_controller1/refreshTimer/count_17 , 
         \all_modules1/sdram_controller1/refreshTimer/n12 , 
         \all_modules1/sdram_controller1/refreshTimer/n13 , 
         \all_modules1/sdram_controller1/refreshTimer/n4271 , 
         \all_modules1/sdram_controller1/refreshTimer/count_16 , 
         \all_modules1/sdram_controller1/refreshTimer/count_15 , 
         \all_modules1/sdram_controller1/refreshTimer/n14 , 
         \all_modules1/sdram_controller1/refreshTimer/n15 , 
         \all_modules1/sdram_controller1/refreshTimer/n4270 , 
         \all_modules1/sdram_controller1/refreshTimer/count_14 , 
         \all_modules1/sdram_controller1/refreshTimer/count_13 , 
         \all_modules1/sdram_controller1/refreshTimer/n16 , 
         \all_modules1/sdram_controller1/refreshTimer/n17 , 
         \all_modules1/sdram_controller1/refreshTimer/n4269 , 
         \all_modules1/sdram_controller1/refreshTimer/count_12 , 
         \all_modules1/sdram_controller1/refreshTimer/count_11 , 
         \all_modules1/sdram_controller1/refreshTimer/n18 , 
         \all_modules1/sdram_controller1/refreshTimer/n19 , 
         \all_modules1/sdram_controller1/refreshTimer/n4268 , 
         \all_modules1/sdram_controller1/refreshTimer/count_10 , 
         \all_modules1/sdram_controller1/refreshTimer/count_9 , 
         \all_modules1/sdram_controller1/refreshTimer/n20 , 
         \all_modules1/sdram_controller1/refreshTimer/n21 , 
         \all_modules1/sdram_controller1/refreshTimer/n4267 , 
         \all_modules1/sdram_controller1/refreshTimer/count_8 , 
         \all_modules1/sdram_controller1/refreshTimer/count_7 , 
         \all_modules1/sdram_controller1/refreshTimer/n22 , 
         \all_modules1/sdram_controller1/refreshTimer/n23 , 
         \all_modules1/sdram_controller1/refreshTimer/n4266 , 
         \all_modules1/sdram_controller1/refreshTimer/count_6 , 
         \all_modules1/sdram_controller1/refreshTimer/count_5 , 
         \all_modules1/sdram_controller1/refreshTimer/n24 , 
         \all_modules1/sdram_controller1/refreshTimer/n25 , 
         \all_modules1/sdram_controller1/refreshTimer/n4265 , 
         \all_modules1/sdram_controller1/refreshTimer/count_4 , 
         \all_modules1/sdram_controller1/refreshTimer/count_3 , 
         \all_modules1/sdram_controller1/refreshTimer/n26 , 
         \all_modules1/sdram_controller1/refreshTimer/n27 , count_2, count_1, 
         count_63_N_1_2, count_63_N_1_1, clk_c, n4226, n4227, count_10, 
         count_9, count_63_N_1_10, count_63_N_1_9, n4230, n4231, count_8, 
         count_7, count_63_N_1_8, count_63_N_1_7, n4229, count_24, count_23, 
         count_63_N_1_24, count_63_N_1_23, n4237, count_22, count_21, 
         count_63_N_1_22, count_63_N_1_21, n4236, count_20, count_19, 
         count_63_N_1_20, count_63_N_1_19, n4235, count_6, count_5, 
         count_63_N_1_6, count_63_N_1_5, n4228, count_18, count_17, 
         count_63_N_1_18, count_63_N_1_17, n4234, count_16, count_15, 
         count_63_N_1_16, count_63_N_1_15, n4233, count_4, count_3, 
         count_63_N_1_4, count_63_N_1_3, count_14, count_13, count_63_N_1_14, 
         count_63_N_1_13, n4232, count_12, count_11, count_63_N_1_12, 
         count_63_N_1_11, count_0, count_63_N_1_0, \uart1/PS_8 , \uart1/PS_7 , 
         \uart1/n10 , \uart1/n2091 , \uart1/n4261 , \uart1/n11 , \uart1/PS_6 , 
         \uart1/PS_5 , \uart1/n13 , \uart1/n4260 , \uart1/n12 , \uart1/PS_4 , 
         \uart1/PS_3 , \uart1/n14 , \uart1/n15 , \uart1/n4259 , \uart1/PS_2 , 
         \uart1/PS_1 , \uart1/n16 , \uart1/n4258 , \uart1/n17 , \uart1/PS_0 , 
         \uart1/n18 , \uart_tx1/PS_9 , \uart_tx1/PS_9_N_793_9 , 
         \uart_tx1/PS_9__N_804 , \uart_tx1/n4286 , \uart_tx1/PS_8 , 
         \uart_tx1/PS_7 , \uart_tx1/PS_9_N_793_8 , \uart_tx1/PS_9_N_793_7 , 
         \uart_tx1/n4285 , \uart_tx1/PS_6 , \uart_tx1/PS_5 , 
         \uart_tx1/PS_9_N_793_6 , \uart_tx1/PS_9_N_793_5 , \uart_tx1/n4284 , 
         \uart_tx1/PS_4 , \uart_tx1/PS_3 , \uart_tx1/PS_9_N_793_4 , 
         \uart_tx1/PS_9_N_793_3 , \uart_tx1/n4283 , \uart_tx1/PS_2 , 
         \uart_tx1/PS_1 , \uart_tx1/PS_9_N_793_2 , \uart_tx1/PS_9_N_793_1 , 
         \uart_tx1/n4282 , \uart_tx1/PS_0 , \uart_tx1/PS_9_N_793_0 , 
         \all_modules1/tx_dat1_3 , \all_modules1/tx_dat1_2 , 
         \all_modules1/tx_dat1_1 , \all_modules1/tx_dat1_0 , 
         \all_modules1/fifo2/i_addr_3 , \all_modules1/fifo2/i_addr_2 , 
         \all_modules1/fifo2/i_addr_1 , \all_modules1/fifo2/i_addr_0 , 
         \all_modules1/fifo2/m_RAM1/WAD0_INT , 
         \all_modules1/fifo2/m_RAM1/WAD1_INT , 
         \all_modules1/fifo2/m_RAM1/WAD2_INT , 
         \all_modules1/fifo2/m_RAM1/WAD3_INT , 
         \all_modules1/fifo2/m_RAM1/WD0_INT , 
         \all_modules1/fifo2/m_RAM1/WD1_INT , 
         \all_modules1/fifo2/m_RAM1/WD2_INT , 
         \all_modules1/fifo2/m_RAM1/WD3_INT , \all_modules1/fifo2/o_addr_3 , 
         \all_modules1/fifo2/o_addr_2 , \all_modules1/fifo2/o_addr_1 , 
         \all_modules1/fifo2/o_addr_0 , \all_modules1/fifo2/o_data_7_N_247_1 , 
         \all_modules1/fifo2/o_data_7_N_247_0 , \all_modules1/tx_ack1 , 
         \all_modules1/fifo2/SD_CLK_c_enable_63 , tx_dat_0, tx_dat_1, 
         \all_modules1/fifo2/o_data_7_N_247_3 , 
         \all_modules1/fifo2/o_data_7_N_247_2 , tx_dat_2, tx_dat_3, 
         \all_modules1/tx_dat1_7 , \all_modules1/tx_dat1_6 , 
         \all_modules1/tx_dat1_5 , \all_modules1/tx_dat1_4 , 
         \all_modules1/fifo2/m_RAM0/WAD0_INT , 
         \all_modules1/fifo2/m_RAM0/WAD1_INT , 
         \all_modules1/fifo2/m_RAM0/WAD2_INT , 
         \all_modules1/fifo2/m_RAM0/WAD3_INT , 
         \all_modules1/fifo2/m_RAM0/WD0_INT , 
         \all_modules1/fifo2/m_RAM0/WD1_INT , 
         \all_modules1/fifo2/m_RAM0/WD2_INT , 
         \all_modules1/fifo2/m_RAM0/WD3_INT , 
         \all_modules1/fifo2/o_data_7_N_247_5 , 
         \all_modules1/fifo2/o_data_7_N_247_4 , tx_dat_4, tx_dat_5, 
         \all_modules1/fifo2/o_data_7_N_247_7 , 
         \all_modules1/fifo2/o_data_7_N_247_6 , tx_dat_6, tx_dat_7, rx_dat_3, 
         rx_dat_2, rx_dat_1, rx_dat_0, \all_modules1/fifo1/i_addr_3 , 
         \all_modules1/fifo1/i_addr_2 , \all_modules1/fifo1/i_addr_1 , 
         i_addr_0, \all_modules1/fifo1/m_RAM1/WAD0_INT , 
         \all_modules1/fifo1/m_RAM1/WAD1_INT , 
         \all_modules1/fifo1/m_RAM1/WAD2_INT , 
         \all_modules1/fifo1/m_RAM1/WAD3_INT , 
         \all_modules1/fifo1/m_RAM1/WD0_INT , 
         \all_modules1/fifo1/m_RAM1/WD1_INT , 
         \all_modules1/fifo1/m_RAM1/WD2_INT , 
         \all_modules1/fifo1/m_RAM1/WD3_INT , o_addr_3, 
         \all_modules1/fifo1/o_addr_2 , \all_modules1/fifo1/o_addr_1 , 
         o_addr_0, \all_modules1/fifo1/o_data_7_N_247_1 , 
         \all_modules1/fifo1/o_data_7_N_247_0 , rx_ack, 
         \all_modules1/fifo1/SD_CLK_c_enable_106 , \all_modules1/rx_dat1_0 , 
         \all_modules1/rx_dat1_1 , \all_modules1/fifo1/o_data_7_N_247_3 , 
         \all_modules1/fifo1/o_data_7_N_247_2 , \all_modules1/rx_dat1_2 , 
         \all_modules1/rx_dat1_3 , rx_dat_7, rx_dat_6, rx_dat_5, rx_dat_4, 
         \all_modules1/fifo1/m_RAM0/WAD0_INT , 
         \all_modules1/fifo1/m_RAM0/WAD1_INT , 
         \all_modules1/fifo1/m_RAM0/WAD2_INT , 
         \all_modules1/fifo1/m_RAM0/WAD3_INT , 
         \all_modules1/fifo1/m_RAM0/WD0_INT , 
         \all_modules1/fifo1/m_RAM0/WD1_INT , 
         \all_modules1/fifo1/m_RAM0/WD2_INT , 
         \all_modules1/fifo1/m_RAM0/WD3_INT , 
         \all_modules1/fifo1/o_data_7_N_247_5 , 
         \all_modules1/fifo1/o_data_7_N_247_4 , \all_modules1/rx_dat1_4 , 
         \all_modules1/rx_dat1_5 , \all_modules1/fifo1/o_data_7_N_247_7 , 
         \all_modules1/fifo1/o_data_7_N_247_6 , \all_modules1/rx_dat1_6 , 
         \all_modules1/rx_dat1_7 , \all_modules1/fifo1/i_addr_1_2 , 
         \all_modules1/fifo1/n4919 , i_addr_1_3, \uart1/n6 , 
         \all_modules1/fifo1/n23 , \all_modules1/fifo1/n24 , 
         \all_modules1/fifo2/n8 , \all_modules1/fifo2/i_addr_1_2 , 
         \all_modules1/fifo2/i_addr_1_1 , \all_modules1/fifo2/i_addr_1_3 , 
         \all_modules1/fifo2/n4355 , \all_modules1/fifo2/n6_adj_925 , 
         \all_modules1/fifo2/n5_adj_924 , tx_ack, tx_stb, 
         \all_modules1/fifo2/n36 , \all_modules1/fifo2/n23 , 
         \all_modules1/fifo2/n24 , \all_modules1/fifo2/n22 , 
         \all_modules1/fifo2/n5 , \all_modules1/sdram_controller1/n4887 , 
         \all_modules1/sdram_controller1/n4890 , 
         \all_modules1/sdram_controller1/n8 , 
         \all_modules1/sdram_controller1/n326 , 
         \all_modules1/sdram_controller1/n4401 , 
         \all_modules1/sdram_controller1/n4920 , \all_modules1/n5045 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 , 
         \all_modules1/fifo2/n6 , nreset_c, \all_modules1/o_stb_N_762 , 
         \all_modules1/state_1 , \all_modules1/n4907 , 
         \all_modules1/sdram_to_uart1/next_state_0 , 
         \all_modules1/uart_to_sdram1/rd_wt_operation_1 , 
         \all_modules1/state_0 , \all_modules1/uart_to_sdram1/state_1 , 
         \all_modules1/state_2 , \all_modules1/o_stb_rd_N_349 , 
         \all_modules1/n3588 , \all_modules1/n4900 , 
         \all_modules1/sdram_controller1/n4314 , \all_modules1/rd_busy , 
         \all_modules1/fifo1/empty_N_260 , \all_modules1/fifo1/n4897 , 
         \all_modules1/fifo1/n6 , \all_modules1/rx_stb1 , 
         \all_modules1/sdram_controller1/arb_delay_2_N_410_1 , 
         \all_modules1/sdram_controller1/arbBank/n5031 , 
         \all_modules1/sdram_controller1/arb_delay_2 , 
         \all_modules1/sdram_controller1/delay_3__2__N_674 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_1 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_0_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_677 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_680 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_22 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_23 , 
         \all_modules1/sdram_controller1/arbBank/n4915 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_670 , 
         \all_modules1/rd_wt_operation_1_N_759_1 , 
         \all_modules1/sdram_controller1/delay_3__2__N_661 , 
         \all_modules1/sdram_controller1/arbBank/n5034 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_1_1 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_664 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_667 , 
         \all_modules1/sdram_controller1/arbBank/n4911 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_657 , 
         \all_modules1/sdram_controller1/wt_o_stb1 , 
         \all_modules1/sdram_controller1/arbBank/n5037 , 
         \all_modules1/sdram_controller1/delay_3__2__N_648 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_2 , 
         \all_modules1/sdram_controller1/arbBank/delay_2_1 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_651 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_654 , 
         \all_modules1/sdram_controller1/arbBank/n4916 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_644 , uart_rx_c, 
         \uart1/RXDa , \all_modules1/sdram_controller1/arbBank/n4 , 
         \all_modules1/sdram_controller1/n4902 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_2 , 
         \all_modules1/sdram_controller1/arbBank/n4909 , 
         \all_modules1/sdram_controller1/arbBank/n4910 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_0 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_630 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 , 
         \all_modules1/sdram_controller1/arbBank/delay_3_1 , 
         \all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 , 
         \all_modules1/wt_busy , 
         \all_modules1/sdram_controller1/next_state_3__N_502 , 
         \all_modules1/sdram_controller1/n322 , n4906, delay_tim_reset, 
         \all_modules1/sdram_controller1/count_0 , 
         \all_modules1/sdram_controller1/delayTimer/n11 , SD_CLK_c_enable_66, 
         \all_modules1/sdram_controller1/count_1 , 
         \all_modules1/sdram_controller1/delayTimer/n9 , 
         \all_modules1/sdram_controller1/delayTimer/count_3 , 
         \all_modules1/sdram_controller1/delayTimer/count_2 , 
         \all_modules1/sdram_controller1/delayTimer/n7 , 
         \all_modules1/sdram_controller1/delayTimer/n8 , 
         \all_modules1/sdram_controller1/n319 , 
         \all_modules1/sdram_controller1/n320 , 
         \all_modules1/sdram_controller1/n4588 , 
         \all_modules1/sdram_controller1/n2127 , refresh_tim_flag, 
         \all_modules1/sdram_controller1/n4894 , 
         \all_modules1/sdram_controller1/n12 , 
         \all_modules1/sdram_controller1/n323 , 
         \all_modules1/sdram_controller1/n4608 , 
         \all_modules1/sdram_controller1/n2053 , 
         \all_modules1/sdram_controller1/n328 , 
         \all_modules1/sdram_controller1/n329 , 
         \all_modules1/sdram_controller1/n2094 , 
         \all_modules1/sdram_controller1/n4405 , 
         \all_modules1/sdram_controller1/refreshTimer/n9_adj_927 , 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_929 , 
         \all_modules1/sdram_controller1/refreshTimer/n14_adj_928 , 
         \all_modules1/sdram_to_uart1/n2360 , \all_modules1/uart_to_sdram1/n8 , 
         \all_modules1/n3272 , \all_modules1/uart_to_sdram1/n4697 , 
         \all_modules1/uart_to_sdram1/n1074 , 
         \all_modules1/uart_to_sdram1/next_state_0 , 
         \all_modules1/uart_to_sdram1/n4471 , 
         \all_modules1/uart_to_sdram1/next_state_1 , 
         \all_modules1/uart_to_sdram1/n4925 , 
         \all_modules1/uart_to_sdram1/next_state_2 , 
         \all_modules1/fifo1/n4598 , \all_modules1/rd_wt_operation_1_N_307_1 , 
         \all_modules1/rd_wt_operation_1_N_307_0 , 
         \all_modules1/uart_to_sdram1/i_ack_N_343 , 
         \all_modules1/uart_to_sdram1/rd_wt_operation_0 , \all_modules1/n45 , 
         n4708, \all_modules1/fifo1/n6_adj_923 , \all_modules1/fifo1/n2 , 
         \all_modules1/fifo1/n36 , \all_modules1/fifo1/n22 , 
         \all_modules1/sdram_controller1/n348 , \uart_tx1/FSM_7__N_805 , 
         \uart_tx1/DAT_7__N_915 , \all_modules1/fifo2/n2831 , \uart1/n4629 , 
         \uart1/RXDc , \uart1/DAT_1 , \uart1/FSM_7__N_113 , 
         \uart1/FSM_7__N_112 , \uart1/n4633 , \uart1/DAT_0 , \uart1/n2765 , 
         \uart1/n2771 , \uart1/SD_CLK_c_enable_73 , \uart1/n4635 , 
         \uart1/DAT_3 , \uart1/FSM_7__N_115 , \uart1/FSM_7__N_114 , 
         \uart1/n4630 , \uart1/DAT_2 , \uart1/n2753 , \uart1/n2759 , 
         \uart1/FSM_7__N_117 , \uart1/n4623 , \uart1/DAT_5 , 
         \uart1/FSM_7__N_116 , \uart1/DAT_4 , \uart1/n4616 , \uart1/n2768 , 
         \uart1/n2774 , \uart1/FSM_7__N_119 , \uart1/n4624 , \uart1/DAT_7 , 
         \uart1/DAT_6 , \uart1/n4611 , \uart1/FSM_7__N_118 , \uart1/n2756 , 
         \uart1/n2762 , \uart1/FSM_7__N_111 , \uart1/SMPL , 
         \uart1/FSM_7__N_110 , \uart1/FSM_7__N_121 , \uart1/n2148 , 
         \uart1/n2146 , \uart1/FSM_7__N_120 , \uart1/n3102 , 
         \uart1/PS_8_N_100_6 , \uart1/PS_8_N_100_1 , \uart1/PS_8__N_109 , 
         \uart1/PS_8_N_100_7 , \uart1/RXDb , \uart1/n15_adj_921 , 
         \uart1/n14_adj_922 , \uart1/n4888 , \uart1/rx_stb , 
         \uart1/STBo_N_222 , \uart_tx1/SMPL , \uart_tx1/FSM_7__N_817 , 
         \uart_tx1/n2186 , \uart_tx1/FSM_7__N_806 , \uart_tx1/FSM_7__N_807 , 
         \uart_tx1/n2188 , \uart_tx1/n4328 , \uart_tx1/FSM_7__N_810 , 
         \uart_tx1/FSM_7__N_809 , GND_net, \uart_tx1/FSM_7__N_811 , 
         \uart_tx1/FSM_7__N_812 , \uart_tx1/n16 , VCC_net, 
         \uart_tx1/FSM_7__N_813 , \uart_tx1/FSM_7__N_815 , 
         \uart_tx1/FSM_7__N_816 , \uart_tx1/DAT_6 , \uart_tx1/DAT_7 , 
         \uart_tx1/FSM_7__N_814 , led_c, \uart_tx1/n20 , 
         \all_modules1/sdram_controller1/refreshTimer/n11_adj_930 , 
         \uart_tx1/n17_adj_920 , \uart_tx1/n4865 , \uart_tx1/FSM_7__N_808 , 
         \uart_tx1/n4866 , uart_tx_c, 
         \all_modules1/uart_to_sdram1/i_ack_N_345 , 
         \all_modules1/sdram_controller1/n2079 , 
         \all_modules1/sdram_controller1/n4687 , 
         \all_modules1/sdram_controller1/arbBank/n4996 , 
         \all_modules1/sdram_controller1/arbBank/n4993 , \uart_tx1/n1392 , 
         \uart_tx1/DAT_0 , \uart_tx1/DAT_3 , \uart_tx1/n4863 , 
         \uart_tx1/n4684 , \uart_tx1/DAT_5 , \uart_tx1/DAT_4 , \uart_tx1/n17 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 , 
         \all_modules1/rx_sd_adr_18 , \all_modules1/rx_sd_adr_19 , 
         \all_modules1/n8 , \all_modules1/sdram_to_uart1/SD_CLK_c_enable_53 , 
         \all_modules1/sdram_to_uart1/rd_wt_operation_1 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_12 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_4 , 
         \all_modules1/sdram_to_uart1/n6 , 
         \all_modules1/sdram_controller1/delay_tim_flag_N_513 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_5 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_13 , 
         \all_modules1/sdram_to_uart1/n15 , 
         \all_modules1/uart_to_sdram1/i_ack_N_348 , 
         \all_modules1/rx_sd_data_2 , \all_modules1/rx_sd_data_3 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_6 , 
         \all_modules1/sdram_to_uart1/n4594 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_14 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 , 
         \all_modules1/rx_sd_data_12 , \all_modules1/rx_sd_data_13 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_7 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_15 , 
         \all_modules1/sdram_to_uart1/n10 , \all_modules1/rx_sd_data_10 , 
         \all_modules1/rx_sd_data_11 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_11 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_3 , 
         \all_modules1/sdram_to_uart1/n10_adj_938 , 
         \all_modules1/rx_sd_data_0 , \all_modules1/rx_sd_data_1 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_0 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_8 , 
         \all_modules1/sdram_to_uart1/n14 , \all_modules1/rx_sd_data_4 , 
         \all_modules1/rx_sd_data_5 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_17 , 
         \all_modules1/sdram_controller1/n4 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_8 , 
         \all_modules1/sdram_controller1/n10 , DB_out_7, DB_out_6, 
         \all_modules1/tx_sd_data_6 , ADR_c_8, \all_modules1/tx_sd_data_7 , 
         \all_modules1/sdram_controller1/n9 , 
         \all_modules1/sdram_controller1/delay_tim_period_3 , 
         \all_modules1/rx_sd_adr_5 , \all_modules1/rx_sd_adr_4 , 
         \all_modules1/sdram_controller1/n1513 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_4 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_5 , 
         \all_modules1/sdram_controller1/n4914 , 
         \all_modules1/sdram_controller1/state_0 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_18 , nRAS_c, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_19 , 
         \all_modules1/rx_sd_adr_20 , \all_modules1/rx_sd_adr_2 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_2 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_20 , 
         \all_modules1/sdram_controller1/n24 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_13 , DB_out_9, DB_out_8, 
         \all_modules1/tx_sd_data_8 , ADR_c_4, \all_modules1/tx_sd_data_9 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_11 , 
         \all_modules1/sdram_controller1/n4_adj_933 , 
         \all_modules1/rx_sd_adr_1 , \all_modules1/rx_sd_adr_0 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_0 , ADR_c_2, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_1 , 
         \all_modules1/sdram_controller1/n2736 , \all_modules1/n1516 , 
         SD_DATA_TEMP_2, SD_DATA_TEMP_3, 
         \all_modules1/sdram_controller1/n4893 , \all_modules1/rx_sd_adr_22 , 
         \all_modules1/rx_sd_adr_21 , ADR_c_10, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_21 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_12 , 
         \all_modules1/sdram_controller1/n4_adj_934 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_3 , 
         \all_modules1/rx_sd_adr_11 , \all_modules1/rx_sd_adr_10 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_10 , ADR_c_3, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_6 , 
         \all_modules1/rx_sd_data_7 , \all_modules1/rx_sd_data_6 , 
         SD_DATA_TEMP_6, \all_modules1/sdram_controller1/n23 , SD_DATA_TEMP_7, 
         \all_modules1/sdram_controller1/n4_adj_935 , 
         \all_modules1/rx_sd_adr_13 , \all_modules1/rx_sd_adr_12 , ADR_c_1, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_9 , 
         \all_modules1/sdram_controller1/n25 , \all_modules1/rx_sd_adr_15 , 
         \all_modules1/rx_sd_adr_14 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_14 , ADR_c_0, 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_15 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_7 , 
         \all_modules1/sdram_controller1/n4_adj_936 , 
         \all_modules1/sdram_controller1/SD_ADR_TEMP_16 , 
         \all_modules1/rx_sd_adr_3 , \all_modules1/rx_sd_adr_23 , ADR_c_7, 
         \all_modules1/sdram_controller1/n22 , \all_modules1/rx_sd_adr_17 , 
         \all_modules1/rx_sd_adr_16 , ADR_c_5, 
         \all_modules1/sdram_controller1/refreshTimer/n12_adj_931 , 
         \all_modules1/sdram_controller1/refreshTimer/n5 , 
         \all_modules1/rx_sd_data_9 , \all_modules1/rx_sd_data_8 , 
         SD_DATA_TEMP_8, SD_DATA_TEMP_9, 
         \all_modules1/sdram_controller1/refreshTimer/n10_adj_932 , 
         \all_modules1/rx_sd_adr_8 , \all_modules1/rx_sd_adr_9 , 
         \all_modules1/fifo2/n4903 , 
         \all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 , n4356, n4710, 
         \all_modules1/fifo1/n4668 , \uart1/n4895 , 
         \all_modules1/tx_sd_data_3 , \all_modules1/tx_sd_data_2 , 
         \all_modules1/SD_CLK_c_enable_52 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_2 , \uart1/n4896 , 
         \all_modules1/tx_sd_data_5 , \all_modules1/tx_sd_data_4 , 
         \uart1/n4905 , \uart1/n4921 , \uart1/n4922 , \uart1/n4904 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_9 , 
         \all_modules1/tx_sd_data_1 , \all_modules1/tx_sd_data_0 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_1 , 
         \all_modules1/tx_sd_data_11 , \all_modules1/tx_sd_data_10 , 
         \all_modules1/sdram_to_uart1/sd_data_temp_10 , 
         \all_modules1/tx_sd_data_13 , \all_modules1/tx_sd_data_12 , 
         \all_modules1/tx_sd_data_15 , \all_modules1/tx_sd_data_14 , BA_c_0, 
         SD_DATA_TEMP_0, BA_c_1, SD_DATA_TEMP_1, \all_modules1/rx_sd_data_15 , 
         \all_modules1/rx_sd_data_14 , SD_DATA_TEMP_14, SD_DATA_TEMP_15, 
         nCAS_c, SD_DATA_TEMP_4, SD_DATA_TEMP_5, ADR_c_12, SD_DATA_TEMP_12, 
         ADR_c_6, SD_DATA_TEMP_13, ADR_c_11, SD_DATA_TEMP_10, ADR_c_9, 
         SD_DATA_TEMP_11, \all_modules1/rx_sd_adr_7 , 
         \all_modules1/rx_sd_adr_6 , delay_tim_reset_N_508, DB_out_11, 
         DB_out_10, DB_out_13, DB_out_12, DB_out_15, DB_out_14, DB_out_5, 
         DB_out_4, DB_out_1, DB_out_0, \uart_tx1/DAT_1 , \uart_tx1/DAT_2 , 
         DB_out_3, DB_out_2, n4908;

  all_modules1_sdram_controller1_repeatTimer_SLICE_0 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_0 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4276 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4277 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_1 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_1 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4275 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4276 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_2 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_2 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4275 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_3 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_3 ( 
    .A0(\all_modules1/sdram_controller1/count_13 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4281 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/count_13 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_4 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_4 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4280 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4281 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_5 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_5 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4279 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n10 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4280 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_6 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_6 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4278 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4279 ));
  all_modules1_sdram_controller1_repeatTimer_SLICE_7 
    \all_modules1/sdram_controller1/repeatTimer/SLICE_7 ( 
    .A1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .CE(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ), 
    .LSR(\all_modules1/sdram_controller1/n4889 ), 
    .CLK(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .FCI(\all_modules1/sdram_controller1/repeatTimer/n4277 ), 
    .F0(\all_modules1/sdram_controller1/repeatTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/repeatTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/repeatTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/repeatTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/repeatTimer/n4278 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_8 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_8 ( 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4274 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n7 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_23 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_9 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_9 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4273 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n8 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4274 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_10 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_10 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4263 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n29 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_1 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n28 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_2 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4264 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_11 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_11 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4272 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n10 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4273 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_12 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_12 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n30 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_0 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4263 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_13 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_13 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4271 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n13 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n12 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4272 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_14 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_14 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4270 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n15 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n14 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4271 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_15 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_15 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4269 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n17 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n16 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4270 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_16 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_16 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4268 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n19 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n18 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4269 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_17 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_17 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4267 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n21 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n20 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4268 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_18 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_18 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4266 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n23 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n22 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4267 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_19 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_19 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4265 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n25 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n24 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4266 ));
  all_modules1_sdram_controller1_refreshTimer_SLICE_20 
    \all_modules1/sdram_controller1/refreshTimer/SLICE_20 ( 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .DI1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .DI0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .CE(SD_CLK_c_enable_103), .LSR(refresh_tim_reset), .CLK(SD_CLK_c), 
    .FCI(\all_modules1/sdram_controller1/refreshTimer/n4264 ), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n27 ), 
    .Q0(\all_modules1/sdram_controller1/refreshTimer/count_3 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n26 ), 
    .Q1(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .FCO(\all_modules1/sdram_controller1/refreshTimer/n4265 ));
  SLICE_21 SLICE_21( .A1(count_2), .A0(count_1), .DI1(count_63_N_1_2), 
    .DI0(count_63_N_1_1), .CLK(clk_c), .FCI(n4226), .F0(count_63_N_1_1), 
    .Q0(count_1), .F1(count_63_N_1_2), .Q1(count_2), .FCO(n4227));
  SLICE_22 SLICE_22( .A1(count_10), .A0(count_9), .DI1(count_63_N_1_10), 
    .DI0(count_63_N_1_9), .CLK(clk_c), .FCI(n4230), .F0(count_63_N_1_9), 
    .Q0(count_9), .F1(count_63_N_1_10), .Q1(count_10), .FCO(n4231));
  SLICE_23 SLICE_23( .A1(count_8), .A0(count_7), .DI1(count_63_N_1_8), 
    .DI0(count_63_N_1_7), .CLK(clk_c), .FCI(n4229), .F0(count_63_N_1_7), 
    .Q0(count_7), .F1(count_63_N_1_8), .Q1(count_8), .FCO(n4230));
  SLICE_24 SLICE_24( .A1(count_24), .A0(count_23), .DI1(count_63_N_1_24), 
    .DI0(count_63_N_1_23), .CLK(clk_c), .FCI(n4237), .F0(count_63_N_1_23), 
    .Q0(count_23), .F1(count_63_N_1_24), .Q1(count_24));
  SLICE_25 SLICE_25( .A1(count_22), .A0(count_21), .DI1(count_63_N_1_22), 
    .DI0(count_63_N_1_21), .CLK(clk_c), .FCI(n4236), .F0(count_63_N_1_21), 
    .Q0(count_21), .F1(count_63_N_1_22), .Q1(count_22), .FCO(n4237));
  SLICE_26 SLICE_26( .A1(count_20), .A0(count_19), .DI1(count_63_N_1_20), 
    .DI0(count_63_N_1_19), .CLK(clk_c), .FCI(n4235), .F0(count_63_N_1_19), 
    .Q0(count_19), .F1(count_63_N_1_20), .Q1(count_20), .FCO(n4236));
  SLICE_27 SLICE_27( .A1(count_6), .A0(count_5), .DI1(count_63_N_1_6), 
    .DI0(count_63_N_1_5), .CLK(clk_c), .FCI(n4228), .F0(count_63_N_1_5), 
    .Q0(count_5), .F1(count_63_N_1_6), .Q1(count_6), .FCO(n4229));
  SLICE_28 SLICE_28( .A1(count_18), .A0(count_17), .DI1(count_63_N_1_18), 
    .DI0(count_63_N_1_17), .CLK(clk_c), .FCI(n4234), .F0(count_63_N_1_17), 
    .Q0(count_17), .F1(count_63_N_1_18), .Q1(count_18), .FCO(n4235));
  SLICE_29 SLICE_29( .A1(count_16), .A0(count_15), .DI1(count_63_N_1_16), 
    .DI0(count_63_N_1_15), .CLK(clk_c), .FCI(n4233), .F0(count_63_N_1_15), 
    .Q0(count_15), .F1(count_63_N_1_16), .Q1(count_16), .FCO(n4234));
  SLICE_30 SLICE_30( .A1(count_4), .A0(count_3), .DI1(count_63_N_1_4), 
    .DI0(count_63_N_1_3), .CLK(clk_c), .FCI(n4227), .F0(count_63_N_1_3), 
    .Q0(count_3), .F1(count_63_N_1_4), .Q1(count_4), .FCO(n4228));
  SLICE_31 SLICE_31( .A1(count_14), .A0(count_13), .DI1(count_63_N_1_14), 
    .DI0(count_63_N_1_13), .CLK(clk_c), .FCI(n4232), .F0(count_63_N_1_13), 
    .Q0(count_13), .F1(count_63_N_1_14), .Q1(count_14), .FCO(n4233));
  SLICE_32 SLICE_32( .A1(count_12), .A0(count_11), .DI1(count_63_N_1_12), 
    .DI0(count_63_N_1_11), .CLK(clk_c), .FCI(n4231), .F0(count_63_N_1_11), 
    .Q0(count_11), .F1(count_63_N_1_12), .Q1(count_12), .FCO(n4232));
  SLICE_33 SLICE_33( .A1(count_0), .DI1(count_63_N_1_0), .CLK(clk_c), 
    .F1(count_63_N_1_0), .Q1(count_0), .FCO(n4226));
  uart1_SLICE_34 \uart1/SLICE_34 ( .A1(\uart1/PS_8 ), .B0(\uart1/PS_7 ), 
    .DI1(\uart1/n10 ), .LSR(\uart1/n2091 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4261 ), .F0(\uart1/n11 ), .F1(\uart1/n10 ), .Q1(\uart1/PS_8 ));
  uart1_SLICE_35 \uart1/SLICE_35 ( .A1(\uart1/PS_6 ), .A0(\uart1/PS_5 ), 
    .DI0(\uart1/n13 ), .LSR(\uart1/n2091 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4260 ), .F0(\uart1/n13 ), .Q0(\uart1/PS_5 ), .F1(\uart1/n12 ), 
    .FCO(\uart1/n4261 ));
  uart1_SLICE_36 \uart1/SLICE_36 ( .A1(\uart1/PS_4 ), .A0(\uart1/PS_3 ), 
    .DI1(\uart1/n14 ), .DI0(\uart1/n15 ), .LSR(\uart1/n2091 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4259 ), .F0(\uart1/n15 ), .Q0(\uart1/PS_3 ), .F1(\uart1/n14 ), 
    .Q1(\uart1/PS_4 ), .FCO(\uart1/n4260 ));
  uart1_SLICE_37 \uart1/SLICE_37 ( .A1(\uart1/PS_2 ), .A0(\uart1/PS_1 ), 
    .DI1(\uart1/n16 ), .LSR(\uart1/n2091 ), .CLK(SD_CLK_c), 
    .FCI(\uart1/n4258 ), .F0(\uart1/n17 ), .F1(\uart1/n16 ), .Q1(\uart1/PS_2 ), 
    .FCO(\uart1/n4259 ));
  uart1_SLICE_38 \uart1/SLICE_38 ( .A1(\uart1/PS_0 ), .DI1(\uart1/n18 ), 
    .LSR(\uart1/n2091 ), .CLK(SD_CLK_c), .F1(\uart1/n18 ), .Q1(\uart1/PS_0 ), 
    .FCO(\uart1/n4258 ));
  uart_tx1_SLICE_39 \uart_tx1/SLICE_39 ( .A0(\uart_tx1/PS_9 ), 
    .DI0(\uart_tx1/PS_9_N_793_9 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4286 ), .F0(\uart_tx1/PS_9_N_793_9 ), 
    .Q0(\uart_tx1/PS_9 ));
  uart_tx1_SLICE_40 \uart_tx1/SLICE_40 ( .A1(\uart_tx1/PS_8 ), 
    .A0(\uart_tx1/PS_7 ), .DI1(\uart_tx1/PS_9_N_793_8 ), 
    .DI0(\uart_tx1/PS_9_N_793_7 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4285 ), .F0(\uart_tx1/PS_9_N_793_7 ), 
    .Q0(\uart_tx1/PS_7 ), .F1(\uart_tx1/PS_9_N_793_8 ), .Q1(\uart_tx1/PS_8 ), 
    .FCO(\uart_tx1/n4286 ));
  uart_tx1_SLICE_41 \uart_tx1/SLICE_41 ( .A1(\uart_tx1/PS_6 ), 
    .A0(\uart_tx1/PS_5 ), .DI1(\uart_tx1/PS_9_N_793_6 ), 
    .DI0(\uart_tx1/PS_9_N_793_5 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4284 ), .F0(\uart_tx1/PS_9_N_793_5 ), 
    .Q0(\uart_tx1/PS_5 ), .F1(\uart_tx1/PS_9_N_793_6 ), .Q1(\uart_tx1/PS_6 ), 
    .FCO(\uart_tx1/n4285 ));
  uart_tx1_SLICE_42 \uart_tx1/SLICE_42 ( .A1(\uart_tx1/PS_4 ), 
    .A0(\uart_tx1/PS_3 ), .DI1(\uart_tx1/PS_9_N_793_4 ), 
    .DI0(\uart_tx1/PS_9_N_793_3 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4283 ), .F0(\uart_tx1/PS_9_N_793_3 ), 
    .Q0(\uart_tx1/PS_3 ), .F1(\uart_tx1/PS_9_N_793_4 ), .Q1(\uart_tx1/PS_4 ), 
    .FCO(\uart_tx1/n4284 ));
  uart_tx1_SLICE_43 \uart_tx1/SLICE_43 ( .A1(\uart_tx1/PS_2 ), 
    .A0(\uart_tx1/PS_1 ), .DI1(\uart_tx1/PS_9_N_793_2 ), 
    .DI0(\uart_tx1/PS_9_N_793_1 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .FCI(\uart_tx1/n4282 ), .F0(\uart_tx1/PS_9_N_793_1 ), 
    .Q0(\uart_tx1/PS_1 ), .F1(\uart_tx1/PS_9_N_793_2 ), .Q1(\uart_tx1/PS_2 ), 
    .FCO(\uart_tx1/n4283 ));
  uart_tx1_SLICE_44 \uart_tx1/SLICE_44 ( .A1(\uart_tx1/PS_0 ), 
    .DI1(\uart_tx1/PS_9_N_793_0 ), .LSR(\uart_tx1/PS_9__N_804 ), 
    .CLK(SD_CLK_c), .F1(\uart_tx1/PS_9_N_793_0 ), .Q1(\uart_tx1/PS_0 ), 
    .FCO(\uart_tx1/n4282 ));
  all_modules1_fifo2_m_RAM1_SLICE_45 \all_modules1/fifo2/m_RAM1/SLICE_45 ( 
    .D1(\all_modules1/tx_dat1_3 ), .C1(\all_modules1/tx_dat1_2 ), 
    .B1(\all_modules1/tx_dat1_1 ), .A1(\all_modules1/tx_dat1_0 ), 
    .D0(\all_modules1/fifo2/i_addr_3 ), .C0(\all_modules1/fifo2/i_addr_2 ), 
    .B0(\all_modules1/fifo2/i_addr_1 ), .A0(\all_modules1/fifo2/i_addr_0 ), 
    .WADO0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WADO1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WADO2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WADO3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WDO0(\all_modules1/fifo2/m_RAM1/WD0_INT ), 
    .WDO1(\all_modules1/fifo2/m_RAM1/WD1_INT ), 
    .WDO2(\all_modules1/fifo2/m_RAM1/WD2_INT ), 
    .WDO3(\all_modules1/fifo2/m_RAM1/WD3_INT ));
  all_modules1_fifo2_SLICE_46 \all_modules1/fifo2/SLICE_46 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_247_1 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_247_0 ), .WRE(\all_modules1/tx_ack1 ), 
    .WCK(SD_CLK_c), .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/o_data_7_N_247_0 ), .Q0(tx_dat_0), 
    .F1(\all_modules1/fifo2/o_data_7_N_247_1 ), .Q1(tx_dat_1), 
    .WAD0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM1/WD0_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM1/WD1_INT ));
  all_modules1_fifo2_SLICE_47 \all_modules1/fifo2/SLICE_47 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_247_3 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_247_2 ), .WRE(\all_modules1/tx_ack1 ), 
    .WCK(SD_CLK_c), .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/o_data_7_N_247_2 ), .Q0(tx_dat_2), 
    .F1(\all_modules1/fifo2/o_data_7_N_247_3 ), .Q1(tx_dat_3), 
    .WAD0(\all_modules1/fifo2/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM1/WD2_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM1/WD3_INT ));
  all_modules1_fifo2_m_RAM0_SLICE_48 \all_modules1/fifo2/m_RAM0/SLICE_48 ( 
    .D1(\all_modules1/tx_dat1_7 ), .C1(\all_modules1/tx_dat1_6 ), 
    .B1(\all_modules1/tx_dat1_5 ), .A1(\all_modules1/tx_dat1_4 ), 
    .D0(\all_modules1/fifo2/i_addr_3 ), .C0(\all_modules1/fifo2/i_addr_2 ), 
    .B0(\all_modules1/fifo2/i_addr_1 ), .A0(\all_modules1/fifo2/i_addr_0 ), 
    .WADO0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WADO1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WADO2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WADO3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WDO0(\all_modules1/fifo2/m_RAM0/WD0_INT ), 
    .WDO1(\all_modules1/fifo2/m_RAM0/WD1_INT ), 
    .WDO2(\all_modules1/fifo2/m_RAM0/WD2_INT ), 
    .WDO3(\all_modules1/fifo2/m_RAM0/WD3_INT ));
  all_modules1_fifo2_SLICE_49 \all_modules1/fifo2/SLICE_49 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_247_5 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_247_4 ), .WRE(\all_modules1/tx_ack1 ), 
    .WCK(SD_CLK_c), .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/o_data_7_N_247_4 ), .Q0(tx_dat_4), 
    .F1(\all_modules1/fifo2/o_data_7_N_247_5 ), .Q1(tx_dat_5), 
    .WAD0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM0/WD0_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM0/WD1_INT ));
  all_modules1_fifo2_SLICE_50 \all_modules1/fifo2/SLICE_50 ( 
    .D1(\all_modules1/fifo2/o_addr_3 ), .C1(\all_modules1/fifo2/o_addr_2 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/o_addr_0 ), 
    .D0(\all_modules1/fifo2/o_addr_3 ), .C0(\all_modules1/fifo2/o_addr_2 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_0 ), 
    .DI1(\all_modules1/fifo2/o_data_7_N_247_7 ), 
    .DI0(\all_modules1/fifo2/o_data_7_N_247_6 ), .WRE(\all_modules1/tx_ack1 ), 
    .WCK(SD_CLK_c), .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/o_data_7_N_247_6 ), .Q0(tx_dat_6), 
    .F1(\all_modules1/fifo2/o_data_7_N_247_7 ), .Q1(tx_dat_7), 
    .WAD0(\all_modules1/fifo2/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo2/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo2/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo2/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo2/m_RAM0/WD2_INT ), 
    .WD1(\all_modules1/fifo2/m_RAM0/WD3_INT ));
  all_modules1_fifo1_m_RAM1_SLICE_51 \all_modules1/fifo1/m_RAM1/SLICE_51 ( 
    .D1(rx_dat_3), .C1(rx_dat_2), .B1(rx_dat_1), .A1(rx_dat_0), 
    .D0(\all_modules1/fifo1/i_addr_3 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(\all_modules1/fifo1/i_addr_1 ), .A0(i_addr_0), 
    .WADO0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WADO1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WADO2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WADO3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WDO0(\all_modules1/fifo1/m_RAM1/WD0_INT ), 
    .WDO1(\all_modules1/fifo1/m_RAM1/WD1_INT ), 
    .WDO2(\all_modules1/fifo1/m_RAM1/WD2_INT ), 
    .WDO3(\all_modules1/fifo1/m_RAM1/WD3_INT ));
  all_modules1_fifo1_SLICE_52 \all_modules1/fifo1/SLICE_52 ( .D1(o_addr_3), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/o_addr_1 ), 
    .A1(o_addr_0), .D0(o_addr_3), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(o_addr_0), 
    .DI1(\all_modules1/fifo1/o_data_7_N_247_1 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_247_0 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_247_0 ), .Q0(\all_modules1/rx_dat1_0 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_247_1 ), .Q1(\all_modules1/rx_dat1_1 ), 
    .WAD0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM1/WD0_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM1/WD1_INT ));
  all_modules1_fifo1_SLICE_53 \all_modules1/fifo1/SLICE_53 ( .D1(o_addr_3), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/o_addr_1 ), 
    .A1(o_addr_0), .D0(o_addr_3), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(o_addr_0), 
    .DI1(\all_modules1/fifo1/o_data_7_N_247_3 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_247_2 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_247_2 ), .Q0(\all_modules1/rx_dat1_2 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_247_3 ), .Q1(\all_modules1/rx_dat1_3 ), 
    .WAD0(\all_modules1/fifo1/m_RAM1/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM1/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM1/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM1/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM1/WD2_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM1/WD3_INT ));
  all_modules1_fifo1_m_RAM0_SLICE_54 \all_modules1/fifo1/m_RAM0/SLICE_54 ( 
    .D1(rx_dat_7), .C1(rx_dat_6), .B1(rx_dat_5), .A1(rx_dat_4), 
    .D0(\all_modules1/fifo1/i_addr_3 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(\all_modules1/fifo1/i_addr_1 ), .A0(i_addr_0), 
    .WADO0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WADO1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WADO2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WADO3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WDO0(\all_modules1/fifo1/m_RAM0/WD0_INT ), 
    .WDO1(\all_modules1/fifo1/m_RAM0/WD1_INT ), 
    .WDO2(\all_modules1/fifo1/m_RAM0/WD2_INT ), 
    .WDO3(\all_modules1/fifo1/m_RAM0/WD3_INT ));
  all_modules1_fifo1_SLICE_55 \all_modules1/fifo1/SLICE_55 ( .D1(o_addr_3), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/o_addr_1 ), 
    .A1(o_addr_0), .D0(o_addr_3), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(o_addr_0), 
    .DI1(\all_modules1/fifo1/o_data_7_N_247_5 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_247_4 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_247_4 ), .Q0(\all_modules1/rx_dat1_4 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_247_5 ), .Q1(\all_modules1/rx_dat1_5 ), 
    .WAD0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM0/WD0_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM0/WD1_INT ));
  all_modules1_fifo1_SLICE_56 \all_modules1/fifo1/SLICE_56 ( .D1(o_addr_3), 
    .C1(\all_modules1/fifo1/o_addr_2 ), .B1(\all_modules1/fifo1/o_addr_1 ), 
    .A1(o_addr_0), .D0(o_addr_3), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .A0(o_addr_0), 
    .DI1(\all_modules1/fifo1/o_data_7_N_247_7 ), 
    .DI0(\all_modules1/fifo1/o_data_7_N_247_6 ), .WRE(rx_ack), .WCK(SD_CLK_c), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/o_data_7_N_247_6 ), .Q0(\all_modules1/rx_dat1_6 ), 
    .F1(\all_modules1/fifo1/o_data_7_N_247_7 ), .Q1(\all_modules1/rx_dat1_7 ), 
    .WAD0(\all_modules1/fifo1/m_RAM0/WAD0_INT ), 
    .WAD1(\all_modules1/fifo1/m_RAM0/WAD1_INT ), 
    .WAD2(\all_modules1/fifo1/m_RAM0/WAD2_INT ), 
    .WAD3(\all_modules1/fifo1/m_RAM0/WAD3_INT ), 
    .WD0(\all_modules1/fifo1/m_RAM0/WD2_INT ), 
    .WD1(\all_modules1/fifo1/m_RAM0/WD3_INT ));
  all_modules1_fifo1_SLICE_65 \all_modules1/fifo1/SLICE_65 ( .C1(i_addr_0), 
    .B1(\all_modules1/fifo1/i_addr_1 ), .A1(\all_modules1/fifo1/i_addr_2 ), 
    .C0(i_addr_0), .A0(\all_modules1/fifo1/i_addr_1 ), 
    .DI1(\all_modules1/fifo1/i_addr_1_2 ), .DI0(\all_modules1/fifo1/n4919 ), 
    .CE(rx_ack), .CLK(SD_CLK_c), .F0(\all_modules1/fifo1/n4919 ), 
    .Q0(\all_modules1/fifo1/i_addr_1 ), .F1(\all_modules1/fifo1/i_addr_1_2 ), 
    .Q1(\all_modules1/fifo1/i_addr_2 ));
  SLICE_66 SLICE_66( .D1(o_addr_3), .C1(i_addr_1_3), .B1(o_addr_0), 
    .A1(i_addr_0), .D0(i_addr_0), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(\all_modules1/fifo1/i_addr_1 ), .A0(\all_modules1/fifo1/i_addr_3 ), 
    .DI0(i_addr_1_3), .CE(rx_ack), .CLK(SD_CLK_c), .F0(i_addr_1_3), 
    .Q0(\all_modules1/fifo1/i_addr_3 ), .F1(\uart1/n6 ));
  all_modules1_fifo1_SLICE_67 \all_modules1/fifo1/SLICE_67 ( 
    .D1(\all_modules1/fifo1/o_addr_1 ), .C1(o_addr_0), 
    .A1(\all_modules1/fifo1/o_addr_2 ), .C0(o_addr_0), 
    .A0(\all_modules1/fifo1/o_addr_1 ), .DI1(\all_modules1/fifo1/n23 ), 
    .DI0(\all_modules1/fifo1/n24 ), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n24 ), .Q0(\all_modules1/fifo1/o_addr_1 ), 
    .F1(\all_modules1/fifo1/n23 ), .Q1(\all_modules1/fifo1/o_addr_2 ));
  all_modules1_fifo2_SLICE_68 \all_modules1/fifo2/SLICE_68 ( 
    .D0(\all_modules1/tx_ack1 ), .A0(\all_modules1/fifo2/i_addr_0 ), 
    .DI0(\all_modules1/fifo2/n8 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n8 ), .Q0(\all_modules1/fifo2/i_addr_0 ));
  all_modules1_fifo2_SLICE_69 \all_modules1/fifo2/SLICE_69 ( 
    .C1(\all_modules1/fifo2/i_addr_2 ), .B1(\all_modules1/fifo2/i_addr_1 ), 
    .A1(\all_modules1/fifo2/i_addr_0 ), .B0(\all_modules1/fifo2/i_addr_1 ), 
    .A0(\all_modules1/fifo2/i_addr_0 ), .DI1(\all_modules1/fifo2/i_addr_1_2 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_1 ), .CE(\all_modules1/tx_ack1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/i_addr_1_1 ), 
    .Q0(\all_modules1/fifo2/i_addr_1 ), .F1(\all_modules1/fifo2/i_addr_1_2 ), 
    .Q1(\all_modules1/fifo2/i_addr_2 ));
  all_modules1_fifo2_SLICE_70 \all_modules1/fifo2/SLICE_70 ( 
    .D1(\all_modules1/fifo2/i_addr_1 ), .C1(\all_modules1/fifo2/i_addr_0 ), 
    .B1(\all_modules1/fifo2/o_addr_2 ), .A1(\all_modules1/fifo2/i_addr_2 ), 
    .D0(\all_modules1/fifo2/i_addr_1 ), .C0(\all_modules1/fifo2/i_addr_0 ), 
    .B0(\all_modules1/fifo2/i_addr_3 ), .A0(\all_modules1/fifo2/i_addr_2 ), 
    .DI0(\all_modules1/fifo2/i_addr_1_3 ), .CE(\all_modules1/tx_ack1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/i_addr_1_3 ), 
    .Q0(\all_modules1/fifo2/i_addr_3 ), .F1(\all_modules1/fifo2/n4355 ));
  all_modules1_fifo2_SLICE_71 \all_modules1/fifo2/SLICE_71 ( 
    .D1(\all_modules1/fifo2/n6_adj_925 ), .C1(\all_modules1/fifo2/n5_adj_924 ), 
    .B1(tx_ack), .A1(tx_stb), .B0(\all_modules1/fifo2/SD_CLK_c_enable_63 ), 
    .A0(\all_modules1/fifo2/o_addr_0 ), .DI0(\all_modules1/fifo2/n36 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/fifo2/n36 ), 
    .Q0(\all_modules1/fifo2/o_addr_0 ), 
    .F1(\all_modules1/fifo2/SD_CLK_c_enable_63 ));
  all_modules1_fifo2_SLICE_72 \all_modules1/fifo2/SLICE_72 ( 
    .C1(\all_modules1/fifo2/o_addr_0 ), .B1(\all_modules1/fifo2/o_addr_1 ), 
    .A1(\all_modules1/fifo2/o_addr_2 ), .C0(\all_modules1/fifo2/o_addr_0 ), 
    .A0(\all_modules1/fifo2/o_addr_1 ), .DI1(\all_modules1/fifo2/n23 ), 
    .DI0(\all_modules1/fifo2/n24 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n24 ), .Q0(\all_modules1/fifo2/o_addr_1 ), 
    .F1(\all_modules1/fifo2/n23 ), .Q1(\all_modules1/fifo2/o_addr_2 ));
  all_modules1_fifo2_SLICE_73 \all_modules1/fifo2/SLICE_73 ( 
    .D1(\all_modules1/fifo2/i_addr_0 ), .C1(\all_modules1/fifo2/o_addr_0 ), 
    .B1(\all_modules1/fifo2/o_addr_1 ), .A1(\all_modules1/fifo2/i_addr_1 ), 
    .D0(\all_modules1/fifo2/o_addr_2 ), .C0(\all_modules1/fifo2/o_addr_0 ), 
    .B0(\all_modules1/fifo2/o_addr_1 ), .A0(\all_modules1/fifo2/o_addr_3 ), 
    .DI0(\all_modules1/fifo2/n22 ), 
    .CE(\all_modules1/fifo2/SD_CLK_c_enable_63 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n22 ), .Q0(\all_modules1/fifo2/o_addr_3 ), 
    .F1(\all_modules1/fifo2/n5 ));
  all_modules1_sdram_controller1_SLICE_74 
    \all_modules1/sdram_controller1/SLICE_74 ( 
    .D1(\all_modules1/sdram_controller1/count_13 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/sdram_controller1/n4887 ), 
    .C0(\all_modules1/sdram_controller1/n4890 ), 
    .B0(\all_modules1/sdram_controller1/n8 ), 
    .A0(\all_modules1/sdram_controller1/n326 ), 
    .DI0(\all_modules1/sdram_controller1/n4401 ), 
    .M1(\all_modules1/sdram_controller1/n4401 ), 
    .LSR(\all_modules1/sdram_controller1/n4920 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4401 ), .Q0(\all_modules1/n5045 ), 
    .F1(\all_modules1/sdram_controller1/n4890 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ));
  all_modules1_SLICE_75 \all_modules1/SLICE_75 ( .D1(\all_modules1/fifo2/n5 ), 
    .C1(\all_modules1/fifo2/n6 ), .B1(nreset_c), 
    .A1(\all_modules1/o_stb_N_762 ), .D0(\all_modules1/o_stb_N_762 ), 
    .C0(\all_modules1/tx_ack1 ), .B0(\all_modules1/state_1 ), 
    .A0(\all_modules1/n4907 ), 
    .DI0(\all_modules1/sdram_to_uart1/next_state_0 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/next_state_0 ), 
    .Q0(\all_modules1/o_stb_N_762 ), .F1(\all_modules1/tx_ack1 ));
  all_modules1_SLICE_76 \all_modules1/SLICE_76 ( 
    .D1(\all_modules1/uart_to_sdram1/rd_wt_operation_1 ), 
    .C1(\all_modules1/state_0 ), .B1(\all_modules1/uart_to_sdram1/state_1 ), 
    .A1(\all_modules1/state_2 ), .D0(nreset_c), 
    .C0(\all_modules1/o_stb_rd_N_349 ), .B0(\all_modules1/n3588 ), 
    .A0(\all_modules1/n4900 ), .DI0(\all_modules1/sdram_controller1/n4314 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/n4314 ), 
    .Q0(\all_modules1/rd_busy ), .F1(\all_modules1/o_stb_rd_N_349 ));
  all_modules1_fifo1_SLICE_98 \all_modules1/fifo1/SLICE_98 ( 
    .C1(\all_modules1/fifo1/empty_N_260 ), .B1(\all_modules1/fifo1/n4897 ), 
    .D0(\all_modules1/fifo1/empty_N_260 ), .B0(\all_modules1/fifo1/n4897 ), 
    .DI0(\all_modules1/fifo1/n6 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n6 ), .Q0(\all_modules1/rx_stb1 ), 
    .F1(\all_modules1/fifo1/SD_CLK_c_enable_106 ));
  all_modules1_sdram_controller1_arbBank_SLICE_112 
    \all_modules1/sdram_controller1/arbBank/SLICE_112 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n5031 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/delay_3__2__N_674 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .A0(\all_modules1/sdram_controller1/delay_3__2__N_674 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_677 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_680 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_680 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_677 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ));
  all_modules1_sdram_controller1_SLICE_113 
    \all_modules1/sdram_controller1/SLICE_113 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4915 ), 
    .C0(\all_modules1/sdram_controller1/delay_3__2__N_674 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_670 ), 
    .M1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_670 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .F1(\all_modules1/sdram_controller1/delay_3__2__N_674 ), 
    .Q1(\all_modules1/rd_wt_operation_1_N_759_1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_114 
    \all_modules1/sdram_controller1/arbBank/SLICE_114 ( 
    .D1(\all_modules1/sdram_controller1/delay_3__2__N_661 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/n5034 ), 
    .A1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/delay_3__2__N_661 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_664 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_667 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_667 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_664 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ));
  all_modules1_sdram_controller1_SLICE_115 
    \all_modules1/sdram_controller1/SLICE_115 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4911 ), 
    .C0(\all_modules1/sdram_controller1/delay_3__2__N_661 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_657 ), 
    .M1(\all_modules1/sdram_controller1/arb_delay_2 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_657 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .F1(\all_modules1/sdram_controller1/delay_3__2__N_661 ), 
    .Q1(\all_modules1/sdram_controller1/wt_o_stb1 ));
  all_modules1_sdram_controller1_arbBank_SLICE_116 
    \all_modules1/sdram_controller1/arbBank/SLICE_116 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/n5037 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .A1(\all_modules1/sdram_controller1/delay_3__2__N_648 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .B0(\all_modules1/sdram_controller1/delay_3__2__N_648 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_651 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_654 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_654 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_651 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ));
  SLICE_117 SLICE_117( .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4916 ), 
    .C0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B0(\all_modules1/sdram_controller1/delay_3__2__N_648 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_644 ), 
    .M1(uart_rx_c), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_644 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .F1(\all_modules1/sdram_controller1/delay_3__2__N_648 ), .Q1(\uart1/RXDa ));
  all_modules1_sdram_controller1_arbBank_SLICE_118 
    \all_modules1/sdram_controller1/arbBank/SLICE_118 ( 
    .D1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/n4 ), 
    .B1(\all_modules1/sdram_controller1/n4902 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/n4909 ), 
    .C0(\all_modules1/sdram_controller1/n4920 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/n4910 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .DI1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_630 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 ), 
    .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_641 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_630 ), 
    .Q1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ));
  all_modules1_sdram_controller1_arbBank_SLICE_119 
    \all_modules1/sdram_controller1/arbBank/SLICE_119 ( 
    .C1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .DI0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 ), 
    .M0(\all_modules1/sdram_controller1/n4902 ), .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/delay_3__2__N_638 ), 
    .Q0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ));
  all_modules1_SLICE_120 \all_modules1/SLICE_120 ( .B1(\all_modules1/wt_busy ), 
    .A1(\all_modules1/rd_busy ), .D0(\all_modules1/rd_busy ), 
    .B0(\all_modules1/wt_busy ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI0(\all_modules1/sdram_controller1/next_state_3__N_502 ), 
    .LSR(\all_modules1/sdram_controller1/n322 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/next_state_3__N_502 ), 
    .Q0(\all_modules1/sdram_controller1/arb_delay_2 ), .F1(n4906));
  SLICE_122 SLICE_122( .D1(delay_tim_reset), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(delay_tim_reset), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/count_0 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n11 ), 
    .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n11 ), 
    .Q0(\all_modules1/sdram_controller1/count_0 ), .F1(SD_CLK_c_enable_66));
  all_modules1_sdram_controller1_delayTimer_SLICE_123 
    \all_modules1/sdram_controller1/delayTimer/SLICE_123 ( 
    .C0(\all_modules1/sdram_controller1/count_0 ), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n9 ), 
    .CE(SD_CLK_c_enable_66), .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n9 ), 
    .Q0(\all_modules1/sdram_controller1/count_1 ));
  all_modules1_sdram_controller1_delayTimer_SLICE_124 
    \all_modules1/sdram_controller1/delayTimer/SLICE_124 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .C1(\all_modules1/sdram_controller1/count_0 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .A1(\all_modules1/sdram_controller1/count_1 ), 
    .C0(\all_modules1/sdram_controller1/count_0 ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .DI1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .DI0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .CE(SD_CLK_c_enable_66), .LSR(delay_tim_reset), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/delayTimer/n8 ), 
    .Q0(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/n7 ), 
    .Q1(\all_modules1/sdram_controller1/delayTimer/count_3 ));
  all_modules1_sdram_controller1_SLICE_125 
    \all_modules1/sdram_controller1/SLICE_125 ( .D1(\all_modules1/wt_busy ), 
    .C1(\all_modules1/rd_busy ), .B1(\all_modules1/sdram_controller1/n322 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(\all_modules1/sdram_controller1/n319 ), 
    .B0(\all_modules1/sdram_controller1/n320 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI1(\all_modules1/sdram_controller1/n4588 ), 
    .DI0(\all_modules1/sdram_controller1/n2127 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2127 ), 
    .Q0(\all_modules1/sdram_controller1/n319 ), 
    .F1(\all_modules1/sdram_controller1/n4588 ), 
    .Q1(\all_modules1/sdram_controller1/n320 ));
  all_modules1_sdram_controller1_SLICE_126 
    \all_modules1/sdram_controller1/SLICE_126 ( .D1(refresh_tim_flag), 
    .C1(\all_modules1/n3588 ), .B1(\all_modules1/n5045 ), 
    .A1(\all_modules1/sdram_controller1/n4894 ), 
    .D0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C0(\all_modules1/sdram_controller1/n12 ), 
    .B0(\all_modules1/sdram_controller1/n322 ), 
    .A0(\all_modules1/sdram_controller1/n323 ), 
    .DI1(\all_modules1/sdram_controller1/n4608 ), 
    .DI0(\all_modules1/sdram_controller1/n2053 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2053 ), 
    .Q0(\all_modules1/sdram_controller1/n322 ), 
    .F1(\all_modules1/sdram_controller1/n4608 ), 
    .Q1(\all_modules1/sdram_controller1/n323 ));
  all_modules1_sdram_controller1_SLICE_127 
    \all_modules1/sdram_controller1/SLICE_127 ( 
    .C1(\all_modules1/sdram_controller1/n328 ), 
    .B1(\all_modules1/sdram_controller1/n329 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .D0(refresh_tim_reset), .B0(\all_modules1/sdram_controller1/n326 ), 
    .A0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .DI1(\all_modules1/sdram_controller1/n2094 ), 
    .DI0(\all_modules1/sdram_controller1/n4405 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4405 ), 
    .Q0(\all_modules1/sdram_controller1/n326 ), 
    .F1(\all_modules1/sdram_controller1/n2094 ), 
    .Q1(\all_modules1/sdram_controller1/n328 ));
  all_modules1_sdram_controller1_SLICE_128 
    \all_modules1/sdram_controller1/SLICE_128 ( .C1(refresh_tim_flag), 
    .B1(\all_modules1/n5045 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_927 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_929 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_23 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/n14_adj_928 ), 
    .DI0(refresh_tim_flag), .LSR(\all_modules1/n5045 ), .CLK(SD_CLK_c), 
    .F0(refresh_tim_flag), .Q0(\all_modules1/sdram_controller1/n329 ), 
    .F1(\all_modules1/sdram_controller1/n4887 ));
  all_modules1_SLICE_140 \all_modules1/SLICE_140 ( 
    .C1(\all_modules1/sdram_controller1/wt_o_stb1 ), 
    .A1(\all_modules1/rd_wt_operation_1_N_759_1 ), .B0(\all_modules1/tx_ack1 ), 
    .A0(\all_modules1/state_1 ), .DI0(\all_modules1/sdram_to_uart1/n2360 ), 
    .LSR(\all_modules1/o_stb_N_762 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/n2360 ), .Q0(\all_modules1/state_1 ), 
    .F1(\all_modules1/n4907 ));
  all_modules1_uart_to_sdram1_SLICE_150 
    \all_modules1/uart_to_sdram1/SLICE_150 ( .D1(\all_modules1/state_0 ), 
    .C1(\all_modules1/state_2 ), .B1(\all_modules1/uart_to_sdram1/n8 ), 
    .A1(\all_modules1/rx_stb1 ), .D0(\all_modules1/state_0 ), 
    .C0(\all_modules1/rx_stb1 ), .A0(\all_modules1/n3272 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4697 ), 
    .M0(\all_modules1/uart_to_sdram1/state_1 ), 
    .LSR(\all_modules1/uart_to_sdram1/n1074 ), .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/uart_to_sdram1/n4697 ), 
    .Q0(\all_modules1/uart_to_sdram1/next_state_0 ));
  all_modules1_uart_to_sdram1_SLICE_151 
    \all_modules1/uart_to_sdram1/SLICE_151 ( .D1(\all_modules1/wt_busy ), 
    .C1(\all_modules1/rx_stb1 ), .B1(\all_modules1/rd_busy ), 
    .A1(\all_modules1/state_2 ), .D0(\all_modules1/rx_stb1 ), 
    .C0(\all_modules1/state_0 ), .B0(\all_modules1/uart_to_sdram1/n8 ), 
    .A0(\all_modules1/uart_to_sdram1/state_1 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4471 ), 
    .LSR(\all_modules1/uart_to_sdram1/n1074 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n4471 ), 
    .Q0(\all_modules1/uart_to_sdram1/next_state_1 ), 
    .F1(\all_modules1/uart_to_sdram1/n8 ));
  all_modules1_uart_to_sdram1_SLICE_152 
    \all_modules1/uart_to_sdram1/SLICE_152 ( .D1(\all_modules1/state_2 ), 
    .C1(\all_modules1/state_0 ), .B1(n4906), .A1(\all_modules1/rx_stb1 ), 
    .D0(\all_modules1/uart_to_sdram1/rd_wt_operation_1 ), 
    .C0(\all_modules1/state_0 ), .B0(n4906), .A0(\all_modules1/state_2 ), 
    .DI0(\all_modules1/uart_to_sdram1/n4925 ), 
    .M0(\all_modules1/uart_to_sdram1/state_1 ), 
    .LSR(\all_modules1/uart_to_sdram1/n1074 ), .CLK(SD_CLK_c), 
    .OFX0(\all_modules1/uart_to_sdram1/n4925 ), 
    .Q0(\all_modules1/uart_to_sdram1/next_state_2 ));
  all_modules1_SLICE_153 \all_modules1/SLICE_153 ( 
    .D1(\all_modules1/rx_dat1_0 ), .B1(\all_modules1/fifo1/n4598 ), 
    .A1(\all_modules1/rx_dat1_2 ), .D0(\all_modules1/fifo1/n4598 ), 
    .B0(\all_modules1/rx_dat1_0 ), .A0(\all_modules1/rx_dat1_2 ), 
    .DI1(\all_modules1/rd_wt_operation_1_N_307_1 ), 
    .DI0(\all_modules1/rd_wt_operation_1_N_307_0 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_343 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/rd_wt_operation_1_N_307_0 ), 
    .Q0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .F1(\all_modules1/rd_wt_operation_1_N_307_1 ), 
    .Q1(\all_modules1/uart_to_sdram1/rd_wt_operation_1 ));
  all_modules1_SLICE_155 \all_modules1/SLICE_155 ( 
    .D1(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .C1(\all_modules1/state_0 ), .B1(\all_modules1/uart_to_sdram1/state_1 ), 
    .A1(\all_modules1/state_2 ), .C0(\all_modules1/n4900 ), 
    .B0(\all_modules1/n3588 ), .A0(nreset_c), .DI0(\all_modules1/n45 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/n45 ), .Q0(\all_modules1/wt_busy ), 
    .F1(\all_modules1/n4900 ));
  SLICE_156 SLICE_156( .C0(rx_ack), .A0(i_addr_0), .DI0(n4708), .CLK(SD_CLK_c), 
    .F0(n4708), .Q0(i_addr_0));
  all_modules1_fifo1_SLICE_157 \all_modules1/fifo1/SLICE_157 ( 
    .D1(\all_modules1/fifo1/n6_adj_923 ), .C1(o_addr_0), .B1(i_addr_0), 
    .A1(\all_modules1/fifo1/n2 ), .C0(\all_modules1/fifo1/empty_N_260 ), 
    .B0(\all_modules1/fifo1/n4897 ), .A0(o_addr_0), 
    .DI0(\all_modules1/fifo1/n36 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n36 ), .Q0(o_addr_0), 
    .F1(\all_modules1/fifo1/empty_N_260 ));
  all_modules1_fifo1_SLICE_158 \all_modules1/fifo1/SLICE_158 ( 
    .D1(\all_modules1/fifo1/o_addr_1 ), .A1(\all_modules1/fifo1/i_addr_1 ), 
    .D0(\all_modules1/fifo1/o_addr_1 ), .C0(\all_modules1/fifo1/o_addr_2 ), 
    .B0(o_addr_0), .A0(o_addr_3), .DI0(\all_modules1/fifo1/n22 ), 
    .CE(\all_modules1/fifo1/SD_CLK_c_enable_106 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n22 ), .Q0(o_addr_3), .F1(\all_modules1/fifo1/n2 ));
  all_modules1_sdram_controller1_SLICE_159 
    \all_modules1/sdram_controller1/SLICE_159 ( 
    .D1(\all_modules1/sdram_controller1/n326 ), 
    .C1(\all_modules1/sdram_controller1/count_13 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A1(\all_modules1/sdram_controller1/n328 ), 
    .D0(\all_modules1/sdram_controller1/n326 ), 
    .C0(\all_modules1/sdram_controller1/count_13 ), 
    .B0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .A0(\all_modules1/sdram_controller1/n328 ), 
    .DI0(\all_modules1/sdram_controller1/n348 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n348 ), .Q0(refresh_tim_reset), 
    .F1(\all_modules1/sdram_controller1/count_2_derived_14_enable_14 ));
  uart_tx1_SLICE_164 \uart_tx1/SLICE_164 ( .D0(\uart_tx1/FSM_7__N_805 ), 
    .A0(tx_stb), .DI0(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/DAT_7__N_915 ), .Q0(tx_ack));
  all_modules1_fifo2_SLICE_165 \all_modules1/fifo2/SLICE_165 ( 
    .D1(\all_modules1/fifo2/o_addr_1 ), .C1(\all_modules1/fifo2/i_addr_1 ), 
    .B1(\all_modules1/fifo2/o_addr_0 ), .A1(\all_modules1/fifo2/i_addr_0 ), 
    .D0(tx_ack), .C0(\all_modules1/fifo2/n5_adj_924 ), 
    .B0(\all_modules1/fifo2/n6_adj_925 ), .A0(tx_stb), 
    .DI0(\all_modules1/fifo2/n2831 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n2831 ), .Q0(tx_stb), 
    .F1(\all_modules1/fifo2/n5_adj_924 ));
  uart1_SLICE_166 \uart1/SLICE_166 ( .D1(\uart1/n4629 ), .C1(\uart1/RXDc ), 
    .B1(\uart1/DAT_1 ), .A1(\uart1/FSM_7__N_113 ), .D0(\uart1/FSM_7__N_112 ), 
    .C0(\uart1/RXDc ), .B0(\uart1/n4633 ), .A0(\uart1/DAT_0 ), 
    .DI1(\uart1/n2765 ), .DI0(\uart1/n2771 ), .CE(\uart1/SD_CLK_c_enable_73 ), 
    .CLK(SD_CLK_c), .F0(\uart1/n2771 ), .Q0(\uart1/DAT_0 ), .F1(\uart1/n2765 ), 
    .Q1(\uart1/DAT_1 ));
  uart1_SLICE_167 \uart1/SLICE_167 ( .D1(\uart1/n4635 ), .C1(\uart1/RXDc ), 
    .B1(\uart1/DAT_3 ), .A1(\uart1/FSM_7__N_115 ), .D0(\uart1/FSM_7__N_114 ), 
    .C0(\uart1/RXDc ), .B0(\uart1/n4630 ), .A0(\uart1/DAT_2 ), 
    .DI1(\uart1/n2753 ), .DI0(\uart1/n2759 ), .CE(\uart1/SD_CLK_c_enable_73 ), 
    .CLK(SD_CLK_c), .F0(\uart1/n2759 ), .Q0(\uart1/DAT_2 ), .F1(\uart1/n2753 ), 
    .Q1(\uart1/DAT_3 ));
  uart1_SLICE_168 \uart1/SLICE_168 ( .D1(\uart1/FSM_7__N_117 ), 
    .C1(\uart1/RXDc ), .B1(\uart1/n4623 ), .A1(\uart1/DAT_5 ), 
    .D0(\uart1/FSM_7__N_116 ), .C0(\uart1/RXDc ), .B0(\uart1/DAT_4 ), 
    .A0(\uart1/n4616 ), .DI1(\uart1/n2768 ), .DI0(\uart1/n2774 ), 
    .CE(\uart1/SD_CLK_c_enable_73 ), .CLK(SD_CLK_c), .F0(\uart1/n2774 ), 
    .Q0(\uart1/DAT_4 ), .F1(\uart1/n2768 ), .Q1(\uart1/DAT_5 ));
  uart1_SLICE_169 \uart1/SLICE_169 ( .D1(\uart1/RXDc ), 
    .C1(\uart1/FSM_7__N_119 ), .B1(\uart1/n4624 ), .A1(\uart1/DAT_7 ), 
    .D0(\uart1/RXDc ), .C0(\uart1/DAT_6 ), .B0(\uart1/n4611 ), 
    .A0(\uart1/FSM_7__N_118 ), .DI1(\uart1/n2756 ), .DI0(\uart1/n2762 ), 
    .CE(\uart1/SD_CLK_c_enable_73 ), .CLK(SD_CLK_c), .F0(\uart1/n2762 ), 
    .Q0(\uart1/DAT_6 ), .F1(\uart1/n2756 ), .Q1(\uart1/DAT_7 ));
  uart1_SLICE_170 \uart1/SLICE_170 ( .D1(\uart1/RXDc ), 
    .C1(\uart1/FSM_7__N_111 ), .B1(\uart1/SMPL ), .A1(\uart1/FSM_7__N_110 ), 
    .D0(\uart1/RXDc ), .C0(\uart1/FSM_7__N_121 ), .B0(\uart1/FSM_7__N_110 ), 
    .A0(rx_ack), .DI1(\uart1/n2148 ), .DI0(\uart1/n2146 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n2146 ), .Q0(\uart1/FSM_7__N_110 ), .F1(\uart1/n2148 ), 
    .Q1(\uart1/FSM_7__N_111 ));
  uart1_SLICE_172 \uart1/SLICE_172 ( .M1(\uart1/FSM_7__N_114 ), 
    .M0(\uart1/FSM_7__N_113 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_114 ), .Q1(\uart1/FSM_7__N_115 ));
  uart1_SLICE_173 \uart1/SLICE_173 ( .M1(\uart1/FSM_7__N_116 ), 
    .M0(\uart1/FSM_7__N_115 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_116 ), .Q1(\uart1/FSM_7__N_117 ));
  uart1_SLICE_174 \uart1/SLICE_174 ( .M1(\uart1/FSM_7__N_118 ), 
    .M0(\uart1/FSM_7__N_117 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_118 ), .Q1(\uart1/FSM_7__N_119 ));
  uart1_SLICE_175 \uart1/SLICE_175 ( .M1(\uart1/FSM_7__N_111 ), 
    .M0(\uart1/FSM_7__N_119 ), .CE(\uart1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart1/FSM_7__N_120 ), .Q1(\uart1/FSM_7__N_112 ));
  SLICE_176 SLICE_176( .D1(\uart1/FSM_7__N_120 ), .C1(\uart1/FSM_7__N_111 ), 
    .B1(\uart1/FSM_7__N_121 ), .A1(\uart1/FSM_7__N_110 ), 
    .D0(\uart1/FSM_7__N_120 ), .C0(\uart1/SMPL ), .B0(rx_ack), 
    .A0(\uart1/FSM_7__N_121 ), .DI0(\uart1/n3102 ), 
    .M1(\all_modules1/uart_to_sdram1/next_state_0 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n3102 ), .Q0(\uart1/FSM_7__N_121 ), 
    .F1(\uart1/SD_CLK_c_enable_73 ), .Q1(\all_modules1/state_0 ));
  uart1_SLICE_177 \uart1/SLICE_177 ( .D1(\uart1/n12 ), 
    .C1(\uart1/FSM_7__N_110 ), .B1(\uart1/RXDc ), .D0(\uart1/RXDc ), 
    .C0(\uart1/FSM_7__N_110 ), .B0(\uart1/n17 ), .DI1(\uart1/PS_8_N_100_6 ), 
    .DI0(\uart1/PS_8_N_100_1 ), .LSR(\uart1/PS_8__N_109 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_8_N_100_1 ), .Q0(\uart1/PS_1 ), .F1(\uart1/PS_8_N_100_6 ), 
    .Q1(\uart1/PS_6 ));
  uart1_SLICE_178 \uart1/SLICE_178 ( .C0(\uart1/FSM_7__N_110 ), 
    .B0(\uart1/n11 ), .A0(\uart1/RXDc ), .DI0(\uart1/PS_8_N_100_7 ), 
    .LSR(\uart1/PS_8__N_109 ), .CLK(SD_CLK_c), .F0(\uart1/PS_8_N_100_7 ), 
    .Q0(\uart1/PS_7 ));
  uart1_SLICE_181 \uart1/SLICE_181 ( .M1(\uart1/RXDa ), .M0(\uart1/RXDb ), 
    .CLK(SD_CLK_c), .Q0(\uart1/RXDc ), .Q1(\uart1/RXDb ));
  SLICE_182 SLICE_182( .C1(\uart1/PS_8__N_109 ), .B1(\uart1/FSM_7__N_110 ), 
    .A1(\uart1/RXDc ), .D0(\uart1/n15_adj_921 ), .C0(\uart1/n14_adj_922 ), 
    .B0(\uart1/PS_5 ), .A0(\uart1/PS_0 ), .DI0(\uart1/PS_8__N_109 ), 
    .M1(\all_modules1/uart_to_sdram1/next_state_1 ), .CLK(SD_CLK_c), 
    .F0(\uart1/PS_8__N_109 ), .Q0(\uart1/SMPL ), .F1(\uart1/n2091 ), 
    .Q1(\all_modules1/uart_to_sdram1/state_1 ));
  SLICE_183 SLICE_183( .C1(\uart1/FSM_7__N_121 ), .B1(rx_ack), 
    .D0(\uart1/SMPL ), .C0(\uart1/n4888 ), .B0(\uart1/FSM_7__N_120 ), 
    .A0(\uart1/rx_stb ), .DI0(\uart1/STBo_N_222 ), 
    .M1(\all_modules1/uart_to_sdram1/next_state_2 ), .CLK(SD_CLK_c), 
    .F0(\uart1/STBo_N_222 ), .Q0(\uart1/rx_stb ), .F1(\uart1/n4888 ), 
    .Q1(\all_modules1/state_2 ));
  SLICE_188 SLICE_188( .D1(\all_modules1/fifo2/o_addr_3 ), 
    .C1(\all_modules1/fifo2/i_addr_3 ), .B1(\all_modules1/fifo2/i_addr_2 ), 
    .A1(\all_modules1/fifo2/o_addr_2 ), .D0(\uart_tx1/SMPL ), 
    .C0(\uart_tx1/FSM_7__N_817 ), .B0(tx_stb), .A0(\uart_tx1/FSM_7__N_805 ), 
    .DI0(\uart_tx1/n2186 ), .M1(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2186 ), .Q0(\uart_tx1/FSM_7__N_805 ), 
    .F1(\all_modules1/fifo2/n6_adj_925 ), .Q1(\uart_tx1/FSM_7__N_806 ));
  uart_tx1_SLICE_189 \uart_tx1/SLICE_189 ( .C1(\uart_tx1/FSM_7__N_807 ), 
    .B1(\uart_tx1/FSM_7__N_805 ), .A1(\uart_tx1/FSM_7__N_806 ), 
    .D0(\uart_tx1/SMPL ), .C0(\uart_tx1/FSM_7__N_807 ), 
    .A0(\uart_tx1/FSM_7__N_806 ), .DI0(\uart_tx1/n2188 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n2188 ), .Q0(\uart_tx1/FSM_7__N_807 ), .F1(\uart_tx1/n4328 ));
  SLICE_191 SLICE_191( .M1(\uart_tx1/FSM_7__N_810 ), 
    .M0(\uart_tx1/FSM_7__N_809 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(GND_net), .Q0(\uart_tx1/FSM_7__N_810 ), .Q1(\uart_tx1/FSM_7__N_811 ));
  SLICE_192 SLICE_192( .D0(\uart_tx1/PS_6 ), .C0(\uart_tx1/PS_3 ), 
    .B0(\uart_tx1/PS_4 ), .A0(\uart_tx1/PS_7 ), .M1(\uart_tx1/FSM_7__N_812 ), 
    .M0(\uart_tx1/FSM_7__N_811 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n16 ), .Q0(\uart_tx1/FSM_7__N_812 ), .F1(VCC_net), 
    .Q1(\uart_tx1/FSM_7__N_813 ));
  SLICE_193 SLICE_193( .D1(\uart_tx1/FSM_7__N_815 ), 
    .C1(\uart_tx1/FSM_7__N_816 ), .B1(\uart_tx1/DAT_6 ), .A1(\uart_tx1/DAT_7 ), 
    .C0(count_24), .M1(\uart_tx1/FSM_7__N_814 ), .M0(\uart_tx1/FSM_7__N_813 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), .F0(led_c), 
    .Q0(\uart_tx1/FSM_7__N_814 ), .F1(\uart_tx1/n20 ), 
    .Q1(\uart_tx1/FSM_7__N_815 ));
  SLICE_194 SLICE_194( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/count_6 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_7 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_10 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_17 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_16 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_18 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_20 ), 
    .M1(\uart_tx1/FSM_7__N_816 ), .M0(\uart_tx1/FSM_7__N_815 ), 
    .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n14_adj_928 ), 
    .Q0(\uart_tx1/FSM_7__N_816 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n11_adj_930 ), 
    .Q1(\uart_tx1/FSM_7__N_817 ));
  uart_tx1_SLICE_195 \uart_tx1/SLICE_195 ( .D1(\uart_tx1/PS_0 ), 
    .C1(\uart_tx1/PS_2 ), .B1(\uart_tx1/PS_9 ), .A1(\uart_tx1/PS_8 ), 
    .D0(\uart_tx1/PS_5 ), .C0(\uart_tx1/n17_adj_920 ), .B0(\uart_tx1/n16 ), 
    .A0(\uart_tx1/PS_1 ), .DI0(\uart_tx1/PS_9__N_804 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/PS_9__N_804 ), .Q0(\uart_tx1/SMPL ), 
    .F1(\uart_tx1/n17_adj_920 ));
  SLICE_196 SLICE_196( .C1(\all_modules1/uart_to_sdram1/state_1 ), 
    .B1(\all_modules1/state_2 ), .A1(\all_modules1/state_0 ), 
    .B0(\uart_tx1/n4865 ), .A0(\uart_tx1/FSM_7__N_808 ), 
    .DI0(\uart_tx1/n4866 ), .LSR(\uart_tx1/n4328 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n4866 ), .Q0(uart_tx_c), 
    .F1(\all_modules1/uart_to_sdram1/i_ack_N_345 ));
  all_modules1_uart_to_sdram1_i2482_SLICE_197 
    \all_modules1/uart_to_sdram1/i2482/SLICE_197 ( 
    .D1(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .C1(\all_modules1/uart_to_sdram1/rd_wt_operation_1 ), 
    .B1(\all_modules1/wt_busy ), .A1(\all_modules1/rd_busy ), 
    .D0(\all_modules1/fifo1/n4598 ), .C0(\all_modules1/rx_dat1_2 ), 
    .B0(\all_modules1/rx_dat1_0 ), .M0(\all_modules1/state_2 ), 
    .OFX0(\all_modules1/n3272 ));
  all_modules1_sdram_controller1_mux_525_i1_SLICE_198 
    \all_modules1/sdram_controller1/mux_525_i1/SLICE_198 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C1(\all_modules1/rd_busy ), .B1(\all_modules1/wt_busy ), 
    .A1(\all_modules1/sdram_controller1/n328 ), 
    .D0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .C0(\all_modules1/sdram_controller1/n4920 ), 
    .B0(\all_modules1/sdram_controller1/n2079 ), .A0(\all_modules1/n5045 ), 
    .M0(\all_modules1/sdram_controller1/n4687 ), .OFX0(delay_tim_reset));
  all_modules1_sdram_controller1_arbBank_i3975_SLICE_199 
    \all_modules1/sdram_controller1/arbBank/i3975/SLICE_199 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n4996 ));
  all_modules1_sdram_controller1_arbBank_i3972_SLICE_200 
    \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .M1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .M0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .FXB(\all_modules1/sdram_controller1/arbBank/n4993 ), 
    .FXA(\all_modules1/sdram_controller1/arbBank/n4996 ), 
    .OFX0(\all_modules1/sdram_controller1/arbBank/n4993 ), 
    .OFX1(\all_modules1/n3588 ));
  uart_tx1_i3937_SLICE_201 \uart_tx1/i3937/SLICE_201 ( .C1(\uart_tx1/n1392 ), 
    .B1(\uart_tx1/DAT_0 ), .A1(\uart_tx1/FSM_7__N_809 ), .D0(\uart_tx1/DAT_3 ), 
    .C0(\uart_tx1/FSM_7__N_812 ), .B0(\uart_tx1/n4863 ), .M0(\uart_tx1/n4684 ), 
    .OFX0(\uart_tx1/n4865 ));
  SLICE_202 SLICE_202( .D1(\uart_tx1/FSM_7__N_813 ), .C1(\uart_tx1/DAT_5 ), 
    .B1(\uart_tx1/DAT_4 ), .D0(\uart_tx1/FSM_7__N_813 ), .C0(\uart_tx1/n17 ), 
    .B0(\uart_tx1/FSM_7__N_814 ), .A0(\uart_tx1/n20 ), 
    .M1(\all_modules1/rx_dat1_3 ), .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n4863 ), .Q0(\all_modules1/rx_sd_adr_18 ), 
    .F1(\uart_tx1/n17 ), .Q1(\all_modules1/rx_sd_adr_19 ));
  all_modules1_SLICE_203 \all_modules1/SLICE_203 ( .D1(\all_modules1/rx_stb1 ), 
    .C1(\all_modules1/n8 ), .B1(\all_modules1/state_2 ), .A1(nreset_c), 
    .D0(\all_modules1/uart_to_sdram1/rd_wt_operation_0 ), 
    .C0(\all_modules1/uart_to_sdram1/state_1 ), .B0(\all_modules1/state_0 ), 
    .M0(\all_modules1/rd_wt_operation_1_N_759_1 ), 
    .CE(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_53 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/n8 ), 
    .Q0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .F1(\all_modules1/fifo1/n4897 ));
  all_modules1_SLICE_204 \all_modules1/SLICE_204 ( 
    .D1(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .C1(\all_modules1/state_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), 
    .D0(\all_modules1/o_stb_N_762 ), .C0(\all_modules1/sdram_to_uart1/n6 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .M0(\all_modules1/sdram_controller1/n319 ), 
    .LSR(\all_modules1/sdram_controller1/delay_tim_flag_N_513 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/tx_dat1_4 ), 
    .Q0(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .F1(\all_modules1/sdram_to_uart1/n6 ));
  all_modules1_SLICE_205 \all_modules1/SLICE_205 ( 
    .D1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ), 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ), 
    .A1(\all_modules1/state_1 ), .D0(\all_modules1/o_stb_N_762 ), 
    .C0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .B0(\all_modules1/sdram_to_uart1/n15 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_348 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_5 ), .Q0(\all_modules1/rx_sd_data_2 ), 
    .F1(\all_modules1/sdram_to_uart1/n15 ), .Q1(\all_modules1/rx_sd_data_3 ));
  all_modules1_SLICE_206 \all_modules1/SLICE_206 ( 
    .C1(\all_modules1/o_stb_N_762 ), 
    .B1(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .D0(\all_modules1/state_1 ), 
    .C0(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), 
    .B0(\all_modules1/sdram_to_uart1/n4594 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_6 ), .Q0(\all_modules1/rx_sd_data_12 ), 
    .F1(\all_modules1/sdram_to_uart1/n4594 ), 
    .Q1(\all_modules1/rx_sd_data_13 ));
  all_modules1_SLICE_207 \all_modules1/SLICE_207 ( 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_7 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_15 ), 
    .A1(\all_modules1/state_1 ), .D0(\all_modules1/o_stb_N_762 ), 
    .C0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .B0(\all_modules1/sdram_to_uart1/n10 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_7 ), .Q0(\all_modules1/rx_sd_data_10 ), 
    .F1(\all_modules1/sdram_to_uart1/n10 ), .Q1(\all_modules1/rx_sd_data_11 ));
  all_modules1_SLICE_208 \all_modules1/SLICE_208 ( 
    .D1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ), 
    .B1(\all_modules1/state_1 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ), 
    .D0(\all_modules1/o_stb_N_762 ), 
    .C0(\all_modules1/sdram_to_uart1/n10_adj_938 ), 
    .B0(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_348 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_3 ), .Q0(\all_modules1/rx_sd_data_0 ), 
    .F1(\all_modules1/sdram_to_uart1/n10_adj_938 ), 
    .Q1(\all_modules1/rx_sd_data_1 ));
  all_modules1_SLICE_209 \all_modules1/SLICE_209 ( 
    .D1(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .C1(\all_modules1/sdram_to_uart1/rd_wt_operation_1 ), 
    .B1(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), 
    .A1(\all_modules1/state_1 ), .C0(\all_modules1/o_stb_N_762 ), 
    .B0(\all_modules1/sdram_to_uart1/n14 ), .M1(\all_modules1/rx_dat1_5 ), 
    .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_348 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_0 ), .Q0(\all_modules1/rx_sd_data_4 ), 
    .F1(\all_modules1/sdram_to_uart1/n14 ), .Q1(\all_modules1/rx_sd_data_5 ));
  all_modules1_sdram_controller1_SLICE_210 
    \all_modules1/sdram_controller1/SLICE_210 ( 
    .D1(\all_modules1/sdram_controller1/n329 ), 
    .C1(\all_modules1/sdram_controller1/n323 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ), 
    .A1(\all_modules1/sdram_controller1/n4 ), .D0(\all_modules1/n5045 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), 
    .B0(\all_modules1/sdram_controller1/n10 ), 
    .A0(\all_modules1/sdram_controller1/n328 ), .M1(DB_out_7), .M0(DB_out_6), 
    .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4 ), .Q0(\all_modules1/tx_sd_data_6 ), 
    .F1(ADR_c_8), .Q1(\all_modules1/tx_sd_data_7 ));
  all_modules1_sdram_controller1_SLICE_211 
    \all_modules1/sdram_controller1/SLICE_211 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .C1(\all_modules1/sdram_controller1/n9 ), 
    .B1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .A1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .D0(\all_modules1/sdram_controller1/n326 ), 
    .C0(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .B0(\all_modules1/sdram_controller1/n328 ), 
    .A0(\all_modules1/sdram_controller1/count_13 ), 
    .M1(\all_modules1/rx_sd_adr_5 ), .M0(\all_modules1/rx_sd_adr_4 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4889 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .F1(\all_modules1/sdram_controller1/delayTimer/count[2]_derived_14 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ));
  all_modules1_sdram_controller1_SLICE_212 
    \all_modules1/sdram_controller1/SLICE_212 ( 
    .D1(\all_modules1/sdram_controller1/n4914 ), 
    .C1(\all_modules1/sdram_controller1/n4920 ), 
    .B1(\all_modules1/sdram_controller1/n322 ), 
    .A1(\all_modules1/sdram_controller1/state_0 ), 
    .C0(\all_modules1/sdram_controller1/n320 ), 
    .B0(\all_modules1/sdram_controller1/n319 ), 
    .M1(\all_modules1/rx_sd_adr_19 ), .M0(\all_modules1/rx_sd_adr_18 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4914 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), .F1(nRAS_c), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ));
  all_modules1_sdram_controller1_SLICE_213 
    \all_modules1/sdram_controller1/SLICE_213 ( 
    .D1(\all_modules1/sdram_controller1/delayTimer/count_3 ), 
    .C1(\all_modules1/sdram_controller1/n9 ), 
    .B1(\all_modules1/sdram_controller1/delayTimer/count_2 ), 
    .A1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .D0(\all_modules1/sdram_controller1/n320 ), 
    .C0(\all_modules1/sdram_controller1/count_0 ), 
    .B0(\all_modules1/sdram_controller1/n319 ), 
    .A0(\all_modules1/sdram_controller1/count_1 ), 
    .M1(\all_modules1/rx_sd_adr_20 ), .M0(\all_modules1/rx_sd_adr_2 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n9 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), 
    .F1(\all_modules1/sdram_controller1/delay_tim_flag_N_513 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ));
  all_modules1_sdram_controller1_SLICE_214 
    \all_modules1/sdram_controller1/SLICE_214 ( 
    .D1(\all_modules1/sdram_controller1/n323 ), 
    .C1(\all_modules1/sdram_controller1/n24 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ), 
    .A1(\all_modules1/sdram_controller1/n329 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_4 ), 
    .C0(\all_modules1/n5045 ), .B0(\all_modules1/sdram_controller1/n10 ), 
    .A0(\all_modules1/sdram_controller1/n328 ), .M1(DB_out_9), .M0(DB_out_8), 
    .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n24 ), 
    .Q0(\all_modules1/tx_sd_data_8 ), .F1(ADR_c_4), 
    .Q1(\all_modules1/tx_sd_data_9 ));
  all_modules1_sdram_controller1_SLICE_215 
    \all_modules1/sdram_controller1/SLICE_215 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ), 
    .C1(\all_modules1/sdram_controller1/n323 ), 
    .B1(\all_modules1/sdram_controller1/n329 ), 
    .A1(\all_modules1/sdram_controller1/n4_adj_933 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_2 ), 
    .C0(\all_modules1/sdram_controller1/n328 ), .B0(\all_modules1/n5045 ), 
    .A0(\all_modules1/sdram_controller1/n10 ), .M1(\all_modules1/rx_sd_adr_1 ), 
    .M0(\all_modules1/rx_sd_adr_0 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4_adj_933 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), .F1(ADR_c_2), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ));
  all_modules1_sdram_controller1_SLICE_216 
    \all_modules1/sdram_controller1/SLICE_216 ( .D1(refresh_tim_reset), 
    .A1(\all_modules1/sdram_controller1/n319 ), 
    .D0(\all_modules1/sdram_controller1/n323 ), 
    .C0(\all_modules1/sdram_controller1/n2736 ), 
    .B0(\all_modules1/sdram_controller1/n329 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .M1(\all_modules1/rx_sd_data_3 ), .M0(\all_modules1/rx_sd_data_2 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/state_0 ), .Q0(SD_DATA_TEMP_2), 
    .F1(\all_modules1/sdram_controller1/n2736 ), .Q1(SD_DATA_TEMP_3));
  all_modules1_sdram_controller1_SLICE_217 
    \all_modules1/sdram_controller1/SLICE_217 ( 
    .D1(\all_modules1/sdram_controller1/n328 ), 
    .C1(\all_modules1/sdram_controller1/n10 ), .B1(\all_modules1/n5045 ), 
    .D0(\all_modules1/sdram_controller1/n4893 ), 
    .C0(\all_modules1/sdram_controller1/n323 ), 
    .B0(\all_modules1/sdram_controller1/n329 ), 
    .A0(\all_modules1/sdram_controller1/SD_ADR_TEMP_19 ), 
    .M1(\all_modules1/rx_sd_adr_22 ), .M0(\all_modules1/rx_sd_adr_21 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(ADR_c_10), .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .F1(\all_modules1/sdram_controller1/n4893 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ));
  all_modules1_sdram_controller1_SLICE_218 
    \all_modules1/sdram_controller1/SLICE_218 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), 
    .C1(\all_modules1/sdram_controller1/n4_adj_934 ), 
    .B1(\all_modules1/sdram_controller1/n329 ), 
    .A1(\all_modules1/sdram_controller1/n323 ), 
    .D0(\all_modules1/sdram_controller1/n10 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ), 
    .B0(\all_modules1/n5045 ), .A0(\all_modules1/sdram_controller1/n328 ), 
    .M1(\all_modules1/rx_sd_adr_11 ), .M0(\all_modules1/rx_sd_adr_10 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4_adj_934 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), .F1(ADR_c_3), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_11 ));
  all_modules1_sdram_controller1_SLICE_219 
    \all_modules1/sdram_controller1/SLICE_219 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), 
    .C1(\all_modules1/sdram_controller1/n10 ), .B1(\all_modules1/n5045 ), 
    .A1(\all_modules1/sdram_controller1/n328 ), 
    .D0(\all_modules1/sdram_controller1/n2736 ), 
    .C0(\all_modules1/sdram_controller1/n322 ), 
    .B0(\all_modules1/sdram_controller1/n326 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .M1(\all_modules1/rx_sd_data_7 ), .M0(\all_modules1/rx_sd_data_6 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n10 ), .Q0(SD_DATA_TEMP_6), 
    .F1(\all_modules1/sdram_controller1/n23 ), .Q1(SD_DATA_TEMP_7));
  all_modules1_sdram_controller1_SLICE_220 
    \all_modules1/sdram_controller1/SLICE_220 ( 
    .D1(\all_modules1/sdram_controller1/n323 ), 
    .C1(\all_modules1/sdram_controller1/n4_adj_935 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_10 ), 
    .A1(\all_modules1/sdram_controller1/n329 ), 
    .D0(\all_modules1/sdram_controller1/n10 ), .C0(\all_modules1/n5045 ), 
    .B0(\all_modules1/sdram_controller1/SD_ADR_TEMP_1 ), 
    .A0(\all_modules1/sdram_controller1/n328 ), 
    .M1(\all_modules1/rx_sd_adr_13 ), .M0(\all_modules1/rx_sd_adr_12 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4_adj_935 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_12 ), .F1(ADR_c_1), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_13 ));
  all_modules1_sdram_controller1_SLICE_221 
    \all_modules1/sdram_controller1/SLICE_221 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_9 ), 
    .C1(\all_modules1/sdram_controller1/n323 ), 
    .B1(\all_modules1/sdram_controller1/n329 ), 
    .A1(\all_modules1/sdram_controller1/n25 ), 
    .D0(\all_modules1/sdram_controller1/n10 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_0 ), 
    .B0(\all_modules1/n5045 ), .A0(\all_modules1/sdram_controller1/n328 ), 
    .M1(\all_modules1/rx_sd_adr_15 ), .M0(\all_modules1/rx_sd_adr_14 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n25 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), .F1(ADR_c_0), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ));
  all_modules1_sdram_controller1_SLICE_222 
    \all_modules1/sdram_controller1/SLICE_222 ( .D1(\all_modules1/n5045 ), 
    .C1(\all_modules1/sdram_controller1/n10 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ), 
    .A1(\all_modules1/sdram_controller1/n328 ), 
    .D0(\all_modules1/sdram_controller1/n329 ), 
    .C0(\all_modules1/sdram_controller1/n323 ), 
    .B0(\all_modules1/sdram_controller1/n4_adj_936 ), 
    .A0(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), 
    .M1(\all_modules1/rx_sd_adr_3 ), .M0(\all_modules1/rx_sd_adr_23 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), .F0(ADR_c_7), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .F1(\all_modules1/sdram_controller1/n4_adj_936 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_3 ));
  all_modules1_sdram_controller1_SLICE_223 
    \all_modules1/sdram_controller1/SLICE_223 ( 
    .D1(\all_modules1/sdram_controller1/n323 ), 
    .C1(\all_modules1/sdram_controller1/n22 ), 
    .B1(\all_modules1/sdram_controller1/SD_ADR_TEMP_14 ), 
    .A1(\all_modules1/sdram_controller1/n329 ), 
    .D0(\all_modules1/sdram_controller1/n328 ), 
    .C0(\all_modules1/sdram_controller1/SD_ADR_TEMP_5 ), 
    .B0(\all_modules1/n5045 ), .A0(\all_modules1/sdram_controller1/n10 ), 
    .M1(\all_modules1/rx_sd_adr_17 ), .M0(\all_modules1/rx_sd_adr_16 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n22 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_16 ), .F1(ADR_c_5), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_17 ));
  all_modules1_sdram_controller1_SLICE_224 
    \all_modules1/sdram_controller1/SLICE_224 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/n11_adj_930 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/n12_adj_931 ), 
    .B1(\all_modules1/sdram_controller1/refreshTimer/count_14 ), 
    .A1(\all_modules1/sdram_controller1/refreshTimer/count_12 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_19 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/n5 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_13 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_15 ), 
    .M1(\all_modules1/rx_sd_data_9 ), .M0(\all_modules1/rx_sd_data_8 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n9_adj_927 ), 
    .Q0(SD_DATA_TEMP_8), .F1(\all_modules1/sdram_controller1/refreshTimer/n5 ), 
    .Q1(SD_DATA_TEMP_9));
  all_modules1_SLICE_225 \all_modules1/SLICE_225 ( 
    .D1(\all_modules1/sdram_controller1/refreshTimer/count_9 ), 
    .C1(\all_modules1/sdram_controller1/refreshTimer/count_11 ), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_5 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_932 ), 
    .B0(\all_modules1/sdram_controller1/refreshTimer/count_4 ), 
    .A0(\all_modules1/sdram_controller1/refreshTimer/count_8 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_345 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n12_adj_931 ), 
    .Q0(\all_modules1/rx_sd_adr_8 ), 
    .F1(\all_modules1/sdram_controller1/refreshTimer/n10_adj_932 ), 
    .Q1(\all_modules1/rx_sd_adr_9 ));
  all_modules1_SLICE_226 \all_modules1/SLICE_226 ( 
    .D1(\all_modules1/fifo2/i_addr_1 ), .C1(\all_modules1/fifo2/i_addr_2 ), 
    .A1(\all_modules1/fifo2/i_addr_0 ), .D0(\all_modules1/fifo2/i_addr_3 ), 
    .C0(\all_modules1/fifo2/n4903 ), .B0(\all_modules1/fifo2/o_addr_3 ), 
    .A0(\all_modules1/fifo2/n4355 ), .M1(\all_modules1/rx_dat1_5 ), 
    .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo2/n6 ), .Q0(\all_modules1/rx_sd_adr_4 ), 
    .F1(\all_modules1/fifo2/n4903 ), .Q1(\all_modules1/rx_sd_adr_5 ));
  SLICE_227 SLICE_227( .D1(n4356), .C1(\uart1/n6 ), .B1(\uart1/rx_stb ), 
    .A1(n4710), .D0(i_addr_0), .C0(\all_modules1/fifo1/i_addr_1 ), 
    .B0(\all_modules1/fifo1/o_addr_1 ), .M1(\all_modules1/rx_dat1_7 ), 
    .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 ), .CLK(SD_CLK_c), 
    .F0(n4710), .Q0(\all_modules1/rx_sd_adr_22 ), .F1(rx_ack), 
    .Q1(\all_modules1/rx_sd_adr_23 ));
  all_modules1_SLICE_228 \all_modules1/SLICE_228 ( 
    .D1(\all_modules1/rx_dat1_3 ), .C1(\all_modules1/rx_dat1_5 ), 
    .B1(\all_modules1/rx_dat1_7 ), .D0(\all_modules1/rx_dat1_6 ), 
    .C0(\all_modules1/rx_dat1_1 ), .B0(\all_modules1/fifo1/n4668 ), 
    .A0(\all_modules1/rx_dat1_4 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/fifo1/n4598 ), .Q0(\all_modules1/rx_sd_adr_2 ), 
    .F1(\all_modules1/fifo1/n4668 ), .Q1(\all_modules1/rx_sd_adr_3 ));
  SLICE_229 SLICE_229( .D1(\uart1/FSM_7__N_115 ), .C1(\uart1/FSM_7__N_118 ), 
    .B1(\uart1/FSM_7__N_117 ), .A1(\uart1/FSM_7__N_119 ), 
    .D0(\uart1/FSM_7__N_112 ), .C0(\uart1/n4895 ), .B0(\uart1/FSM_7__N_116 ), 
    .A0(\uart1/FSM_7__N_114 ), .M1(\all_modules1/tx_sd_data_3 ), 
    .M0(\all_modules1/tx_sd_data_2 ), .CE(\all_modules1/SD_CLK_c_enable_52 ), 
    .CLK(SD_CLK_c), .F0(\uart1/n4629 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), .F1(\uart1/n4895 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_3 ));
  SLICE_230 SLICE_230( .D1(\uart1/FSM_7__N_114 ), .C1(\uart1/FSM_7__N_112 ), 
    .B1(\uart1/FSM_7__N_113 ), .A1(\uart1/FSM_7__N_116 ), 
    .D0(\uart1/FSM_7__N_117 ), .C0(\uart1/n4896 ), .B0(\uart1/FSM_7__N_115 ), 
    .A0(\uart1/FSM_7__N_118 ), .M1(\all_modules1/tx_sd_data_5 ), 
    .M0(\all_modules1/tx_sd_data_4 ), .CE(\all_modules1/SD_CLK_c_enable_52 ), 
    .CLK(SD_CLK_c), .F0(\uart1/n4624 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_4 ), .F1(\uart1/n4896 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_5 ));
  SLICE_231 SLICE_231( .D1(\uart1/FSM_7__N_116 ), .C1(\uart1/n4905 ), 
    .B1(\uart1/FSM_7__N_118 ), .A1(\uart1/n4921 ), .C0(\uart1/FSM_7__N_117 ), 
    .A0(\uart1/FSM_7__N_119 ), .M1(\all_modules1/rx_dat1_3 ), 
    .M0(\all_modules1/rx_dat1_2 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_345 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4921 ), .Q0(\all_modules1/rx_sd_adr_10 ), .F1(\uart1/n4635 ), 
    .Q1(\all_modules1/rx_sd_adr_11 ));
  SLICE_232 SLICE_232( .D1(\uart1/FSM_7__N_115 ), .C1(\uart1/FSM_7__N_116 ), 
    .B1(\uart1/n4922 ), .A1(\uart1/n4904 ), .D0(\uart1/FSM_7__N_119 ), 
    .C0(\uart1/FSM_7__N_117 ), .A0(\uart1/FSM_7__N_118 ), 
    .M1(\all_modules1/tx_sd_data_9 ), .M0(\all_modules1/tx_sd_data_8 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), .F0(\uart1/n4904 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_8 ), .F1(\uart1/n4633 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ));
  SLICE_233 SLICE_233( .D1(\uart1/n4921 ), .C1(\uart1/n4905 ), 
    .B1(\uart1/FSM_7__N_118 ), .A1(\uart1/FSM_7__N_115 ), 
    .D0(\uart1/FSM_7__N_114 ), .B0(\uart1/FSM_7__N_113 ), 
    .A0(\uart1/FSM_7__N_112 ), .M1(\all_modules1/rx_dat1_1 ), 
    .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4905 ), .Q0(\all_modules1/rx_sd_adr_0 ), .F1(\uart1/n4616 ), 
    .Q1(\all_modules1/rx_sd_adr_1 ));
  all_modules1_SLICE_234 \all_modules1/SLICE_234 ( 
    .D1(\all_modules1/uart_to_sdram1/state_1 ), .C1(\all_modules1/state_0 ), 
    .A1(\all_modules1/state_2 ), .D0(\all_modules1/uart_to_sdram1/state_1 ), 
    .C0(\all_modules1/state_0 ), .A0(\all_modules1/state_2 ), 
    .M1(\all_modules1/tx_sd_data_1 ), .M0(\all_modules1/tx_sd_data_0 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_0 ), 
    .F1(\all_modules1/uart_to_sdram1/i_ack_N_348 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ));
  all_modules1_SLICE_235 \all_modules1/SLICE_235 ( .D1(\all_modules1/state_2 ), 
    .C1(\all_modules1/state_0 ), .B1(\all_modules1/uart_to_sdram1/state_1 ), 
    .D0(\all_modules1/state_2 ), .C0(\all_modules1/state_0 ), 
    .B0(\all_modules1/uart_to_sdram1/state_1 ), .A0(\all_modules1/rx_stb1 ), 
    .M1(\all_modules1/tx_sd_data_11 ), .M0(\all_modules1/tx_sd_data_10 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/n1074 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_11 ));
  all_modules1_SLICE_236 \all_modules1/SLICE_236 ( .D1(\all_modules1/state_2 ), 
    .C1(\all_modules1/state_0 ), .A1(\all_modules1/uart_to_sdram1/state_1 ), 
    .D0(\all_modules1/state_2 ), .C0(\all_modules1/state_0 ), 
    .A0(\all_modules1/uart_to_sdram1/state_1 ), 
    .M1(\all_modules1/tx_sd_data_13 ), .M0(\all_modules1/tx_sd_data_12 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/uart_to_sdram1/i_ack_N_343 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_12 ), 
    .F1(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_13 ));
  all_modules1_SLICE_237 \all_modules1/SLICE_237 ( 
    .D1(\all_modules1/o_stb_rd_N_349 ), .C1(nreset_c), 
    .B1(\all_modules1/n4900 ), .A1(\all_modules1/n5045 ), .C0(nreset_c), 
    .B0(\all_modules1/n4900 ), .A0(\all_modules1/n5045 ), 
    .M1(\all_modules1/tx_sd_data_15 ), .M0(\all_modules1/tx_sd_data_14 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/n1516 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_14 ), 
    .F1(\all_modules1/sdram_controller1/n1513 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_15 ));
  all_modules1_sdram_controller1_SLICE_238 
    \all_modules1/sdram_controller1/SLICE_238 ( 
    .D1(\all_modules1/sdram_controller1/n323 ), 
    .C1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/n320 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .C0(\all_modules1/sdram_controller1/n320 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A0(\all_modules1/sdram_controller1/n323 ), 
    .M1(\all_modules1/rx_sd_data_1 ), .M0(\all_modules1/rx_sd_data_0 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), .F0(BA_c_0), 
    .Q0(SD_DATA_TEMP_0), .F1(BA_c_1), .Q1(SD_DATA_TEMP_1));
  all_modules1_sdram_controller1_SLICE_239 
    \all_modules1/sdram_controller1/SLICE_239 ( .D1(\all_modules1/n3588 ), 
    .C1(\all_modules1/o_stb_rd_N_349 ), .B1(nreset_c), 
    .A1(\all_modules1/n4900 ), .C0(\all_modules1/o_stb_rd_N_349 ), 
    .B0(nreset_c), .A0(\all_modules1/n4900 ), 
    .M1(\all_modules1/rx_sd_data_15 ), .M0(\all_modules1/rx_sd_data_14 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4894 ), .Q0(SD_DATA_TEMP_14), 
    .F1(\all_modules1/sdram_controller1/n8 ), .Q1(SD_DATA_TEMP_15));
  all_modules1_SLICE_240 \all_modules1/SLICE_240 ( 
    .D1(\all_modules1/sdram_to_uart1/n4594 ), 
    .C1(\all_modules1/sdram_to_uart1/sd_data_temp_1 ), 
    .B1(\all_modules1/state_1 ), 
    .A1(\all_modules1/sdram_to_uart1/sd_data_temp_9 ), 
    .D0(\all_modules1/sdram_to_uart1/n4594 ), 
    .C0(\all_modules1/sdram_to_uart1/sd_data_temp_10 ), 
    .B0(\all_modules1/state_1 ), 
    .A0(\all_modules1/sdram_to_uart1/sd_data_temp_2 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/tx_dat1_2 ), .Q0(\all_modules1/rx_sd_data_14 ), 
    .F1(\all_modules1/tx_dat1_1 ), .Q1(\all_modules1/rx_sd_data_15 ));
  all_modules1_SLICE_241 \all_modules1/SLICE_241 ( 
    .D1(\all_modules1/rd_wt_operation_1_N_759_1 ), .C1(\all_modules1/state_1 ), 
    .B1(\all_modules1/o_stb_N_762 ), 
    .A1(\all_modules1/sdram_controller1/wt_o_stb1 ), 
    .C0(\all_modules1/state_1 ), .B0(\all_modules1/o_stb_N_762 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_348 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_to_uart1/SD_CLK_c_enable_53 ), 
    .Q0(\all_modules1/rx_sd_data_6 ), .F1(\all_modules1/SD_CLK_c_enable_52 ), 
    .Q1(\all_modules1/rx_sd_data_7 ));
  all_modules1_sdram_controller1_SLICE_242 
    \all_modules1/sdram_controller1/SLICE_242 ( .D1(refresh_tim_reset), 
    .C1(\all_modules1/sdram_controller1/n326 ), 
    .B1(\all_modules1/sdram_controller1/n319 ), 
    .A1(\all_modules1/sdram_controller1/n320 ), .D0(refresh_tim_reset), 
    .B0(\all_modules1/sdram_controller1/n320 ), 
    .A0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .M1(\all_modules1/rx_sd_data_5 ), .M0(\all_modules1/rx_sd_data_4 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), .F0(nCAS_c), 
    .Q0(SD_DATA_TEMP_4), 
    .F1(\all_modules1/sdram_controller1/delay_tim_period_3 ), 
    .Q1(SD_DATA_TEMP_5));
  all_modules1_sdram_controller1_SLICE_243 
    \all_modules1/sdram_controller1/SLICE_243 ( 
    .D1(\all_modules1/sdram_controller1/n23 ), 
    .C1(\all_modules1/sdram_controller1/n323 ), 
    .B1(\all_modules1/sdram_controller1/n329 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_15 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_21 ), 
    .C0(\all_modules1/sdram_controller1/n323 ), 
    .B0(\all_modules1/sdram_controller1/n329 ), 
    .M1(\all_modules1/rx_sd_data_13 ), .M0(\all_modules1/rx_sd_data_12 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), .F0(ADR_c_12), 
    .Q0(SD_DATA_TEMP_12), .F1(ADR_c_6), .Q1(SD_DATA_TEMP_13));
  all_modules1_sdram_controller1_SLICE_244 
    \all_modules1/sdram_controller1/SLICE_244 ( 
    .C1(\all_modules1/sdram_controller1/n329 ), 
    .B1(\all_modules1/sdram_controller1/n323 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_18 ), 
    .D0(\all_modules1/sdram_controller1/SD_ADR_TEMP_20 ), 
    .C0(\all_modules1/sdram_controller1/n329 ), 
    .B0(\all_modules1/sdram_controller1/n323 ), 
    .M1(\all_modules1/rx_sd_data_11 ), .M0(\all_modules1/rx_sd_data_10 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/n1516 ), .CLK(SD_CLK_c), .F0(ADR_c_11), 
    .Q0(SD_DATA_TEMP_10), .F1(ADR_c_9), .Q1(SD_DATA_TEMP_11));
  all_modules1_sdram_controller1_SLICE_245 
    \all_modules1/sdram_controller1/SLICE_245 ( .D1(\all_modules1/wt_busy ), 
    .A1(\all_modules1/rd_busy ), .D0(\all_modules1/wt_busy ), 
    .A0(\all_modules1/rd_busy ), .M1(\all_modules1/rx_sd_adr_7 ), 
    .M0(\all_modules1/rx_sd_adr_6 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n12 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_6 ), 
    .F1(delay_tim_reset_N_508), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_7 ));
  all_modules1_sdram_controller1_SLICE_246 
    \all_modules1/sdram_controller1/SLICE_246 ( 
    .D1(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), 
    .C1(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .A1(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .C0(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .B0(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .M1(\all_modules1/rx_sd_adr_9 ), .M0(\all_modules1/rx_sd_adr_8 ), 
    .CE(\all_modules1/sdram_controller1/SD_ADR_TEMP_23__N_438 ), 
    .LSR(\all_modules1/sdram_controller1/n1513 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n4920 ), 
    .Q0(\all_modules1/sdram_controller1/SD_ADR_TEMP_8 ), 
    .F1(\all_modules1/sdram_controller1/n4902 ), 
    .Q1(\all_modules1/sdram_controller1/SD_ADR_TEMP_9 ));
  all_modules1_sdram_controller1_SLICE_247 
    \all_modules1/sdram_controller1/SLICE_247 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_1_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_1_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_1_1 ), .M1(DB_out_11), 
    .M0(DB_out_10), .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4911 ), 
    .Q0(\all_modules1/tx_sd_data_10 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5034 ), 
    .Q1(\all_modules1/tx_sd_data_11 ));
  all_modules1_sdram_controller1_SLICE_248 
    \all_modules1/sdram_controller1/SLICE_248 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_0_2 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), 
    .C0(\all_modules1/sdram_controller1/arbBank/delay_0_1 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_0_0 ), .M1(DB_out_13), 
    .M0(DB_out_12), .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4915 ), 
    .Q0(\all_modules1/tx_sd_data_12 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5031 ), 
    .Q1(\all_modules1/tx_sd_data_13 ));
  all_modules1_sdram_controller1_SLICE_249 
    \all_modules1/sdram_controller1/SLICE_249 ( 
    .D1(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_2_2 ), 
    .A1(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), 
    .D0(\all_modules1/sdram_controller1/arbBank/delay_2_0 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_2_1 ), .M1(DB_out_15), 
    .M0(DB_out_14), .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4916 ), 
    .Q0(\all_modules1/tx_sd_data_14 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n5037 ), 
    .Q1(\all_modules1/tx_sd_data_15 ));
  all_modules1_SLICE_250 \all_modules1/SLICE_250 ( 
    .D1(\all_modules1/fifo1/i_addr_3 ), .C1(o_addr_3), 
    .B1(\all_modules1/fifo1/i_addr_2 ), .A1(\all_modules1/fifo1/o_addr_2 ), 
    .D0(\all_modules1/fifo1/i_addr_1 ), .C0(\all_modules1/fifo1/i_addr_2 ), 
    .B0(i_addr_0), .A0(\all_modules1/fifo1/o_addr_2 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 ), .CLK(SD_CLK_c), 
    .F0(n4356), .Q0(\all_modules1/rx_sd_adr_20 ), 
    .F1(\all_modules1/fifo1/n6_adj_923 ), .Q1(\all_modules1/rx_sd_adr_21 ));
  all_modules1_sdram_controller1_SLICE_251 
    \all_modules1/sdram_controller1/SLICE_251 ( 
    .C1(\all_modules1/sdram_controller1/n322 ), 
    .A1(\all_modules1/sdram_controller1/n328 ), 
    .B0(\all_modules1/sdram_controller1/n328 ), 
    .A0(\all_modules1/sdram_controller1/n326 ), .M1(DB_out_5), .M0(DB_out_4), 
    .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/n2079 ), 
    .Q0(\all_modules1/tx_sd_data_4 ), 
    .F1(\all_modules1/sdram_controller1/n4687 ), 
    .Q1(\all_modules1/tx_sd_data_5 ));
  all_modules1_sdram_controller1_SLICE_252 
    \all_modules1/sdram_controller1/SLICE_252 ( 
    .C1(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .B1(\all_modules1/sdram_controller1/arbBank/delay_3_2 ), 
    .B0(\all_modules1/sdram_controller1/arbBank/delay_3_1 ), 
    .A0(\all_modules1/sdram_controller1/arbBank/delay_3_0 ), .M1(DB_out_1), 
    .M0(DB_out_0), .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4 ), 
    .Q0(\all_modules1/tx_sd_data_0 ), 
    .F1(\all_modules1/sdram_controller1/arbBank/n4909 ), 
    .Q1(\all_modules1/tx_sd_data_1 ));
  SLICE_253 SLICE_253( .D1(\uart1/FSM_7__N_115 ), .C1(\uart1/FSM_7__N_116 ), 
    .B1(\uart1/n4921 ), .A1(\uart1/n4905 ), .D0(\uart1/FSM_7__N_112 ), 
    .C0(\uart1/FSM_7__N_116 ), .B0(\uart1/FSM_7__N_113 ), .A0(\uart1/n4895 ), 
    .M1(\all_modules1/tx_sd_data_7 ), .M0(\all_modules1/tx_sd_data_6 ), 
    .CE(\all_modules1/SD_CLK_c_enable_52 ), .CLK(SD_CLK_c), .F0(\uart1/n4630 ), 
    .Q0(\all_modules1/sdram_to_uart1/sd_data_temp_6 ), .F1(\uart1/n4611 ), 
    .Q1(\all_modules1/sdram_to_uart1/sd_data_temp_7 ));
  SLICE_254 SLICE_254( .D1(\uart_tx1/FSM_7__N_810 ), 
    .C1(\uart_tx1/FSM_7__N_809 ), .A1(\uart_tx1/FSM_7__N_811 ), 
    .D0(\uart_tx1/DAT_1 ), .C0(\uart_tx1/FSM_7__N_810 ), .A0(\uart_tx1/DAT_2 ), 
    .M1(\all_modules1/rx_dat1_1 ), .M0(\all_modules1/rx_dat1_0 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_30 ), .CLK(SD_CLK_c), 
    .F0(\uart_tx1/n1392 ), .Q0(\all_modules1/rx_sd_adr_16 ), 
    .F1(\uart_tx1/n4684 ), .Q1(\all_modules1/rx_sd_adr_17 ));
  SLICE_255 SLICE_255( .D1(\uart1/PS_6 ), .C1(\uart1/PS_8 ), .B1(\uart1/PS_7 ), 
    .A1(\uart1/PS_1 ), .D0(\uart1/PS_4 ), .C0(\uart1/PS_3 ), .A0(\uart1/PS_2 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_345 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n14_adj_922 ), .Q0(\all_modules1/rx_sd_adr_14 ), 
    .F1(\uart1/n15_adj_921 ), .Q1(\all_modules1/rx_sd_adr_15 ));
  SLICE_256 SLICE_256( .D1(refresh_tim_flag), .B1(refresh_tim_reset), 
    .D0(\all_modules1/sdram_controller1/refreshTimer/count_21 ), 
    .C0(\all_modules1/sdram_controller1/refreshTimer/count_22 ), 
    .M1(\all_modules1/rx_dat1_7 ), .M0(\all_modules1/rx_dat1_6 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_22 ), .CLK(SD_CLK_c), 
    .F0(\all_modules1/sdram_controller1/refreshTimer/n10_adj_929 ), 
    .Q0(\all_modules1/rx_sd_adr_6 ), .F1(SD_CLK_c_enable_103), 
    .Q1(\all_modules1/rx_sd_adr_7 ));
  SLICE_257 SLICE_257( .D1(\uart1/FSM_7__N_119 ), .C1(\uart1/n4896 ), 
    .B1(\uart1/FSM_7__N_115 ), .A1(\uart1/FSM_7__N_118 ), 
    .C0(\uart1/FSM_7__N_114 ), .B0(\uart1/FSM_7__N_113 ), 
    .M1(\all_modules1/rx_dat1_5 ), .M0(\all_modules1/rx_dat1_4 ), 
    .CE(\all_modules1/uart_to_sdram1/i_ack_N_345 ), .CLK(SD_CLK_c), 
    .F0(\uart1/n4922 ), .Q0(\all_modules1/rx_sd_adr_12 ), .F1(\uart1/n4623 ), 
    .Q1(\all_modules1/rx_sd_adr_13 ));
  all_modules1_sdram_controller1_SLICE_258 
    \all_modules1/sdram_controller1/SLICE_258 ( 
    .D1(\all_modules1/sdram_controller1/n329 ), 
    .B1(\all_modules1/sdram_controller1/arb_delay_2 ), 
    .B0(\all_modules1/sdram_controller1/SD_ADR_TEMP_23 ), 
    .A0(\all_modules1/sdram_controller1/SD_ADR_TEMP_22 ), .M1(DB_out_3), 
    .M0(DB_out_2), .CE(\all_modules1/sdram_controller1/arb_delay_2_N_410_1 ), 
    .CLK(SD_CLK_c), .F0(\all_modules1/sdram_controller1/arbBank/n4910 ), 
    .Q0(\all_modules1/tx_sd_data_2 ), .F1(n4908), 
    .Q1(\all_modules1/tx_sd_data_3 ));
  all_modules1_uart_to_sdram1_SLICE_283 
    \all_modules1/uart_to_sdram1/SLICE_283 ( .M1(\all_modules1/rx_dat1_0 ), 
    .M0(\all_modules1/rx_dat1_1 ), 
    .CE(\all_modules1/uart_to_sdram1/SD_CLK_c_enable_15 ), .CLK(SD_CLK_c), 
    .Q0(\all_modules1/rx_sd_data_9 ), .Q1(\all_modules1/rx_sd_data_8 ));
  uart1_SLICE_315 \uart1/SLICE_315 ( .M1(\uart1/DAT_0 ), .M0(\uart1/DAT_1 ), 
    .CE(\uart1/FSM_7__N_120 ), .CLK(SD_CLK_c), .Q0(rx_dat_1), .Q1(rx_dat_0));
  uart1_SLICE_316 \uart1/SLICE_316 ( .M1(\uart1/DAT_2 ), .M0(\uart1/DAT_3 ), 
    .CE(\uart1/FSM_7__N_120 ), .CLK(SD_CLK_c), .Q0(rx_dat_3), .Q1(rx_dat_2));
  uart1_SLICE_317 \uart1/SLICE_317 ( .M1(\uart1/DAT_4 ), .M0(\uart1/DAT_5 ), 
    .CE(\uart1/FSM_7__N_120 ), .CLK(SD_CLK_c), .Q0(rx_dat_5), .Q1(rx_dat_4));
  uart1_SLICE_318 \uart1/SLICE_318 ( .M1(\uart1/DAT_6 ), .M0(\uart1/DAT_7 ), 
    .CE(\uart1/FSM_7__N_120 ), .CLK(SD_CLK_c), .Q0(rx_dat_7), .Q1(rx_dat_6));
  uart1_SLICE_319 \uart1/SLICE_319 ( .M0(\uart1/FSM_7__N_112 ), 
    .CE(\uart1/SMPL ), .CLK(SD_CLK_c), .Q0(\uart1/FSM_7__N_113 ));
  uart_tx1_SLICE_324 \uart_tx1/SLICE_324 ( .M1(tx_dat_0), .M0(tx_dat_1), 
    .CE(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_1 ), 
    .Q1(\uart_tx1/DAT_0 ));
  uart_tx1_SLICE_325 \uart_tx1/SLICE_325 ( .M1(tx_dat_2), .M0(tx_dat_3), 
    .CE(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_3 ), 
    .Q1(\uart_tx1/DAT_2 ));
  uart_tx1_SLICE_326 \uart_tx1/SLICE_326 ( .M1(tx_dat_4), .M0(tx_dat_5), 
    .CE(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_5 ), 
    .Q1(\uart_tx1/DAT_4 ));
  uart_tx1_SLICE_327 \uart_tx1/SLICE_327 ( .M1(tx_dat_6), .M0(tx_dat_7), 
    .CE(\uart_tx1/DAT_7__N_915 ), .CLK(SD_CLK_c), .Q0(\uart_tx1/DAT_7 ), 
    .Q1(\uart_tx1/DAT_6 ));
  uart_tx1_SLICE_328 \uart_tx1/SLICE_328 ( .M1(\uart_tx1/FSM_7__N_807 ), 
    .M0(\uart_tx1/FSM_7__N_808 ), .CE(\uart_tx1/SMPL ), .CLK(SD_CLK_c), 
    .Q0(\uart_tx1/FSM_7__N_809 ), .Q1(\uart_tx1/FSM_7__N_808 ));
  DB_15_ \DB[15]_I ( .PADDI(DB_out_15), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_15), .DB15(DB[15]));
  DB_14_ \DB[14]_I ( .PADDI(DB_out_14), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_14), .DB14(DB[14]));
  DB_13_ \DB[13]_I ( .PADDI(DB_out_13), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_13), .DB13(DB[13]));
  DB_12_ \DB[12]_I ( .PADDI(DB_out_12), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_12), .DB12(DB[12]));
  DB_11_ \DB[11]_I ( .PADDI(DB_out_11), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_11), .DB11(DB[11]));
  DB_10_ \DB[10]_I ( .PADDI(DB_out_10), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_10), .DB10(DB[10]));
  DB_9_ \DB[9]_I ( .PADDI(DB_out_9), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_9), .DB9(DB[9]));
  DB_8_ \DB[8]_I ( .PADDI(DB_out_8), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_8), .DB8(DB[8]));
  DB_7_ \DB[7]_I ( .PADDI(DB_out_7), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_7), .DB7(DB[7]));
  DB_6_ \DB[6]_I ( .PADDI(DB_out_6), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_6), .DB6(DB[6]));
  DB_5_ \DB[5]_I ( .PADDI(DB_out_5), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_5), .DB5(DB[5]));
  DB_4_ \DB[4]_I ( .PADDI(DB_out_4), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_4), .DB4(DB[4]));
  DB_3_ \DB[3]_I ( .PADDI(DB_out_3), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_3), .DB3(DB[3]));
  DB_2_ \DB[2]_I ( .PADDI(DB_out_2), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_2), .DB2(DB[2]));
  DB_1_ \DB[1]_I ( .PADDI(DB_out_1), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_1), .DB1(DB[1]));
  DB_0_ \DB[0]_I ( .PADDI(DB_out_0), .PADDT(delay_tim_reset_N_508), 
    .PADDO(SD_DATA_TEMP_0), .DB0(DB[0]));
  uart_tx uart_tx_I( .PADDO(uart_tx_c), .uart_tx(uart_tx));
  led led_I( .PADDO(led_c), .led(led));
  ADR_12_ \ADR[12]_I ( .PADDO(ADR_c_12), .ADR12(ADR[12]));
  ADR_11_ \ADR[11]_I ( .PADDO(ADR_c_11), .ADR11(ADR[11]));
  ADR_10_ \ADR[10]_I ( .PADDO(ADR_c_10), .ADR10(ADR[10]));
  ADR_9_ \ADR[9]_I ( .PADDO(ADR_c_9), .ADR9(ADR[9]));
  ADR_8_ \ADR[8]_I ( .PADDO(ADR_c_8), .ADR8(ADR[8]));
  ADR_7_ \ADR[7]_I ( .PADDO(ADR_c_7), .ADR7(ADR[7]));
  ADR_6_ \ADR[6]_I ( .PADDO(ADR_c_6), .ADR6(ADR[6]));
  ADR_5_ \ADR[5]_I ( .PADDO(ADR_c_5), .ADR5(ADR[5]));
  ADR_4_ \ADR[4]_I ( .PADDO(ADR_c_4), .ADR4(ADR[4]));
  ADR_3_ \ADR[3]_I ( .PADDO(ADR_c_3), .ADR3(ADR[3]));
  ADR_2_ \ADR[2]_I ( .PADDO(ADR_c_2), .ADR2(ADR[2]));
  ADR_1_ \ADR[1]_I ( .PADDO(ADR_c_1), .ADR1(ADR[1]));
  ADR_0_ \ADR[0]_I ( .PADDO(ADR_c_0), .ADR0(ADR[0]));
  BA_1_ \BA[1]_I ( .PADDO(BA_c_1), .BA1(BA[1]));
  BA_0_ \BA[0]_I ( .PADDO(BA_c_0), .BA0(BA[0]));
  DQM_1_ \DQM[1]_I ( .PADDO(n4906), .DQM1(DQM[1]));
  DQM_0_ \DQM[0]_I ( .PADDO(n4906), .DQM0(DQM[0]));
  nCAS nCAS_I( .PADDO(nCAS_c), .nCAS(nCAS));
  CKE CKE_I( .PADDO(VCC_net), .CKE(CKE));
  nRAS nRAS_I( .PADDO(nRAS_c), .nRAS(nRAS));
  nWE nWE_I( .PADDO(n4908), .nWE(nWE));
  nCS nCS_I( .PADDO(GND_net), .nCS(nCS));
  SD_CLK SD_CLK_I( .PADDO(SD_CLK_c), .SD_CLK(SD_CLK));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  nreset nreset_I( .PADDI(nreset_c), .nreset(nreset));
  uart_rx uart_rx_I( .PADDI(uart_rx_c), .uart_rx(uart_rx));
  GSR_INST GSR_INST( .GSRNET(nreset_c));
  clk_multiply_PLLInst_0 \clk_multiply/PLLInst_0 ( .CLKI(clk_c), 
    .CLKFB(SD_CLK_c), .CLKOP(SD_CLK_c));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_0 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i4 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i3 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_1 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i2 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_2 ( input A1, DI1, CE, 
    LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i0 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \all_modules1/sdram_controller1/repeatTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_3 ( input A0, DI0, CE, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \all_modules1/sdram_controller1/repeatTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_4 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_5 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_6 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_repeatTimer_SLICE_7 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i6 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/repeatTimer/count__i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/repeatTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_8 ( input A0, DI0, CE, 
    LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i23 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \all_modules1/sdram_controller1/refreshTimer/add_6_25 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_9 ( input A1, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i22 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i21 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_23 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_10 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_3 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_11 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i20 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i19 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_21 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_12 ( input A1, DI1, 
    CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i0 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \all_modules1/sdram_controller1/refreshTimer/add_6_1 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_13 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i18 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i17 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_19 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_14 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i16 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i15 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_17 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_15 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i14 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i13 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_15 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_16 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_13 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_17 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i10 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_11 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_18 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_9 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_19 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i6 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i5 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_7 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_refreshTimer_SLICE_20 ( input A1, A0, 
    DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i4 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/refreshTimer/count__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ccu2 \all_modules1/sdram_controller1/refreshTimer/add_6_5 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_21 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_22 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_23 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_24 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_25 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_26 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_27 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_28 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_30 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_32 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 count_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 count_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 count_63__I_0_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_33 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre0003 count_i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20001 count_63__I_0_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_34 ( input A1, B0, DI1, LSR, CLK, FCI, output F0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \uart1/sub_10_add_2_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0004 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3333;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart1_SLICE_35 ( input A1, A0, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 \uart1/sub_10_add_2_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart1_SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0004 \uart1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \uart1/sub_10_add_2_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_37 ( input A1, A0, DI1, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 \uart1/sub_10_add_2_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_38 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \uart1/sub_10_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_39 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20007 \uart_tx1/add_523_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module uart_tx1_SLICE_40 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \uart_tx1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \uart_tx1/add_523_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0008 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module uart_tx1_SLICE_41 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/PS_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \uart_tx1/add_523_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 \uart_tx1/PS_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \uart_tx1/add_523_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_43 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \uart_tx1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20006 \uart_tx1/add_523_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_44 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0004 \uart_tx1/PS_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \uart_tx1/add_523_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_m_RAM1_SLICE_45 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo2/m_RAM1/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo2/m_RAM1/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo2/m_RAM1/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo2/m_RAM1/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo2/m_RAM1/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo2/m_RAM1/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo2/m_RAM1/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo2/m_RAM1/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module buffer ( input I, output Z );

  BUFBA INST1( .A(I), .Z(Z));
endmodule

module all_modules1_fifo2_SLICE_46 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo2/m_RAM1/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, WRE, 
    WCK, output DO0, DO1 );
  wire   TIELO;

  VLO GND1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(DI0), .DI1(DI1), .DI2(TIELO), 
    .DI3(TIELO), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(DO0), 
    .DO1(DO1), .DO2(), .DO3());
endmodule

module vmuxregsre0009 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module all_modules1_fifo2_SLICE_47 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0010 \all_modules1/fifo2/m_RAM1/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ec2dpram0010 ( input DI0, DI1, RA0, RA1, RA2, RA3, WA0, WA1, WA2, WA3, 
    WRE, WCK, output DO0, DO1 );
  wire   TIELO;

  VLO GND1( .Z(TIELO));
  DPR16X4C #("0x0000000000000000") inst0( .DI0(TIELO), .DI1(TIELO), .DI2(DI0), 
    .DI3(DI1), .WAD0(WA0), .WAD1(WA1), .WAD2(WA2), .WAD3(WA3), .WRE(WRE), 
    .WCK(WCK), .RAD0(RA0), .RAD1(RA1), .RAD2(RA2), .RAD3(RA3), .DO0(), .DO1(), 
    .DO2(DO0), .DO3(DO1));
endmodule

module all_modules1_fifo2_m_RAM0_SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo2/m_RAM0/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo2/m_RAM0/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo2/m_RAM0/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo2/m_RAM0/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo2/m_RAM0/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo2/m_RAM0/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo2/m_RAM0/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo2/m_RAM0/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_49 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo2/m_RAM0/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_50 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0010 \all_modules1/fifo2/m_RAM0/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo2/s_RAM_i0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_m_RAM1_SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo1/m_RAM1/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo1/m_RAM1/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo1/m_RAM1/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo1/m_RAM1/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo1/m_RAM1/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo1/m_RAM1/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo1/m_RAM1/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo1/m_RAM1/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo1/m_RAM1/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_53 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0010 \all_modules1/fifo1/m_RAM1/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_m_RAM0_SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output WADO0, WADO1, WADO2, WADO3, WDO0, WDO1, WDO2, WDO3 );

  buffer \all_modules1/fifo1/m_RAM0/WD0_INT ( .I(A1), .Z(WDO0));
  buffer \all_modules1/fifo1/m_RAM0/WD1_INT ( .I(B1), .Z(WDO1));
  buffer \all_modules1/fifo1/m_RAM0/WD2_INT ( .I(C1), .Z(WDO2));
  buffer \all_modules1/fifo1/m_RAM0/WD3_INT ( .I(D1), .Z(WDO3));
  buffer \all_modules1/fifo1/m_RAM0/WAD0_INT ( .I(A0), .Z(WADO0));
  buffer \all_modules1/fifo1/m_RAM0/WAD1_INT ( .I(B0), .Z(WADO1));
  buffer \all_modules1/fifo1/m_RAM0/WAD2_INT ( .I(C0), .Z(WADO2));
  buffer \all_modules1/fifo1/m_RAM0/WAD3_INT ( .I(D0), .Z(WADO3));

  specify
    (D1 => WDO3) = (0:0:0,0:0:0);
    (C1 => WDO2) = (0:0:0,0:0:0);
    (B1 => WDO1) = (0:0:0,0:0:0);
    (A1 => WDO0) = (0:0:0,0:0:0);
    (D0 => WADO3) = (0:0:0,0:0:0);
    (C0 => WADO2) = (0:0:0,0:0:0);
    (B0 => WADO1) = (0:0:0,0:0:0);
    (A0 => WADO0) = (0:0:0,0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram \all_modules1/fifo1/m_RAM0/RAM0 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, WRE, WCK, CE, CLK, output F0, Q0, F1, Q1, input WAD0, WAD1, WAD2, 
    WAD3, WD0, WD1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, WRE_dly, WCK_dly, CE_dly, 
         WAD0_dly, WAD1_dly, WAD2_dly, WAD3_dly, WD0_dly, WD1_dly;

  ec2dpram0010 \all_modules1/fifo1/m_RAM0/RAM1 ( .DI0(WD0_dly), .DI1(WD1_dly), 
    .RA0(A0), .RA1(B1), .RA2(C0), .RA3(D0), .WA0(WAD0_dly), .WA1(WAD1_dly), 
    .WA2(WAD2_dly), .WA3(WAD3_dly), .WRE(WRE_dly), .WCK(WCK_dly), .DO0(F0), 
    .DO1(F1));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/fifo1/s_RAM_i0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (WCK => F0) = (0:0:0,0:0:0);
    (WCK => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge WCK, WRE, 0:0:0, 0:0:0,,,, WCK_dly, WRE_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge WCK, WAD0, 0:0:0, 0:0:0,,,, WCK_dly, WAD0_dly);
    $setuphold (posedge WCK, WAD1, 0:0:0, 0:0:0,,,, WCK_dly, WAD1_dly);
    $setuphold (posedge WCK, WAD2, 0:0:0, 0:0:0,,,, WCK_dly, WAD2_dly);
    $setuphold (posedge WCK, WAD3, 0:0:0, 0:0:0,,,, WCK_dly, WAD3_dly);
    $setuphold (posedge WCK, WD0, 0:0:0, 0:0:0,,,, WCK_dly, WD0_dly);
    $setuphold (posedge WCK, WD1, 0:0:0, 0:0:0,,,, WCK_dly, WD1_dly);
    $width (posedge WCK, 0:0:0);
    $width (negedge WCK, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo1_SLICE_65 ( input C1, B1, A1, C0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \all_modules1/fifo1/i1101_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \all_modules1/fifo1/i1094_2_lut_rep_78 ( .A(A0), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo1/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/fifo1/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40012 \uart1/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \all_modules1/fifo1/i1108_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo1/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6006) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_67 ( input D1, C1, A1, C0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40014 \all_modules1/fifo1/i995_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \all_modules1/fifo1/i988_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \all_modules1/fifo1/o_addr_775__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/fifo1/o_addr_775__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_68 ( input D0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40015 \all_modules1/fifo2/i1304_2_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/fifo2/i_addr_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_69 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 \all_modules1/fifo2/i967_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/fifo2/i960_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \all_modules1/fifo2/i_addr_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/fifo2/i_addr_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40018 \all_modules1/fifo2/i2_4_lut_adj_74 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40019 \all_modules1/fifo2/i974_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo2/i_addr_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_71 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40020 \all_modules1/fifo2/i1353_4_lut_rep_57 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40021 \all_modules1/fifo2/i1300_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/fifo2/o_addr_773__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDD0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_72 ( input C1, B1, A1, C0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 \all_modules1/fifo2/i914_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \all_modules1/fifo2/i907_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \all_modules1/fifo2/o_addr_773__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/fifo2/o_addr_773__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_fifo2_SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40022 \all_modules1/fifo2/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40023 \all_modules1/fifo2/i921_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo2/o_addr_773__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF96F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_74 ( input D1, A1, D0, C0, B0, A0, 
    DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut40024 \all_modules1/sdram_controller1/i1_2_lut_rep_49 ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 \all_modules1/sdram_controller1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0008 \all_modules1/sdram_controller1/state_FSM_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \all_modules1/sdram_controller1/state_FSM_i1_rep_83 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40026 \all_modules1/fifo2/i2_4_lut_adj_77 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40027 \all_modules1/sdram_to_uart1/i1_4_lut_adj_103 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_to_uart1/state_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40028 \all_modules1/uart_to_sdram1/i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40029 \all_modules1/sdram_controller1/i3_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/rd_wt_operation_i0_i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_98 ( input C1, B1, D0, B0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40030 \all_modules1/fifo1/i1389_2_lut_rep_50 ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \all_modules1/fifo1/i3902_2_lut_2_lut ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo1/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_112 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40032 \all_modules1/sdram_controller1/arbBank/i3997/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40033 \all_modules1/sdram_controller1/arbBank/i3808_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i2 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i1 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7250) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_113 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40034 \all_modules1/sdram_controller1/i3807_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \all_modules1/sdram_controller1/arbBank/mux_870_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/rd_o_stb_133 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i3 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0032) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_114 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40036 \all_modules1/sdram_controller1/arbBank/i3999/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40037 \all_modules1/sdram_controller1/arbBank/i3806_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i5 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i4 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF32) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_115 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40038 \all_modules1/sdram_controller1/i3805_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \all_modules1/sdram_controller1/arbBank/mux_871_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/wt_o_stb_132 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i6 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_116 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40039 \all_modules1/sdram_controller1/arbBank/i4001/GATE ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40040 \all_modules1/sdram_controller1/arbBank/i3800_3_lut_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i8 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i7 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40041 \all_modules1/sdram_controller1/i3799_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \all_modules1/sdram_controller1/arbBank/mux_873_i3_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \uart1/RXDa_67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i9 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_118 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40043 \all_modules1/sdram_controller1/arbBank/mux_872_i3_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \all_modules1/sdram_controller1/arbBank/i3804_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i12 ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i10 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD5C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_SLICE_119 ( input C1, B1, D0, C0, 
    A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/SLICE_119_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/i3943/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40045 \all_modules1/sdram_controller1/arbBank/SLICE_119_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/SLICE_119_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \all_modules1/sdram_controller1/arbBank/i3943/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/i3943/GATE_H0 )
    );
  vmuxregsre0009 \all_modules1/sdram_controller1/arbBank/delay_0__i11 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/sdram_controller1/arbBank/SLICE_119_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/i3943/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/SLICE_119/all_modules1/sdram_controller1/arbBank/SLICE_119_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module all_modules1_SLICE_120 ( input B1, A1, D0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40047 \all_modules1/uart_to_sdram1/i3875_2_lut_rep_65 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40048 \all_modules1/sdram_controller1/i2_3_lut_3_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0004 \all_modules1/sdram_controller1/state_FSM_i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_122 ( input D1, B1, D0, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40031 i791_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 \all_modules1/sdram_controller1/delayTimer/i1299_2_lut_3_lut ( 
    .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/delayTimer/count__i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5599) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_delayTimer_SLICE_123 ( input C0, A0, DI0, 
    CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40011 \all_modules1/sdram_controller1/delayTimer/i1041_2_lut ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/delayTimer/count__i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_delayTimer_SLICE_124 ( input D1, C1, B1, 
    A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40050 \all_modules1/sdram_controller1/delayTimer/i1055_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \all_modules1/sdram_controller1/delayTimer/i1048_2_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/delayTimer/count__i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/delayTimer/count__i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_125 ( input D1, C1, B1, A1, D0, B0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40052 \all_modules1/sdram_controller1/i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40053 \all_modules1/sdram_controller1/i1382_3_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i10 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i11 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_126 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \all_modules1/sdram_controller1/i2_3_lut_4_lut_adj_84 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \all_modules1/sdram_controller1/i1309_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i7 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i8 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_127 ( input C1, B1, A1, D0, B0, A0, 
    DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 \all_modules1/sdram_controller1/i1349_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 \all_modules1/sdram_controller1/i1_3_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_128 ( input C1, B1, D0, C0, B0, A0, 
    DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40058 \all_modules1/sdram_controller1/i1_2_lut_rep_46 ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 \all_modules1/sdram_controller1/refreshTimer/i847_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 \all_modules1/sdram_controller1/state_FSM_i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_140 ( input C1, A1, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40060 \all_modules1/sdram_controller1/i1_2_lut_rep_66 ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \all_modules1/sdram_to_uart1/i1728_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0004 \all_modules1/sdram_to_uart1/state_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_150 ( input D1, C1, B1, A1, D0, C0, 
    A0, DI0, M0, LSR, CLK, output OFX0, Q0 );
  wire   
         \all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/SLICE_150_K1_H1 
         , GNDI, 
         \all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/i3844/GATE_H0 
         , VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40061 \all_modules1/uart_to_sdram1/SLICE_150_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/SLICE_150_K1_H1 )
    );
  lut40062 \all_modules1/uart_to_sdram1/i3844/GATE ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), 
    .Z(\all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/i3844/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0063 \all_modules1/uart_to_sdram1/next_state_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/uart_to_sdram1/SLICE_150_K0K1MUX ( 
    .D0(\all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/i3844/GATE_H0 )
    , 
    .D1(\all_modules1/uart_to_sdram1/SLICE_150/all_modules1/uart_to_sdram1/SLICE_150_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h330A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0063 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module all_modules1_uart_to_sdram1_SLICE_151 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40064 \all_modules1/uart_to_sdram1/i13_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \all_modules1/uart_to_sdram1/i24_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0063 \all_modules1/uart_to_sdram1/next_state_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7A2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_152 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, M0, LSR, CLK, output OFX0, Q0 );
  wire   
         \all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/SLICE_152_K1_H1 
         , 
         \all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/i3950/GATE_H0 
         , VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40066 \all_modules1/uart_to_sdram1/SLICE_152_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/SLICE_152_K1_H1 )
    );
  lut40067 \all_modules1/uart_to_sdram1/i3950/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/i3950/GATE_H0 )
    );
  vmuxregsre0063 \all_modules1/uart_to_sdram1/next_state_i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \all_modules1/uart_to_sdram1/SLICE_152_K0K1MUX ( 
    .D0(\all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/i3950/GATE_H0 )
    , 
    .D1(\all_modules1/uart_to_sdram1/SLICE_152/all_modules1/uart_to_sdram1/SLICE_152_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_153 ( input D1, B1, A1, D0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40068 \all_modules1/fifo1/i1_3_lut_adj_73 ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 \all_modules1/fifo1/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/rd_wt_operation_i1 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/rd_wt_operation_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_155 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40070 \all_modules1/uart_to_sdram1/i2_3_lut_rep_59_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40071 \all_modules1/uart_to_sdram1/i2693_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/rd_wt_operation_i0_i0 ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_156 ( input C0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40072 \uart1/i3859_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/fifo1/i_addr_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_157 ( input D1, C1, B1, A1, C0, B0, A0, DI0, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40073 \all_modules1/fifo1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \all_modules1/fifo1/i1302_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \all_modules1/fifo1/o_addr_775__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo1_SLICE_158 ( input D1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40015 \all_modules1/fifo1/i_addr_3__I_0_i2_2_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \all_modules1/fifo1/i1002_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo1/o_addr_775__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_159 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40075 \all_modules1/sdram_controller1/i792_2_lut_4_lut_4_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 \all_modules1/sdram_controller1/reduce_or_97_i1_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/sdram_controller1/state_FSM_i4 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_164 ( input D0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40077 \uart_tx1/DAT_7__I_54_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/ACKi_64 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_fifo2_SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40078 \all_modules1/fifo2/i1_4_lut_adj_75 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40079 \all_modules1/fifo2/i2038_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/fifo2/s_stb_33 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6FF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40080 \uart1/i1_4_lut_adj_66 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \uart1/i1_4_lut_adj_55 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart1/DAT_i0_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/DAT_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40080 \uart1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \uart1/i1_4_lut_adj_67 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart1/DAT_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/DAT_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40081 \uart1/i1_4_lut_adj_57 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \uart1/i1_4_lut_adj_56 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart1/DAT_i0_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/DAT_i0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \uart1/i1_4_lut_adj_60 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \uart1/i1_4_lut_adj_58 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart1/DAT_i0_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/DAT_i0_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40085 \uart1/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40086 \uart1/i170_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0087 \uart1/FSM_FSM_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30BA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0087 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module uart1_SLICE_172 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/FSM_FSM_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/FSM_FSM_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_173 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/FSM_FSM_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/FSM_FSM_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_174 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/FSM_FSM_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/FSM_FSM_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_175 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/FSM_FSM_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/FSM_FSM_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40088 \uart1/i3899_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 \uart1/i168_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/uart_to_sdram1/state_i0 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart1/FSM_FSM_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_177 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40090 \uart1/i1_2_lut_3_lut_adj_62 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \uart1/i1_2_lut_3_lut_adj_63 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0004 \uart1/PS_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \uart1/PS_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_178 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40092 \uart1/i1_2_lut_3_lut_adj_61 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \uart1/PS_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C8C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart1_SLICE_181 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0009 \uart1/RXDb_68 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \uart1/RXDc_69 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_182 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40093 \uart1/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \uart1/i3878_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/uart_to_sdram1/state_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart1/SMPL_72 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_183 ( input C1, B1, D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40095 \uart1/i1_2_lut_rep_47 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \uart1/i2_4_lut_adj_59 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \all_modules1/uart_to_sdram1/state_i2 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart1/STBo_76 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40097 \all_modules1/fifo2/i2_4_lut_adj_76 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40098 \uart_tx1/i1441_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0087 \uart_tx1/FSM_FSM_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6FF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_189 ( input C1, B1, A1, D0, C0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40099 \uart_tx1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \uart_tx1/i1443_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_191 ( input M1, M0, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40101 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_192 ( input D0, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40102 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \uart_tx1/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_193 ( input D1, C1, B1, A1, C0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40104 \uart_tx1/i35_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 count_24__I_0_1_lut( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3350) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_194 ( input D1, C1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40106 \all_modules1/sdram_controller1/refreshTimer/i4_3_lut ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \all_modules1/sdram_controller1/refreshTimer/i6_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40107 \uart_tx1/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \uart_tx1/i3892_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \uart_tx1/SMPL_61 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_196 ( input C1, B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40109 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut_adj_105 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40110 \uart_tx1/n4865_bdd_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0008 \uart_tx1/TXD_65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_i2482_SLICE_197 ( input D1, C1, B1, A1, D0, 
    C0, B0, M0, output OFX0 );
  wire   
         \all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/SLICE_197_K1_H1 
         , GNDI, 
         \all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/GATE_H0 
         ;

  lut40111 \all_modules1/uart_to_sdram1/i2482/SLICE_197_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), 
    .Z(\all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/SLICE_197_K1_H1 )
    );
  lut40112 \all_modules1/uart_to_sdram1/i2482/GATE ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \all_modules1/uart_to_sdram1/i2482/SLICE_197_K0K1MUX ( 
    .D0(\all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/GATE_H0 )
    , 
    .D1(\all_modules1/uart_to_sdram1/i2482/SLICE_197/all_modules1/uart_to_sdram1/i2482/SLICE_197_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_mux_525_i1_SLICE_198 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/SLICE_198_K1_H1 
         , 
         \all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/GATE_H0 
         ;

  lut40113 \all_modules1/sdram_controller1/mux_525_i1/SLICE_198_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/SLICE_198_K1_H1 )
    );
  lut40114 \all_modules1/sdram_controller1/mux_525_i1/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/mux_525_i1/SLICE_198_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/mux_525_i1/SLICE_198/all_modules1/sdram_controller1/mux_525_i1/SLICE_198_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE32) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i3975_SLICE_199 ( input D1, B1, 
    A1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/SLICE_199_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/GATE_H0 
         ;

  lut40115 \all_modules1/sdram_controller1/arbBank/i3975/SLICE_199_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/SLICE_199_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40116 \all_modules1/sdram_controller1/arbBank/i3975/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i3975/SLICE_199_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i3975/SLICE_199/all_modules1/sdram_controller1/arbBank/i3975/SLICE_199_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_arbBank_i3972_SLICE_200 ( input D1, C1, 
    A1, D0, C0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_K1_H1 
         , 
         \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/GATE_H0 
         ;

  lut40117 \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 \all_modules1/sdram_controller1/arbBank/i3972/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/GATE_H0 )
    );
  selmux2 \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_K0K1MUX ( 
    .D0(\all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/GATE_H0 )
    , 
    .D1(\all_modules1/sdram_controller1/arbBank/i3972/SLICE_200/all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \all_modules1/sdram_controller1/arbBank/i3972/SLICE_200_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module uart_tx1_i3937_SLICE_201 ( input C1, B1, A1, D0, C0, B0, M0, output 
    OFX0 );
  wire   GNDI, \uart_tx1/i3937/SLICE_201/uart_tx1/i3937/SLICE_201_K1_H1 , 
         \uart_tx1/i3937/SLICE_201/uart_tx1/i3937/GATE_H0 ;

  lut40119 \uart_tx1/i3937/SLICE_201_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\uart_tx1/i3937/SLICE_201/uart_tx1/i3937/SLICE_201_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40120 \uart_tx1/i3937/GATE ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(\uart_tx1/i3937/SLICE_201/uart_tx1/i3937/GATE_H0 ));
  selmux2 \uart_tx1/i3937/SLICE_201_K0K1MUX ( 
    .D0(\uart_tx1/i3937/SLICE_201/uart_tx1/i3937/GATE_H0 ), 
    .D1(\uart_tx1/i3937/SLICE_201/uart_tx1/i3937/SLICE_201_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_202 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40121 \uart_tx1/i36_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40122 \uart_tx1/n20_bdd_4_lut_3946 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i19 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i18 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h330F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F1D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40123 \all_modules1/fifo1/i1388_4_lut_rep_56 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40124 \all_modules1/uart_to_sdram1/i19_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/rd_wt_operation_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2AFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_204 ( input D1, C1, B1, D0, C0, B0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40125 \all_modules1/sdram_to_uart1/i19_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 \all_modules1/sdram_to_uart1/i1_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0004 \all_modules1/sdram_controller1/state_FSM_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_205 ( input D1, C1, A1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40127 \all_modules1/sdram_to_uart1/i21_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40128 \all_modules1/sdram_to_uart1/i3870_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_206 ( input C1, B1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40129 \all_modules1/sdram_to_uart1/i1_2_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 \all_modules1/sdram_to_uart1/i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_207 ( input C1, B1, A1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40131 \all_modules1/sdram_to_uart1/i17_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \all_modules1/sdram_to_uart1/i1_3_lut_adj_99 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_208 ( input D1, B1, A1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40133 \all_modules1/sdram_to_uart1/i17_3_lut_adj_102 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40134 \all_modules1/sdram_to_uart1/i1_3_lut_adj_101 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_209 ( input D1, C1, B1, A1, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40135 \all_modules1/sdram_to_uart1/i25_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40136 \all_modules1/sdram_to_uart1/i3913_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h15B5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_210 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40137 \all_modules1/sdram_controller1/i1_4_lut_adj_87 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40138 \all_modules1/sdram_controller1/i1_2_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_211 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40139 
    \all_modules1/sdram_controller1/delayTimer/period_3__I_0_i8_4_lut_rep_51 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40140 \all_modules1/sdram_controller1/i20_3_lut_rep_48_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA03F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_212 ( input D1, C1, B1, A1, C0, B0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40141 \all_modules1/sdram_controller1/i3_4_lut_adj_97 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40142 \all_modules1/sdram_controller1/i1_2_lut_rep_73 ( .A(GNDI), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i19 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i18 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_213 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40143 
    \all_modules1/sdram_controller1/delayTimer/delay_tim_flag_I_0_1_lut_4_lut 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 \all_modules1/sdram_controller1/i1_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i20 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_214 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40145 \all_modules1/sdram_controller1/i1_4_lut_adj_92 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40146 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_79 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4450) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_215 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40147 \all_modules1/sdram_controller1/i1_4_lut_adj_94 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40148 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_80 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_216 ( input D1, A1, D0, C0, B0, A0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40149 \all_modules1/sdram_controller1/i1_2_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40150 \all_modules1/sdram_controller1/i2_3_lut_4_lut_adj_81 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_217 ( input D1, C1, B1, D0, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40151 \all_modules1/sdram_controller1/i5_3_lut_rep_52 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \all_modules1/sdram_controller1/i1_4_lut_adj_82 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i22 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i21 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_218 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40153 \all_modules1/sdram_controller1/i1_4_lut_adj_93 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40154 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_83 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3210) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_219 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40155 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_98 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40156 \all_modules1/sdram_controller1/i4_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_220 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40145 \all_modules1/sdram_controller1/i1_4_lut_adj_95 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40157 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_85 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_221 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40147 \all_modules1/sdram_controller1/i2717_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40154 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_86 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_222 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40158 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_96 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \all_modules1/sdram_controller1/i1_4_lut_adj_89 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i23 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_223 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40145 \all_modules1/sdram_controller1/i1_4_lut_adj_91 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40160 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_90 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i17 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i16 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_224 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40161 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut_adj_78 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \all_modules1/sdram_controller1/refreshTimer/i1_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_225 ( input D1, C1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40163 \all_modules1/sdram_controller1/refreshTimer/i3_2_lut ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40164 \all_modules1/sdram_controller1/refreshTimer/i5_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_226 ( input D1, C1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40165 \all_modules1/fifo2/i969_2_lut_rep_62_3_lut ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40166 \all_modules1/fifo2/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBBE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_227 ( input D1, C1, B1, A1, D0, C0, B0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40167 \uart1/i3906_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40168 \all_modules1/fifo1/i3861_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i23 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i22 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC8C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC33C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_228 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40169 \all_modules1/fifo1/i3816_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40170 \all_modules1/fifo1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_229 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40171 \uart1/i1_2_lut_rep_54_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40172 \uart1/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_230 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40173 \uart1/i1_2_lut_rep_55_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40174 \uart1/i1_2_lut_3_lut_4_lut_adj_64 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_231 ( input D1, C1, B1, A1, C0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40175 \uart1/i1_2_lut_3_lut_4_lut_adj_72 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40176 \uart1/i1_2_lut_rep_80 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_232 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40107 \uart1/i1_2_lut_3_lut_4_lut_adj_68 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40177 \uart1/i1_2_lut_rep_63_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_233 ( input D1, C1, B1, A1, D0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40178 \uart1/i1_2_lut_3_lut_4_lut_adj_71 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40179 \uart1/i1_2_lut_rep_64_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_234 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40180 \all_modules1/uart_to_sdram1/i1_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40181 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_235 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40182 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut_adj_107 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40183 \all_modules1/uart_to_sdram1/i2_3_lut_4_lut_adj_104 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_236 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40184 \all_modules1/uart_to_sdram1/i1_2_lut_3_lut_adj_106 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40185 \all_modules1/uart_to_sdram1/i3885_2_lut_3_lut ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_237 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40186 \all_modules1/sdram_controller1/i795_2_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40187 \all_modules1/uart_to_sdram1/i797_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_238 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40188 \all_modules1/sdram_controller1/i2765_2_lut_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40189 \all_modules1/sdram_controller1/i2708_2_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_239 ( input D1, C1, B1, A1, C0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40190 \all_modules1/sdram_controller1/i1_2_lut_4_lut_adj_88 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40191 \all_modules1/sdram_controller1/i2797_3_lut_rep_53 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF37) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40192 \all_modules1/sdram_to_uart1/i3910_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40193 \all_modules1/sdram_to_uart1/i1_4_lut_adj_100 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_241 ( input D1, C1, B1, A1, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40194 \all_modules1/sdram_controller1/i2_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40195 \all_modules1/sdram_to_uart1/i3916_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0302) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_242 ( input D1, C1, B1, A1, D0, B0, 
    A0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40196 \all_modules1/sdram_controller1/i2768_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40197 \all_modules1/sdram_controller1/i3867_2_lut_3_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1110) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_243 ( input D1, C1, B1, A1, D0, C0, 
    B0, M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40198 \all_modules1/sdram_controller1/i2796_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40199 \all_modules1/sdram_controller1/i2781_2_lut_3_lut ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_244 ( input C1, B1, A1, D0, C0, B0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40200 \all_modules1/sdram_controller1/i2779_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \all_modules1/sdram_controller1/i2780_2_lut_3_lut ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_DATA_TEMP__i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_245 ( input D1, A1, D0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40202 \all_modules1/sdram_controller1/i3889_2_lut ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40203 \all_modules1/sdram_controller1/i23_2_lut_2_lut ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_246 ( input D1, C1, B1, A1, C0, B0, 
    M1, M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40204 \all_modules1/sdram_controller1/i3803_2_lut_rep_61_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40142 \all_modules1/sdram_controller1/i2698_2_lut_rep_79 ( .A(GNDI), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \all_modules1/sdram_controller1/SD_ADR_TEMP__i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_247 ( input D1, B1, A1, D0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40205 \all_modules1/sdram_controller1/arbBank/i3954_else_2_lut ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40206 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_70 ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i11 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i10 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_248 ( input D1, C1, B1, C0, B0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40207 \all_modules1/sdram_controller1/arbBank/i3956_else_2_lut ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40142 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_74 ( .A(GNDI), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_249 ( input D1, B1, A1, D0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40208 \all_modules1/sdram_controller1/arbBank/i3952_else_2_lut ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_75 ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40209 \all_modules1/fifo1/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40210 \all_modules1/fifo1/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i21 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i20 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6FF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h965A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_251 ( input C1, A1, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40060 \all_modules1/sdram_controller1/i3893_2_lut ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 \all_modules1/sdram_controller1/i1334_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_sdram_controller1_SLICE_252 ( input C1, B1, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40142 \all_modules1/sdram_controller1/arbBank/i1_2_lut_rep_68 ( .A(GNDI), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40212 \all_modules1/sdram_controller1/arbBank/i1_2_lut ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40213 \uart1/i1_2_lut_3_lut_4_lut_adj_69 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40213 \uart1/i1_2_lut_3_lut_4_lut_adj_65 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/sdram_to_uart1/sd_data_temp_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_254 ( input D1, C1, A1, D0, C0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40177 \uart_tx1/i3908_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 \uart_tx1/i1660_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i17 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i16 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_255 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40215 \uart1/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40216 \uart1/i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i15 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i14 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_256 ( input D1, B1, D0, C0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40217 i790_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40218 \all_modules1/sdram_controller1/refreshTimer/i2_2_lut ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_257 ( input D1, C1, B1, A1, C0, B0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40174 \uart1/i1_2_lut_3_lut_4_lut_adj_70 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40142 \uart1/i1_2_lut_rep_81 ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i13 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_adr_i12 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module all_modules1_sdram_controller1_SLICE_258 ( input D1, B1, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40219 \all_modules1/sdram_controller1/i3882_2_lut_rep_67 ( .A(GNDI), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40220 \all_modules1/sdram_controller1/arbBank/i2713_2_lut_rep_69 ( .A(A0), 
    .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0009 \all_modules1/sdram_controller1/RD_DATA_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0033) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module all_modules1_uart_to_sdram1_SLICE_283 ( input M1, M0, CE, CLK, output 
    Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i8 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0009 \all_modules1/uart_to_sdram1/sd_data_i9 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_315 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/DATo_i0_i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0003 \uart1/DATo_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_316 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/DATo_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0003 \uart1/DATo_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_317 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/DATo_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0003 \uart1/DATo_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_318 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, CE_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart1/DATo_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  vmuxregsre0003 \uart1/DATo_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart1_SLICE_319 ( input M0, CE, CLK, output Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0003 \uart1/FSM_FSM_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_324 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart_tx1/DAT_i0_i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/DAT_i0_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_325 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart_tx1/DAT_i0_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/DAT_i0_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_326 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart_tx1/DAT_i0_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/DAT_i0_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_327 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart_tx1/DAT_i0_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/DAT_i0_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module uart_tx1_SLICE_328 ( input M1, M0, CE, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \uart_tx1/FSM_FSM_i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \uart_tx1/FSM_FSM_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DB_15_ ( output PADDI, input PADDT, PADDO, inout DB15 );

  xo2iobuf DB_pad_15( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB15), .PADI(DB15));

  specify
    (PADDT => DB15) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB15) = (0:0:0,0:0:0);
    (DB15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB15, 0:0:0);
    $width (negedge DB15, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module DB_14_ ( output PADDI, input PADDT, PADDO, inout DB14 );

  xo2iobuf DB_pad_14( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB14), .PADI(DB14));

  specify
    (PADDT => DB14) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB14) = (0:0:0,0:0:0);
    (DB14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB14, 0:0:0);
    $width (negedge DB14, 0:0:0);
  endspecify

endmodule

module DB_13_ ( output PADDI, input PADDT, PADDO, inout DB13 );

  xo2iobuf DB_pad_13( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB13), .PADI(DB13));

  specify
    (PADDT => DB13) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB13) = (0:0:0,0:0:0);
    (DB13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB13, 0:0:0);
    $width (negedge DB13, 0:0:0);
  endspecify

endmodule

module DB_12_ ( output PADDI, input PADDT, PADDO, inout DB12 );

  xo2iobuf DB_pad_12( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB12), .PADI(DB12));

  specify
    (PADDT => DB12) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB12) = (0:0:0,0:0:0);
    (DB12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB12, 0:0:0);
    $width (negedge DB12, 0:0:0);
  endspecify

endmodule

module DB_11_ ( output PADDI, input PADDT, PADDO, inout DB11 );

  xo2iobuf DB_pad_11( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB11), .PADI(DB11));

  specify
    (PADDT => DB11) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB11) = (0:0:0,0:0:0);
    (DB11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB11, 0:0:0);
    $width (negedge DB11, 0:0:0);
  endspecify

endmodule

module DB_10_ ( output PADDI, input PADDT, PADDO, inout DB10 );

  xo2iobuf DB_pad_10( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB10), .PADI(DB10));

  specify
    (PADDT => DB10) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB10) = (0:0:0,0:0:0);
    (DB10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB10, 0:0:0);
    $width (negedge DB10, 0:0:0);
  endspecify

endmodule

module DB_9_ ( output PADDI, input PADDT, PADDO, inout DB9 );

  xo2iobuf DB_pad_9( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB9), .PADI(DB9));

  specify
    (PADDT => DB9) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB9) = (0:0:0,0:0:0);
    (DB9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB9, 0:0:0);
    $width (negedge DB9, 0:0:0);
  endspecify

endmodule

module DB_8_ ( output PADDI, input PADDT, PADDO, inout DB8 );

  xo2iobuf DB_pad_8( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB8), .PADI(DB8));

  specify
    (PADDT => DB8) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB8) = (0:0:0,0:0:0);
    (DB8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB8, 0:0:0);
    $width (negedge DB8, 0:0:0);
  endspecify

endmodule

module DB_7_ ( output PADDI, input PADDT, PADDO, inout DB7 );

  xo2iobuf DB_pad_7( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB7), .PADI(DB7));

  specify
    (PADDT => DB7) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB7) = (0:0:0,0:0:0);
    (DB7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB7, 0:0:0);
    $width (negedge DB7, 0:0:0);
  endspecify

endmodule

module DB_6_ ( output PADDI, input PADDT, PADDO, inout DB6 );

  xo2iobuf DB_pad_6( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB6), .PADI(DB6));

  specify
    (PADDT => DB6) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB6) = (0:0:0,0:0:0);
    (DB6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB6, 0:0:0);
    $width (negedge DB6, 0:0:0);
  endspecify

endmodule

module DB_5_ ( output PADDI, input PADDT, PADDO, inout DB5 );

  xo2iobuf DB_pad_5( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB5), .PADI(DB5));

  specify
    (PADDT => DB5) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB5) = (0:0:0,0:0:0);
    (DB5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB5, 0:0:0);
    $width (negedge DB5, 0:0:0);
  endspecify

endmodule

module DB_4_ ( output PADDI, input PADDT, PADDO, inout DB4 );

  xo2iobuf DB_pad_4( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB4), .PADI(DB4));

  specify
    (PADDT => DB4) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB4) = (0:0:0,0:0:0);
    (DB4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB4, 0:0:0);
    $width (negedge DB4, 0:0:0);
  endspecify

endmodule

module DB_3_ ( output PADDI, input PADDT, PADDO, inout DB3 );

  xo2iobuf DB_pad_3( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB3), .PADI(DB3));

  specify
    (PADDT => DB3) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB3) = (0:0:0,0:0:0);
    (DB3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB3, 0:0:0);
    $width (negedge DB3, 0:0:0);
  endspecify

endmodule

module DB_2_ ( output PADDI, input PADDT, PADDO, inout DB2 );

  xo2iobuf DB_pad_2( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB2), .PADI(DB2));

  specify
    (PADDT => DB2) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB2) = (0:0:0,0:0:0);
    (DB2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB2, 0:0:0);
    $width (negedge DB2, 0:0:0);
  endspecify

endmodule

module DB_1_ ( output PADDI, input PADDT, PADDO, inout DB1 );

  xo2iobuf DB_pad_1( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB1), .PADI(DB1));

  specify
    (PADDT => DB1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB1) = (0:0:0,0:0:0);
    (DB1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB1, 0:0:0);
    $width (negedge DB1, 0:0:0);
  endspecify

endmodule

module DB_0_ ( output PADDI, input PADDT, PADDO, inout DB0 );

  xo2iobuf DB_pad_0( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(DB0), .PADI(DB0));

  specify
    (PADDT => DB0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DB0) = (0:0:0,0:0:0);
    (DB0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge DB0, 0:0:0);
    $width (negedge DB0, 0:0:0);
  endspecify

endmodule

module uart_tx ( input PADDO, output uart_tx );
  wire   GNDI;

  xo2iobuf0221 uart_tx_pad( .I(PADDO), .T(GNDI), .PAD(uart_tx));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => uart_tx) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0221 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module led ( input PADDO, output led );
  wire   GNDI;

  xo2iobuf0221 led_pad( .I(PADDO), .T(GNDI), .PAD(led));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_12_ ( input PADDO, output ADR12 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_12( .I(PADDO), .T(GNDI), .PAD(ADR12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR12) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_11_ ( input PADDO, output ADR11 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_11( .I(PADDO), .T(GNDI), .PAD(ADR11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR11) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_10_ ( input PADDO, output ADR10 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_10( .I(PADDO), .T(GNDI), .PAD(ADR10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR10) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_9_ ( input PADDO, output ADR9 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_9( .I(PADDO), .T(GNDI), .PAD(ADR9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR9) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_8_ ( input PADDO, output ADR8 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_8( .I(PADDO), .T(GNDI), .PAD(ADR8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_7_ ( input PADDO, output ADR7 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_7( .I(PADDO), .T(GNDI), .PAD(ADR7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR7) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_6_ ( input PADDO, output ADR6 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_6( .I(PADDO), .T(GNDI), .PAD(ADR6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR6) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_5_ ( input PADDO, output ADR5 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_5( .I(PADDO), .T(GNDI), .PAD(ADR5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_4_ ( input PADDO, output ADR4 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_4( .I(PADDO), .T(GNDI), .PAD(ADR4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_3_ ( input PADDO, output ADR3 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_3( .I(PADDO), .T(GNDI), .PAD(ADR3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_2_ ( input PADDO, output ADR2 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_2( .I(PADDO), .T(GNDI), .PAD(ADR2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_1_ ( input PADDO, output ADR1 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_1( .I(PADDO), .T(GNDI), .PAD(ADR1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADR_0_ ( input PADDO, output ADR0 );
  wire   GNDI;

  xo2iobuf0221 ADR_pad_0( .I(PADDO), .T(GNDI), .PAD(ADR0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ADR0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_1_ ( input PADDO, output BA1 );
  wire   GNDI;

  xo2iobuf0221 BA_pad_1( .I(PADDO), .T(GNDI), .PAD(BA1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA1) = (0:0:0,0:0:0);
  endspecify

endmodule

module BA_0_ ( input PADDO, output BA0 );
  wire   GNDI;

  xo2iobuf0221 BA_pad_0( .I(PADDO), .T(GNDI), .PAD(BA0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => BA0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_1_ ( input PADDO, output DQM1 );
  wire   GNDI;

  xo2iobuf0221 DQM_pad_1( .I(PADDO), .T(GNDI), .PAD(DQM1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQM_0_ ( input PADDO, output DQM0 );
  wire   GNDI;

  xo2iobuf0221 DQM_pad_0( .I(PADDO), .T(GNDI), .PAD(DQM0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => DQM0) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCAS ( input PADDO, output nCAS );
  wire   GNDI;

  xo2iobuf0221 nCAS_pad( .I(PADDO), .T(GNDI), .PAD(nCAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module CKE ( input PADDO, output CKE );
  wire   GNDI;

  xo2iobuf0221 CKE_pad( .I(PADDO), .T(GNDI), .PAD(CKE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => CKE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nRAS ( input PADDO, output nRAS );
  wire   GNDI;

  xo2iobuf0221 nRAS_pad( .I(PADDO), .T(GNDI), .PAD(nRAS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nRAS) = (0:0:0,0:0:0);
  endspecify

endmodule

module nWE ( input PADDO, output nWE );
  wire   GNDI;

  xo2iobuf0221 nWE_pad( .I(PADDO), .T(GNDI), .PAD(nWE));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nWE) = (0:0:0,0:0:0);
  endspecify

endmodule

module nCS ( input PADDO, output nCS );
  wire   GNDI;

  xo2iobuf0221 nCS_pad( .I(PADDO), .T(GNDI), .PAD(nCS));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => nCS) = (0:0:0,0:0:0);
  endspecify

endmodule

module SD_CLK ( input PADDO, output SD_CLK );
  wire   GNDI;

  xo2iobuf0221 SD_CLK_pad( .I(PADDO), .T(GNDI), .PAD(SD_CLK));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => SD_CLK) = (0:0:0,0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0222 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module xo2iobuf0222 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module nreset ( output PADDI, input nreset );

  xo2iobuf0222 nreset_pad( .Z(PADDI), .PAD(nreset));

  specify
    (nreset => PADDI) = (0:0:0,0:0:0);
    $width (posedge nreset, 0:0:0);
    $width (negedge nreset, 0:0:0);
  endspecify

endmodule

module uart_rx ( output PADDI, input uart_rx );

  xo2iobuf0222 uart_rx_pad( .Z(PADDI), .PAD(uart_rx));

  specify
    (uart_rx => PADDI) = (0:0:0,0:0:0);
    $width (posedge uart_rx, 0:0:0);
    $width (negedge uart_rx, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule

module clk_multiply_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \clk_multiply/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 8;
  defparam INST10.CLKI_DIV = 3;
  defparam INST10.CLKOP_CPHASE = 3;
  defparam INST10.CLKOP_DIV = 4;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
